{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#objectius","title":"Objectius","text":"<ul> <li>Con\u00e9ixer els conceptes de control de versions mitjan\u00e7ant Git i el seu \u00fas en el context del desenvolupament de programari.</li> <li>Aprendre a utilitzar Git per a gestionar projectes de desenvolupament de programari.</li> <li>Con\u00e9ixer i aplicar estrat\u00e8gies de ramificaci\u00f3 en projectes de desenvolupament de programari col\u00b7laboratiu.</li> <li>Con\u00e9ixer i utilitzar plataformes d'allotjament de repositoris en l\u00ednia com GitHub.</li> <li>Con\u00e9ixer i utilitzar eines de gesti\u00f3 de projectes proporcionades per GitHub.</li> <li>Promoure la utilitzaci\u00f3 de Git i GitHub a l\u2019aula com a eina de treball col\u00b7laboratiu.</li> <li>Proporcionar estrat\u00e8gies als docents per incorporar la utilitzaci\u00f3 de Git i GitHub a l'aula.</li> </ul>"},{"location":"#continguts","title":"Continguts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git<ul> <li>Instal\u00b7laci\u00f3.</li> <li>Configuraci\u00f3.</li> <li>Estructura d'un repositori.</li> <li>Flux de treball.</li> <li>Inicialitzaci\u00f3 d'un repositori.</li> <li>Realitzaci\u00f3 de canvis: <code>add</code> i <code>commit</code>.</li> </ul> </li> <li>Bloc 2: Branques<ul> <li>Creaci\u00f3 de branques.</li> <li>Navegar entre branques.</li> <li>Sincronitzaci\u00f3 de branques.</li> <li>Fusi\u00f3 de branques: <code>merge</code>.</li> <li>Canvi de base: <code>rebase</code>.</li> <li>Resoluci\u00f3 de conflictes.</li> </ul> </li> <li>Bloc 3: Remots<ul> <li>Creaci\u00f3 d'un repositori remot a GitHub.</li> <li>Configurar un repositori remot.</li> <li>M\u00e8todes d'autenticaci\u00f3.</li> <li>Associaci\u00f3 entre branques locals i remotes.</li> <li>Publicaci\u00f3 i incorporaci\u00f3 de canvis.</li> <li>Clonaci\u00f3 d'un repositori remot.</li> </ul> </li> <li>Bloc 4: Git avan\u00e7at<ul> <li>Eliminaci\u00f3 de canvis: <code>reset</code> i <code>revert</code>.</li> <li>Etiquetes: <code>tags</code>.</li> <li>Reserva de canvis: <code>stash</code>.</li> <li>C\u00f2pia de canvis: <code>cherry-pick</code>.</li> <li>Fusi\u00f3 de canvis en un sol commit: <code>squash</code>.</li> </ul> </li> <li>Bloc 5: Estrat\u00e8gies de ramificaci\u00f3<ul> <li>Branques de prop\u00f2sit \u00fanic.</li> <li>M\u00e8todes d'integraci\u00f3 de branques de funcionalitat.</li> </ul> </li> <li>Bloc 6: Gesti\u00f3 de projectes a GitHub<ul> <li>Debats (discussions).</li> <li>Incid\u00e8ncies (issues).</li> <li>GitHub Projects.</li> <li>Forks i Pull Requests.</li> <li>CI/CD amb GitHub Actions.</li> <li>GitHub Pages.</li> </ul> </li> <li>Bloc 7: GitHub com a plataforma educativa<ul> <li>Organitzacions a GitHub.</li> <li>GitHub Classroom.</li> <li>Estrat\u00e8gies per a l'\u00fas de Git i GitHub a l'aula.</li> </ul> </li> </ul>"},{"location":"#dirigit-a","title":"Dirigit a","text":"<ul> <li>Professorat de la fam\u00edlia d'Inform\u00e0tica i Comunicacions.</li> </ul>"},{"location":"informacio/","title":"Informaci\u00f3","text":""},{"location":"informacio/#llicencia","title":"Llic\u00e8ncia","text":"<p>Aquest material est\u00e0 llicenciat baix la llic\u00e8ncia Creative Commons  Reconeixement-NoComercial-CompartirIgual 4.0 Internacional.</p>"},{"location":"informacio/#correccions","title":"Correccions","text":"<p>Si trobeu alguna errada en el material, podeu comunicar-la mitjan\u00e7ant l'apartat Issues al repositori de   GitHub indicant:</p> <ol> <li>La p\u00e0gina on s'ha trobat l'errada: <code>url</code></li> <li>La correcci\u00f3 a realitzar.</li> </ol>"},{"location":"informacio/#suggeriments","title":"Suggeriments","text":"<p>Si voleu fer alguna sugger\u00e8ncia o millora, podeu fer-ho mitjan\u00e7ant l'apartat Discussions al repositori de   GitHub.</p>"},{"location":"informacio/#contribucions","title":"Contribucions","text":"<p>Aquest repositori accepta contribucions.</p> <p>Si voleu contribuir al material, podeu obrir una Pull Request.</p> <p>No obstant aix\u00f2, es recomana obrir una Issue o Discussi\u00f3 abans per debatre el canvi.</p>"},{"location":"informacio/#desenvolupament","title":"Desenvolupament","text":"<p>Aquest lloc web est\u00e0 desenvolupat amb les seg\u00fcents eines i llibreries:</p> <ul> <li>MkDocs: Generador de llocs web est\u00e0tics amb  Markdown i  Python.</li> <li> Material for MkDocs: Tema per a MkDocs.</li> <li>Python Markdown: Processador de  Markdown per a  Python.</li> <li>PyMdown Extensions: Extensions per a Python Markdown.</li> <li>Pygments: Ressaltat de sintaxi de codi amb  Python.</li> <li> Git: Sistema de control de versions.</li> <li>GitHub Pages: Servei de p\u00e0gines web est\u00e0tiques de  GitHub.</li> <li>GitHub Actions: Automatitzaci\u00f3 de tasques de  GitHub.</li> </ul>"},{"location":"apunts/","title":"Apunts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git</li> <li>Bloc 2: Branques</li> <li>Bloc 3: Remots</li> <li>Bloc 4: Git avan\u00e7at</li> <li>Bloc 5: Estrat\u00e8gies de ramificaci\u00f3</li> <li>Bloc 6: Gesti\u00f3 de projectes a GitHub</li> <li>Bloc 7: GitHub com a plataforma educativa</li> </ul>"},{"location":"apunts/01_introduccio/01_introduccio/","title":"Introducci\u00f3 a Git","text":"","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#que-es-git","title":"Qu\u00e8 \u00e9s Git?","text":"<p>Git \u00e9s un sistema de control de versions lliure i distribu\u00eft dissenyat per gestionar xicotets i grans projectes amb rapidesa i efici\u00e8ncia. L'objectiu principal de Git \u00e9s controlar i gestionar els canvis realitzats en una enorme quantitat de fitxers d'una manera f\u00e0cil i eficient.</p> <p>Git va ser dissenyat en 2005 per Linus Torvalds, creador del kernel del sistema operatiu Linux, i des d'aleshores, s'ha convertit en una eina fonamental i imprescindible en la gesti\u00f3 de codi font en projectes col\u00b7laboratius.</p> <p>Git est\u00e0 basat en repositoris, que s'inicialitzen en un directori concret i contenen tota la informaci\u00f3 dels canvis realitzats en tot l'arbre de directoris i fitxers a partir d'aquest directori.</p> <p>Els principals objectius i caracter\u00edstiques de Git s\u00f3n:</p> <ul> <li>Control de versions: Git realitza un seguiment de les modificacions als arxius al llarg del temps,     la qual cosa permet als desenvolupadors vore i recuperar versions anteriors del seu codi.     Aquesta caracter\u00edstica \u00e9s essencial per a treballar en equips i per a solucionar problemes o errors.</li> <li>Distribu\u00eft: Cada c\u00f2pia d'un repositori Git cont\u00e9 tot l'historial de canvis i pot operar de manera independent.     Aix\u00f2 facilita el treball fora de l\u00ednia i la col\u00b7laboraci\u00f3 en equips distribu\u00efts.</li> <li>Branca i fusi\u00f3: Git facilita la creaci\u00f3 de branques (branching) per a desenvolupar caracter\u00edstiques     o solucionar problemes sense afectar la branca principal.     Despr\u00e9s, pots fusionar (merge) les branques de nou en la branca principal quan estiguen a punt.</li> <li>Gesti\u00f3 de conflictes: Git ofereix eines per a gestionar conflictes en cas que dues o m\u00e9s persones hagen realitzat     canvis en la mateixa part del codi.     Els desenvolupadors poden resoldre aquests conflictes manualment.</li> <li>Col\u00b7laboraci\u00f3: Git facilita la col\u00b7laboraci\u00f3 en projectes de codi obert o en equips,     ja que permet a m\u00faltiples persones treballar en el mateix projecte de manera eficient.     Plataformes com GitHub, GitLab i Bitbucket s'utilitzen comunament per a allotjar repositoris Git en l\u00ednia i col\u00b7laborar en projectes.</li> <li>Codi obert i gratu\u00eft: Git \u00e9s de codi obert i gratu\u00eft, la qual cosa significa que qualsevol pot utilitzar-lo sense cost i contribuir al desenvolupament de l'eina.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Git est\u00e0 disponible a https://git-scm.com/ per a Windows, macOS i Linux.</p> UbuntuWindows <pre><code>sudo apt update\nsudo apt install git\n</code></pre> <p>Descarrega i executa l'instal\u00b7lador de Git des de https://git-scm.com/</p> <p>Una vegada instal\u00b7lat, pots utilitzar la consola Git Bash. \u00c9s una terminal basada l'int\u00e8rpret Bash, que et permetr\u00e0 realitzar les comandes de Git en la consola.</p> <p>Per defecte, Git utilitza l'editor <code>ViM</code>, un editor de text per terminal molt potent, per\u00f2 dif\u00edcil i poc intu\u00eftiu per treballar.</p> <p>Si desitgeu canviar l'editor per defecte, podeu utilitzar la seg\u00fcent comanda des de la consola:</p> <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre> <p>Editors de text</p> WindowsLinuxMultiplataforma <ul> <li><code>notepad</code>. Ve instal\u00b7lat per defecte.</li> <li>Notepad++.</li> </ul> <ul> <li><code>gedit</code>. Ve instal\u00b7lat per defecte en Ubuntu.</li> <li><code>nano</code>. Editor de text b\u00e0sic per terminal.</li> <li><code>vim</code>. Editor de text avan\u00e7at per terminal.<ul> <li><code>:w</code> per guardar.</li> <li><code>:q</code> per eixir.</li> </ul> </li> </ul> <ul> <li>Visual Estudio Code</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#per-que-la-terminal","title":"Per qu\u00e8 la terminal?","text":"<p>En aquest material, utilitzarem la terminal per a interactuar amb Git, per\u00f2 aix\u00f2 no significa que siga l'\u00fanica manera de fer-ho. De fet, pr\u00e0cticament tots els entorns de desenvolupament moderns tenen integraci\u00f3 amb Git, la qual cosa permet realitzar les mateixes operacions que proporciona la terminal, per\u00f2 de manera m\u00e9s visual i intu\u00eftiva.</p> <p>No obstant aix\u00f2, \u00e9s important con\u00e9ixer com funcionen les comandes de Git en la terminal, per diferents raons:</p> <ul> <li>Portabilitat: La terminal \u00e9s un entorn com\u00fa en tots els sistemes operatius i en qualsevol entorn de desenvolupament.</li> <li>Flexibilitat: La terminal permet realitzar operacions m\u00e9s avan\u00e7ades i personalitzades que les interf\u00edcies gr\u00e0fiques.</li> <li>Comprensi\u00f3: Permet entendre com funcionen les comandes de Git i els processos que realitza en el sistema.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#inicialitzacio-dun-repositori-git-init","title":"Inicialitzaci\u00f3 d'un repositori (<code>git init</code>)","text":"<p>Per a comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori en un directori concret. <pre><code>git init [&lt;directory&gt;]\n</code></pre></p> <ul> <li><code>directory</code>: Directori on es vol inicialitzar el repositori. Si no s'especifica, s'utilitza el directori actual.</li> </ul> <p>Aquesta comanda crea un directori ocult anomenat <code>.git</code> que cont\u00e9 tota la informaci\u00f3 relativa al Repositori Local.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git init</code>: https://git-scm.com/docs/git-init</p> Exemple: Inicialitzaci\u00f3 d'un repositori <pre><code>jpuigcerver@fp:~ $ mkdir git_introduccio\njpuigcerver@fp:~ $ cd git_introduccio\njpuigcerver@fp:~/git_introduccio $ ls -a # (1)!\n.  ..\njpuigcerver@fp:~/git_introduccio $ git init\nhint: Using 'master' as the name for the initial branch. This default branch name\nhint: is subject to change. To configure the initial branch name to use in all\nhint: of your new repositoris, which will suppress this warning, call:\nhint:\nhint: git config --global init.dafaultBranch &lt;name&gt;\nhint:\nhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\nhint: 'development'. The just-created branch can be renamed via this command:\nhint:\nhint: git branch -m &lt;name&gt;\nInitialized empty Git repository in /home/jpuigcerver/git_introduccio/.git/\njpuigcerver@fp:~/git_introduccio (master) $ git branch -m main\njpuigcerver@fp:~/git_introduccio (main) $ ls -a # (2)!\n.  ..  .git/\njpuigcerver@fp:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nNothing to commit (create/copy files and use \"git add\" to track)\n</code></pre> <ol> <li>L'opci\u00f3 <code>-a</code> mostra tots els fitxers, inclosos els ocults que comencen amb un punt.</li> <li>S'ha creat el directori ocult <code>.git</code> que cont\u00e9 tota la informaci\u00f3 del repositori.</li> </ol> <p>L'ordre <code>git status</code> ens mostra l'estat actual del nostre repositori. Podem observar que estem en la branca <code>main</code> i que de moment no s'ha realitzat cap canvi.</p> <p>Note</p> <p>S'ha canviat el nom de la branca principal de <code>master</code> a <code>main</code> per a seguir les recomanacions de la comunitat de desenvolupament.</p> <p>Vegeu: Regarding Git and Branch Naming</p>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#eliminar-un-repositori","title":"Eliminar un repositori","text":"<p>Per a eliminar un repositori de Git, simplement cal eliminar el directori ocult <code>.git</code>.</p> <pre><code>rm -rf .git\n</code></pre> <ul> <li><code>-r</code>: Opci\u00f3 per a eliminar de manera recursiva.</li> <li><code>-f</code>: Opci\u00f3 per a for\u00e7ar l'eliminaci\u00f3 sense confirmaci\u00f3 dels elements protegits contra escriptura.</li> </ul> <p>Perill</p> <p>Sigues extremadament cautel\u00f3s amb l'\u00fas de la comanda <code>rm -rf</code>, ja que elimina tots els fitxers, inclosos aquells protegits contra escriptura.</p> Exemple: Eliminar un repositori <pre><code>jpuigcerver@fp:~/git_introduccio (main) $ ls -a\n.  ..  .git\njpuigcerver@fp:~/git_introduccio (main) $ rm -rf .git\njpuigcerver@fp:~/git_introduccio $ git status\nfatal: not a git repository (or any of the parent directories): .git\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#estructura-dun-repositori-de-git","title":"Estructura d'un repositori de Git","text":"<p>En aquesta introducci\u00f3, ens centrarem en com funcionen els repositoris de Git d'una manera local, on encara no haurem connectat cap repositori remot.</p> <p>Abans que res, hem de con\u00e9ixer l'estructura d'un repositori de Git.</p> <p></p> <p>Figura 1. Components d'un repositori de Git.</p> <p>En la figura anterior podem observar el que es coneix com Entorn de desenvolupament o Development Environment, Aquesta part est\u00e0 present localment en el teu dispositiu on realitzar\u00e0s els canvis i desenvolupament del teu projecte.</p> <p>D'una altra banda, est\u00e0 el Repositori Remot, que normalment s'allotja a un servidor accessible per tots els desenvolupadors.</p> <p>Dins de l'Entorn de desenvolupament trobem els seg\u00fcents components:</p> <ul> <li>Directori de treball o Working directory: Directori o carpeta del sistema on s'emmagatzema localment     els continguts del repositori.</li> <li>\u00c0rea de preparaci\u00f3 o Staging Area: \u00c0rea que s'utilitza per indicar quins canvis volen ser confirmats.</li> <li>Repositori local o Local repository: Repositori emmagatzemat localment on es queden registrats totes les versions     i canvis realitzats en els fitxers del repositori, aix\u00ed com la informaci\u00f3 de les branques i les etiquetes.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#flux-de-treball","title":"Flux de treball","text":"<p>Quan treballes amb un projecte de Git, els canvis es realitzen sobre el Directori de treball. Aquests canvis poden ser:</p> <ul> <li>Crear un nou fitxer. El nou fitxer comen\u00e7a en l'estat Untracked, \u00e9s a dir, no est\u00e0 sotm\u00e8s a seguiment per Git.</li> <li>Modificar un fitxer amb seguiment. El fitxer modificat es trobar\u00e0 en l'estat Modified.</li> <li>Eliminar un fitxer amb seguiment. El fitxer eliminat es trobar\u00e0 en l'estat Deleted.</li> </ul> <p>Si executem l'ordre <code>git status</code>, ens mostrar\u00e0 l'estat actual dels fitxers amb els tres estats anteriors de color roig.</p> <p>Aquests canvis no formen part del repositori. Abans, cal afegir-los a l'\u00c0rea de preparaci\u00f3 amb la comanda <code>git add</code>, que canviar\u00e0 l'estat dels fitxers Staged (mostrat en color verd amb <code>git status</code>).</p> <p>Per \u00faltim, tots els canvis de l'\u00c0rea de preparaci\u00f3 es poden confirmar i fer efectius en el Repositori local amb la comanda <code>git commit</code>.</p> <p></p> <p>Figura 2. Flux de treball en un repositori de Git.</p> <p>Info</p> <p>La comanda <code>git restore</code> es presenta a l'apartat Descartar canvis.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de:</p> <ul> <li><code>git status</code>: https://git-scm.com/docs/git-status</li> <li><code>git add</code>: https://git-scm.com/docs/git-add</li> <li><code>git commit</code>: https://git-scm.com/docs/git-commit</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#afegir-fitxers-a-larea-de-preparacio-git-add","title":"Afegir fitxers a l'\u00c0rea de Preparaci\u00f3 (<code>git add</code>)","text":"<p>Afegim el primer fitxer <code>README.md</code> al nostre repositori.</p> <p>Info</p> <p>\u00c9s recomanable crear un fitxer <code>README.md</code> en tots els projectes per a descriure el seu prop\u00f2sit, com s'utilitza i qualsevol altra informaci\u00f3 rellevant.</p> <pre><code>jpuigcerver@fp:~/git_introduccio (main) $ echo \"# 01 - Introducci\u00f3 a Git\" &gt; README.md\njpuigcerver@fp:~/git_introduccio (main) $ echo \"Estem aprenent a utilitzar Git!\" &gt;&gt; README.md\njpuigcerver@fp:~/git_introduccio (main) $ cat README.md\n# 01 - Introducci\u00f3 a Git\nEstem aprenent a utilitzar Git!\njpuigcerver@fp:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nNothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>S'ha creat el fitxer <code>README.md</code> i s'ha afegit el seu contingut. Aquest fitxer resideix en el Directori de treball.</p> <p>La comanda <code>git status</code> ens mostra que no s'est\u00e0 realitzant cap seguiment del fitxer <code>README.md</code>, que es troba en l'estat Untracked.</p> <p></p> <p>Figura 3. Fitxer sense seguiment (untracked).</p> <p>Per afegir els canvis al nostre repositori, el seg\u00fcent pas \u00e9s afegir els canvis a l'\u00c0rea de Preparaci\u00f3 amb l'ordre <code>git add</code>. Aquesta comanda permet especificar quins canvis es desitja afegir.</p> <p>Info</p> <pre><code>git add &lt;path&gt;\n</code></pre> <ul> <li><code>path</code>: Ruta del fitxer o directori que es vol afegir a l'\u00c0rea de Preparaci\u00f3.</li> </ul> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git add README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\n</code></pre> <p>Vegem com el fitxer <code>README.md</code> ha passat a l'estat Staged i est\u00e0 preparat per a ser confirmat.</p> <p></p> <p>Figura 4. Fitxer a l'\u00c0rea de Preparaci\u00f3 (staged).</p>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#confirmar-canvis-git-commit","title":"Confirmar canvis (<code>git commit</code>)","text":"<p>Una vegada afegits tots els canvis a l'\u00c0rea de Preparaci\u00f3, ja podem confirmar-los mitjan\u00e7ant l'ordre <code>git commit</code>.</p> <pre><code>git commit [-a] [-m \"&lt;message&gt;\"]\n</code></pre> <ul> <li><code>-a</code>: Opcional. Afegeix tots els fitxers modificats i eliminats a l'\u00c0rea de Preparaci\u00f3 (sense necessitat de <code>git add</code>).</li> <li><code>-m \"&lt;message&gt;\"</code>: Opcional. Missatge que descriu el canvi realitzat en el <code>commit</code>.</li> </ul> <p>Warning</p> <p>Si no s'especifica el missatge amb <code>-m</code>, s'obrir\u00e0 l'editor per defecte(1) per a introduir el missatge del <code>commit</code>.</p> <ol> <li><code>ViM</code> per defecte. Pot ser configurat:      <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre></li> </ol> <p></p> <p>Figura 5. Estat del repositori de Git abans de fer un <code>commit</code>.</p> <p>Aquesta ordre crea un nou <code>commit</code>, que \u00e9s una instant\u00e0nia de l'estat actual dels fitxers del repositori i que cont\u00e9 tota la informaci\u00f3 relativa als canvis realitzats.</p> <p>Cadascun dels <code>commit</code> cont\u00e9 la seg\u00fcent informaci\u00f3:</p> <ul> <li>Autor: Persona que ha realitzat el <code>commit</code>.</li> <li>Correu electr\u00f2nic: Correu electr\u00f2nic de l'autor.</li> <li>Data: Data i hora en qu\u00e8 s'ha realitzat el <code>commit</code>.</li> <li>Missatge: Descripci\u00f3 dels canvis realitzats en el <code>commit</code>.</li> <li>Identificador o <code>hash</code>: Codi \u00fanic generat autom\u00e0ticament que identifica el <code>commit</code>.</li> <li>Canvis: Llista de fitxers modificats, afegits o eliminats en el <code>commit</code> i els canvis realitzats en ells respecte de la versi\u00f3 anterior.</li> </ul> <p>Per tant, abans de realitzar un <code>commit</code>, \u00e9s necessari configurar el nom i el correu electr\u00f2nic de l'autor.</p> <pre><code>git config --global user.name &lt;name&gt;\ngit config --global user.email &lt;email&gt;\n</code></pre> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git config --global user.name \"Joan Puigcerver Ib\u00e1\u00f1ez\"\njpuigcerver@FP:~/git_introduccio (main) $ git config --global user.email \"j.puigcerveribanez@edu.gva.es\"\n</code></pre> <p>Amb aquesta informaci\u00f3 configurada, ja podem realitzar el nostre primer <code>commit</code>.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\njpuigcerver@FP:~/git_introduccio (main) $ git commit -m \"Added README.md\"\n[main (root-commit) 8e70293] Added README.md\n 1 file changed, 2 insertions(+)\n create mode 100644 README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nnothing to commit, working tree clean\n</code></pre> <p>Vegem que l'estat del nostre repositori ha canviat i ja no hi ha canvis pendents de confirmar. A m\u00e9s, s'ha creat el primer <code>commit</code> amb el missatge <code>Added README.md</code> i identificador <code>8e70293</code>.</p> <p></p> <p>Figura 6. Estat del repositori de Git despr\u00e9s de fer un <code>commit</code>.</p> <p>Podem consultar la informaci\u00f3 del nou <code>commit</code> amb l'ordre <code>git show</code>.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git show 8e70293\ncommit 8e702933d5dbec9ee71100a1599ae4491085e1aa (HEAD -&gt; main)\nAuthor: Joan Puigcerver Ib\u00e1\u00f1ez &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Fri Oct 13 16:06:59 2023 +0200\n\n    Added README.md\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..6d747b3\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1,2 @@\n+# 01 - Introducci\u00f3 a Git\n+Estem aprenent a utilitzar Git!\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#diferencies-entre-versions-git-diff","title":"Difer\u00e8ncies entre versions (<code>git diff</code>)","text":"<p>Una ferramenta molt \u00fatil de Git \u00e9s <code>git diff</code>, que permet comparar les difer\u00e8ncies entre els canvis realitzats en el Directori de treball o l'\u00c0rea de Preparaci\u00f3 respecte del Repositori local.</p> <p>La sintaxi amb les opcions b\u00e0siques es: <pre><code>git diff [--staged] [&lt;path&gt;]\n</code></pre></p> <ul> <li><code>--staged</code>: Opcional. Mostra les difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local.     Si no s'indica, es compararan les difer\u00e8ncies entre el Directori de treball i el Repositori local.</li> <li><code>&lt;path&gt;</code>: Opcional. Fitxer o directori sobre el qual es vol comparar les difer\u00e8ncies.     Si no s'indica, es compararan totes les difer\u00e8ncies.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git diff</code>: https://git-scm.com/docs/git-diff</p> <p></p> <p>Figura 7. Resum de <code>git diff</code>.</p> Exemple: Difer\u00e8ncies entre el Directori de treball i el Repositori local <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> del Directori de treball i el Repositori local.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ echo \"Aquesta \u00e9s una l\u00ednia nova\" &gt;&gt; README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@FP:~/git_introduccio (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> Exemple: Difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> de l'\u00c0rea de Preparaci\u00f3 i el Repositori local.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git add README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   README.md\n\njpuigcerver@FP:~/git_introduccio (main) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> <p>Interpretaci\u00f3 de <code>git diff</code></p> <p>El format de les l\u00ednies de <code>git diff</code> \u00e9s el seg\u00fcent:</p> <ul> <li><code>diff --git a/README.md b/README.md</code>: Mostra els fitxers comparats.<ul> <li><code>a/README.md</code>: Fitxer original.</li> <li><code>b/README.md</code>: Fitxer modificat.</li> </ul> </li> <li><code>index 6d747b3..f3b3b3e 100644</code>: Mostra el hash dels fitxers comparats i els permisos.</li> <li><code>--- a/README.md</code>: Mostra la ruta del fitxer original.</li> <li><code>+++ b/README.md</code>: Mostra la ruta del fitxer modificat.</li> <li><code>@@ -1,2 +1,3 @@</code>: Mostra la posici\u00f3 de les l\u00ednies modificades.<ul> <li><code>-1,2</code>: Els canvis comencen a la l\u00ednia 1 i afecten 2 l\u00ednies en el fitxer original.</li> <li><code>+1,3</code>: Els canvis comencen a la l\u00ednia 1 i afecten 3 l\u00ednies en el fitxer modificat.</li> </ul> </li> </ul> <p>Despr\u00e9s, es mostren les l\u00ednies modificades:</p> <ul> <li><code>-</code>: L\u00ednia eliminada.</li> <li><code>+</code>: L\u00ednia afegida.</li> </ul> <p>En l'exemple anterior, s'ha afegit la l\u00ednia <code>Aquesta \u00e9s una l\u00ednia nova</code> al fitxer <code>README.md</code>.</p>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#descartar-canvis-git-restore","title":"Descartar canvis (<code>git restore</code>)","text":"<p>Una altra ferramenta \u00fatil de Git \u00e9s <code>git restore</code>, que permet descartar els canvis realitzats en els fitxers del Directori de treball o l'\u00c0rea de Preparaci\u00f3.</p> <p>La sintaxi amb les opcions b\u00e0siques \u00e9s: <pre><code>git restore [--staged] &lt;path&gt;\n</code></pre></p> <ul> <li><code>--staged</code>: Opcional. Descarta els canvis realitzats en l'\u00c0rea de Preparaci\u00f3.     Si no s'indica, es descartaran els canvis realitzats en el Directori de treball.</li> <li><code>&lt;path&gt;</code>: Opcional. Fitxer o directori sobre el qual es vol descartar els canvis.</li> </ul> <p>Podeu consultar la Figura 2 per a veure un resum del comportament de <code>git restore</code>.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git restore</code>: https://git-scm.com/docs/git-restore</p> <p>Perill</p> <p>La comanda <code>git restore</code> descarta els canvis realitzats en els fitxers sense possibilitat de recuperar-los.</p> Exemple: Descartar canvis en l'\u00c0rea de Preparaci\u00f3 <p>Continuant amb l'exemple anterior, descartem els canvis realitzats en el fitxer <code>README.md</code> de l'\u00c0rea de Preparaci\u00f3.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   README.md\n\njpuigcerver@FP:~/git_introduccio (main) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\njpuigcerver@FP:~/git_introduccio (main) $ git restore --staged README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n</code></pre> <p>??? example \"Exemple: Descartar canvis en el Directori de treball\"     Descartem els canvis realitzats en el fitxer <code>README.md</code> del Directori de treball.</p> <pre><code>!!! danger\n    Aquesta comanda descartar\u00e0 els canvis realitzats en el fitxer `README.md` sense possibilitat de recuperar-los.\n\n```shellconsole\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@FP:~/git_introduccio (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\njpuigcerver@FP:~/git_introduccio (main) $ git restore README.md\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nnothing to commit, working tree clean\n```\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#historic-de-canvis-git-log","title":"Hist\u00f2ric de canvis (<code>git log</code>)","text":"<p>Git registra tots els canvis confirmats (<code>commit</code>) en el Repositori local. L'hist\u00f2ric de canvis es pot consultar amb l'ordre <code>git log</code>.</p> <pre><code>git log [options]\n</code></pre> <p>Documentaci\u00f3</p> <p>Consulta totes les opcions a la documentaci\u00f3 oficial de <code>git log</code>: https://git-scm.com/docs/git-log</p> Exemple: Hist\u00f2ric de canvis <p>Modifiquem novament el fitxer <code>README.md</code> i realitzem un nou <code>commit</code>.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ echo \"Aquesta \u00e9s una altra l\u00ednia\" &gt;&gt; README.md\njpuigcerver@FP:~/git_introduccio (main) $ git commit -a -m \"Added another line to README.md\"# (1)!\n[main c9fc6c8] Added another line to README.md\n 1 file changed, 1 insertions(+)\n</code></pre> <ol> <li>Amb <code>-a</code> afegim tots els canvis realitzats al fitxer <code>README.md</code> a l'\u00c0rea de Preparaci\u00f3 sense necessitat de <code>git add</code>.</li> </ol> <p>Consultem l'hist\u00f2ric de canvis amb <code>git log</code>.</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git log\ncommit c9fc6c856c2d52744b85a6f8d92feac496e60bd6 (HEAD -&gt; main)\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Mon Oct 16 11:43:20 2023 +0200\n\n    Added another line to README.md\n\ncommit 8e702933d5dbec9ee71100a1599ae4491085e1aa\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Fri Oct 13 16:06:59 2023 +0200\n\n    Added Readme.md\n</code></pre> <p>S'observa tota la informaci\u00f3 dels <code>commit</code> realitzats, com l'autor, la data, el missatge i l'identificador.</p> <p>L'ordre <code>git log</code> admet moltes opcions per a personalitzar com es mostren els <code>commit</code> i la seua informaci\u00f3.</p> <p>Una possible combinaci\u00f3 d'opcions per visualitzar l'hist\u00f2ric de canvis de manera m\u00e9s compacta i intu\u00eftiva \u00e9s:</p> <pre><code>git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n</code></pre> Exemple: Hist\u00f2ric de canvis compacte <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n* c9fc6c8 - (2 minutes ago) Added another line to README.md - Joan Puigcerver (HEAD -&gt; main)\n* 8e70293 - (3 days ago) Added Readme.md - Joan Puigcerver\n</code></pre> <p>No obstant aix\u00f2, no \u00e9s pr\u00e0ctic recordar aquesta comanda. Per aix\u00f2, podem configurar un alias per a simplificar la seua crida.</p> <pre><code>git config --global alias.lg \"log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\"\ngit config --global alias.lga \"lg --all\"\n</code></pre> Exemple: Hist\u00f2ric de canvis compacte amb \u00e0lies <p>Despr\u00e9s de configurar l'\u00e0lies <code>git lg</code> per a l'ordre anterior, podem cridar-lo de la seg\u00fcent manera:</p> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ git lg\n* c9fc6c8 - (2 minutes ago) Added another line to README.md - Joan Puigcerver (HEAD -&gt; main)\n* 8e70293 - (3 days ago) Added README.md - Joan Puigcerver\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#configuracio-git-config","title":"Configuraci\u00f3 (<code>git config</code>)","text":"<p>Git permet configurar diferents par\u00e0metres per a personalitzar el seu comportament mitjan\u00e7ant l'ordre <code>git config</code>.</p> <pre><code>git config [--global] &lt;key&gt; &lt;value&gt;\n</code></pre> <ul> <li><code>--global</code>: Opcional. Configura el par\u00e0metre de manera global per a tots els repositoris.     Si no s'indica, la configuraci\u00f3 es realitzar\u00e0 \u00fanicament per al repositori actual.</li> </ul> <p>Fixa't</p> <p>Fixeu-vos que ja hem utilitzat aquesta comanda per configurar els seg\u00fcents aspectes:</p> <ul> <li>El nom (<code>user.name</code>) i el correu electr\u00f2nic (<code>user.email</code>) de l'autor dels <code>commit</code></li> <li>L'editor per defecte (<code>core.editor</code>).</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#fitxer-de-configuracio-gitconfig","title":"Fitxer de configuraci\u00f3 (<code>.gitconfig</code>)","text":"<p>La configuraci\u00f3 <code>--global</code> s'emmagatzema en el fitxer <code>.gitconfig</code>, situat del directori de l'usuari.</p> LinuxWindows <pre><code>/home/&lt;username&gt;/.gitconfig\n</code></pre> <pre><code>C:\\Users\\&lt;username&gt;\\.gitconfig\n</code></pre> Exemple: Configuraci\u00f3 .gitconfig<pre><code>[core]\n    editor = vim # Editor per defecte\n\n[init]\n    defaultBranch = main # Nom de la branca principal per defecte\n\n[user]\n    name = Joan Puigcerver Ib\u00e1\u00f1ez\n    email = j.puigcerveribanez@edu.gva.es\n\n[alias]\n    lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n    lga = lg --all\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#ignorar-fitxers-gitignore","title":"Ignorar fitxers (<code>.gitignore</code>)","text":"<p>En un projecte, hi ha fitxers que no volem incloure en el repositori, com arxius temporals, binaris o fitxers de configuraci\u00f3. Git permet ignorar aquests fitxers mitjan\u00e7ant el fitxer <code>.gitignore</code>, que cont\u00e9 una llista de patrons de fitxers els quals Git no tindr\u00e0 en compte.</p> <p>Aquest fitxer pot estar situat en qualsevol directori del repositori i Git ignorar\u00e0 per a tots els fitxers i subdirectoris d'aquest que complisquen algun dels patrons especificats.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>.gitignore</code>: https://git-scm.com/docs/gitignore</p> <p>Llista de patrons:</p> <ul> <li>https://git-scm.com/docs/gitignore#_pattern_format</li> <li>https://www.w3schools.com/git/git_ignore.asp?remote=github</li> </ul> Exemple: Ignorar fitxers .gitignore<pre><code># ignore ALL .log files\n*.log\n\n# ignore ALL files in ANY directory named temp\ntemp/\n</code></pre> <pre><code>jpuigcerver@FP:~/git_introduccio (main) $ mkdir temp\njpuigcerver@FP:~/git_introduccio (main) $ touch temp/file.txt\njpuigcerver@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        temp/file.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\njpuigcerver@FP:~/git_introduccio (main) $ echo \"temp/\" &gt; .gitignore\njpuigcerver@FP:~/git_introduccio (main) $ git status # (1)!\nOn branch main\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        .gitignore\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <ol> <li>El fitxer <code>temp/file.txt</code> no apareix en l'estat del repositori despr\u00e9s de crear el fitxer <code>.gitignore</code>.</li> </ol>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/01_introduccio/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://git-scm.com/book/en/v2</li> <li>https://github.com/UnseenWizzard/git_training</li> <li>https://www.theserverside.com/feature/Why-GitHub-renamed-its-master-branch-to-main</li> <li>https://stackoverflow.com/questions/35430584/how-is-the-git-hash-calculated</li> <li>https://en.wikipedia.org/wiki/Diff</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/02_transparencies/","title":"Transpar\u00e8ncies: Introducci\u00f3 a Git","text":""},{"location":"apunts/01_introduccio/02_transparencies/#introduccio-a-git","title":"Introducci\u00f3 a Git","text":""},{"location":"apunts/01_introduccio/02_transparencies/#introduccio-a-git-i-la-seua-aplicacio-a-laula","title":"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula","text":""},{"location":"apunts/01_introduccio/02_transparencies/#que-es-git","title":"Qu\u00e8 \u00e9s Git?","text":"<p>Sistema de control de versions lliure i distribu\u00eft.</p> <p>https://git-scm.com/</p> <ul> <li>Control de versions</li> <li>Facilita la col\u00b7laboraci\u00f3</li> <li>Ramificaci\u00f3 i gesti\u00f3 de conflictes</li> </ul>"},{"location":"apunts/01_introduccio/02_transparencies/#git-vs-github","title":"Git vs GitHub","text":"<p>Git \u00e9s el sistema de control de versions.</p> <p>GitHub o GitLab s\u00f3n un servei d'allotjament de repositoris de Git.</p>   https://github.com    https://gitlab.com"},{"location":"apunts/01_introduccio/02_transparencies/#estructura-dun-repositori","title":"Estructura d'un repositori","text":""},{"location":"apunts/01_introduccio/02_transparencies/#inicialitzar-un-repositori","title":"Inicialitzar un repositori","text":"<pre><code>mkdir git_introduccio\ncd git_introduccio\ngit init\n</code></pre>"},{"location":"apunts/01_introduccio/02_transparencies/#area-de-preparacio","title":"\u00c0rea de preparaci\u00f3","text":"<pre><code>git add &lt;files&gt;\n</code></pre>"},{"location":"apunts/01_introduccio/02_transparencies/#confirmar-canvis","title":"Confirmar canvis","text":"<pre><code>git commit [-m &lt;message&gt;]\n</code></pre>"},{"location":"apunts/01_introduccio/02_transparencies/#mostrar-commit","title":"Mostrar commit","text":"<pre><code>git show [ref]\n</code></pre>"},{"location":"apunts/01_introduccio/02_transparencies/#diferencies","title":"Difer\u00e8ncies","text":"<pre><code>git diff [--staged]\n</code></pre>"},{"location":"apunts/01_introduccio/02_transparencies/#historic-de-canvis","title":"Hist\u00f2ric de canvis","text":"<pre><code>git log\n</code></pre> <p>\u00c0lies: <pre><code>git config --global alias.lg \"log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\"\ngit config --global alias.lga \"lg --all\"\n</code></pre></p>"},{"location":"apunts/01_introduccio/02_transparencies/#descartar-canvis","title":"Descartar canvis","text":"<pre><code>git restore &lt;files&gt;\n</code></pre>"},{"location":"apunts/01_introduccio/03_exercici/","title":"Exercici: Introducci\u00f3 a Git","text":""},{"location":"apunts/01_introduccio/03_exercici/#objectius","title":"Objectius","text":"<p>Els objectius d'aquests exercici s\u00f3n:</p> <ul> <li>Con\u00e9ixer com crear i inicialitzar un repositori de Git localment.</li> <li>Con\u00e9ixer com afegir fitxers al repositori local.</li> <li>Con\u00e9ixer com realitzar canvis en el repositori local.</li> <li>Con\u00e9ixer com consultar l'estat del repositori local.</li> <li>Con\u00e9ixer com consultar la hist\u00f2ria de canvis del repositori local.</li> <li>Con\u00e9ixer les configuracions b\u00e0siques de Git.</li> </ul>"},{"location":"apunts/01_introduccio/03_exercici/#exercici","title":"Exercici","text":"<p>Important</p> <p>Comprova l'estat del repositori amb <code>git status</code> despr\u00e9s de cada ordre per entendre els diferents estats dels fitxers.</p> <ol> <li>Crea un directori anomenat <code>bloc1_exercici</code> en la teua carpeta de treball.</li> <li>Inicialitza un repositori de Git en aquest directori.</li> <li>Crea un fitxer anomenat <code>llibres.txt</code> i afegeix tres llibres que t'agraden.</li> <li>Fes un primer commit. Tria un missatge significatiu.</li> <li>Afegeix un altre llibre a <code>llibres.txt</code>.</li> <li>Fes un segon commit.</li> <li>Crea un fitxer anomenat <code>musica.txt</code> i afegeix tres can\u00e7ons que t'agraden.</li> <li>Crea un fitxer anomenat <code>pelicules.txt</code> i afegeix tres pel\u00b7l\u00edcules que t'agraden.</li> <li>Fes un tercer commit que sols incloga el fitxer <code>musica.txt</code>.</li> <li>Crea un fitxer anomenat <code>series.txt</code> i afegeix tres s\u00e8ries que t'agraden.</li> <li>Fes un quart commit que incloga els fitxers <code>pelicules.txt</code> i <code>series.txt</code>.</li> <li>Modifica el fitxer <code>llibres.txt</code> per a eliminar un dels llibres.</li> <li>Fes un cinqu\u00e9 commit.</li> <li>Modifica el fitxer <code>pelicules.txt</code> per a afegir una pel\u00b7l\u00edcula.</li> <li>Desf\u00e9s aquest canvi.</li> <li>Afegeix el fitxer <code>{data}.log</code> amb qualsevol contingut.<ul> <li><code>{data}</code> \u00e9s la data actual en format <code>YYYYMMDD</code>.</li> </ul> </li> <li>Configura el repositori perqu\u00e8 ignore els fitxers amb extensi\u00f3 <code>.log</code>.</li> <li>Fes un commit amb aquesta configuraci\u00f3.</li> <li>Crea la carpeta <code>tmp</code> i c\u00f2pia tots els fitxers de text a aquesta carpeta.</li> <li>Configura el repositori perqu\u00e8 ignore la carpeta <code>tmp</code>.</li> <li>Fes un commit amb aquesta configuraci\u00f3.</li> <li>Comprova la hist\u00f2ria de canvis del repositori.</li> </ol>"},{"location":"apunts/01_introduccio/03_exercici/#bibliografia","title":"Bibliografia","text":"<ul> <li>Basat en l'exercici de la sessi\u00f3 1 del curs     Gesti\u00f3 de la tasca docent con GitHub     de Pedro Prieto.</li> </ul>"},{"location":"apunts/02_branques/01_branques/","title":"Branques","text":"","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#introduccio","title":"Introducci\u00f3","text":"<p>Les branques s\u00f3n una de les caracter\u00edstiques m\u00e9s importants de Git, que permet el desenvolupament col\u00b7laboratiu i en paral\u00b7lel d'un projecte.</p> <p>Moltes de les estrat\u00e8gies de Git per desenvolupar projectes es basen a realitzar els canvis en branques independents que, una vegada acabades, s'integren en la branca principal. La branca principal d'un projecte originalment s'anomenava <code>master</code>, per\u00f2 \u00faltimament \u00e9s preferible utilitzar el nom <code>main</code> per evitar la nomenclatura master/slave (amo/esclau), que t\u00e9 connotacions racistes.</p> <p>Info</p> <p>S'ha canviat el nom de la branca principal de <code>master</code> a <code>main</code> per a seguir les recomanacions de la comunitat de desenvolupament.</p> <p>Vegeu: Regarding Git and Branch Naming</p> Preparaci\u00f3 repositori d'exemple <p>En aquest material treballarem sobre un nou repositori local.</p> <p>Inicialitzaci\u00f3: <pre><code>git init ~/git_branques\ncd ~/git_branques\necho \"# Bloc: Branques\" &gt; README.md\ngit add README.md\ngit commit -m \"T\u00edtol\"\n</code></pre></p> <pre><code>jpuigcerver@fp:~ $ git init ~/git_branques\nInitialized empty Git repository in /home/jpuigcerver/git_branques/.git/\njpuigcerver@fp:~ $ cd ~/git_branques\njpuigcerver@fp:~/git_branques (main) $ branch -m main # (1)!\njpuigcerver@fp:~/git_branques (main) $ echo \"# Bloc: Branques\" &gt; README.md\njpuigcerver@fp:~/git_branques (main) $ git add README.md\njpuigcerver@fp:~/git_branques (main) $ git commit -m \"T\u00edtol\"\n[master (root-commit) 0b1b3b4] T\u00edtol\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <ol> <li>Canviem el nom de la branca principal a <code>main</code>.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#branques","title":"Branques","text":"<p>Una branca \u00e9s una l\u00ednia de desenvolupament independent. En Git, una branca \u00e9s un simple punter a un commit, que avan\u00e7a a mesura que es fan nous commits sobre aquesta.</p> <p></p> <p>Figura 1. Estructura de branques inicial.</p> Exemple: Estructura de branques inicial <p>L'estructura de branques inicial del repositori que utilitzarem en aquest material \u00e9s la seg\u00fcent \u00e9s el que es mostra a la Figura 1.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>Vegem que tenim un \u00fanic <code>commit</code> amb l'identificador <code>0b1b3b4</code>. A m\u00e9s, existeix una \u00fanica branca anomenada <code>main</code> que apunta a aquest <code>commit</code>.</p> <p>Tamb\u00e9 observem que el <code>HEAD</code> apunta a la branca <code>main</code>, indicant que \u00e9s la branca activa i que el Directori de Treball es troba en aquest estat.</p> <p>El <code>HEAD</code> es veur\u00e0 amb m\u00e9s detall a l'apartat Canviar de branca.</p> <p>La ordre <code>git branch</code> ens permet veure i manipular les branques d'un repositori.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git branch</code>: https://git-scm.com/docs/git-branch</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#mostrar-les-branques","title":"Mostrar les branques","text":"<p>Per mostrar les branques d'un repositori, utilitzem l'ordre: <pre><code>git branch [--list] [-a | --all] [-v | --verbose]\n</code></pre> L'ordre <code>git branch</code> mostra les branques si:</p> <ul> <li>No s'utilitza cap opci\u00f3.</li> <li>S'utilitza l'opci\u00f3 <code>--list</code>.</li> </ul> <p>M\u00e9s opcions:</p> <ul> <li><code>[-a | --all]</code>: Opcional. Mostra totes les branques,     incloent les remotes (es veur\u00e0 en els apunts Remots).</li> <li><code>[-v | --verbose]</code>: Opcional. Mostra m\u00e9s informaci\u00f3 de cada branca.</li> </ul> Exemple: Mostrar les branques <p>Mostrem les branques del nostre repositori.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git branch\n* main\n</code></pre> <p>Vegem que tenim una \u00fanica branca anomenada <code>main</code>.</p> <p>Aquesta ordre indicar\u00e0 amb un <code>*</code> la branca activa (on es troba el <code>HEAD</code>).</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#crear-una-branca","title":"Crear una branca","text":"<p>Per crear una nova branca, utilitzem l'ordre: <pre><code>git branch [-f | --force] &lt;nom&gt;\n</code></pre></p> <ul> <li><code>[-f | --force]</code>: Opcional. For\u00e7a la creaci\u00f3 de la branca.</li> <li><code>&lt;nom&gt;</code>: Nom de la nova branca.</li> </ul> <p>Advert\u00e8ncia</p> <p>Si ja existeix una branca amb el mateix nom i no s'utilitza l'opci\u00f3 <code>-f</code> o <code>--force</code>, l'ordre mostrar\u00e0 un error i no es crear\u00e0 la branca.</p> Exemple: Crear la branca docs <p>Creem la branca <code>docs</code>. <pre><code>jpuigcerver@fp:~/git_branques (main) $ git branch docs\njpuigcerver@fp:~/git_branques (main) $ git branch\n* main\n  docs\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main, docs)\n</code></pre></p> <p>Vegem que s'ha creat la branca <code>docs</code> que apunta al commit <code>0b1b3b4</code>.</p> <p>No obstant aix\u00f2,la branca activa continua sent <code>main</code>.</p> <p></p> <p>Figura 2. Estructura de branques despr\u00e9s de crear la branca <code>docs</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#canviar-de-branca","title":"Canviar de branca","text":"<p>Existeixen dues ordres per canviar de branca, cadascuna amb la seva pr\u00f2pia sintaxi i opcions: <pre><code>git checkout &lt;nom&gt;\ngit switch &lt;nom&gt;\n</code></pre></p> <p>Originalment, s'utilitzava l'ordre <code>git checkout</code> per canviar de branca, per\u00f2 com que aquesta ordre t\u00e9 moltes altres funcions, s'ha introdu\u00eft l'ordre <code>git switch</code> a partir de la versi\u00f3 2.23 de Git per evitar confusions.</p> <p>Documentaci\u00f3</p> <ul> <li>Documentaci\u00f3 de la ordre <code>git checkout</code>: https://git-scm.com/docs/git-checkout</li> <li>Documentaci\u00f3 de la ordre <code>git switch</code>: https://git-scm.com/docs/git-switch</li> </ul> <p>Info</p> <p>M\u00e9s informaci\u00f3: Stack Overflow: What's the difference between <code>git switch</code> and <code>git checkout</code> &lt;branch&gt;?</p> <p>En qualsevol cas, canviar de branca significa moure el punter <code>HEAD</code> a la branca desitjada. El canvi de branca tamb\u00e9 implica modificar el contingut del Directori de Treball a l'estat del <code>commit</code> al qual apunta la branca.</p> <p>La Figura 2 mostra l'estat del repositori quan el <code>HEAD</code> apunta a la branca <code>main</code>. La Figura 3 mostra l'estat del repositori despr\u00e9s de canviar a la branca <code>docs</code>.</p> Exemple: Canviar a la branca docs <p>Podeu observar com l'estat del repositori \u00e9s el mateix, ja que les dues branques apunten al mateix <code>commit</code>, per\u00f2 el <code>HEAD</code> apunta a la branca <code>docs</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git branch\n* main\n  docs\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main, docs)\njpuigcerver@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\njpuigcerver@fp:~/git_branques (main) $ git switch docs\nSwitched to branch 'docs'\njpuigcerver@fp:~/git_branques (docs) $ git branch\n  main\n* docs\njpuigcerver@fp:~/git_branques (docs) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; docs, main)\njpuigcerver@fp:~/git_branques (docs) $ cat README.md\n# Bloc: Branques\n</code></pre> <p></p> <p>Figura 3. Estructura de branques despr\u00e9s de canviar a la branca <code>docs</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#canvis-en-una-branca","title":"Canvis en una branca","text":"<p>Per fer canvis en una branca cal:</p> <ul> <li>Situar-se en la branca on es vol fer el canvi (<code>git checkout</code> o <code>git switch</code>).</li> <li>Realitzar els canvis desitjats.</li> <li>Confirmar els canvis amb <code>git commit</code>.</li> </ul> <p>Quan es realitza un <code>commit</code> en una branca, el punter de la branca actual (<code>HEAD</code>) s'avan\u00e7a al nou <code>commit</code>.</p> Exemple: Canvis en la branca docs <p>Afegim un subt\u00edtol al nostre fitxer <code>README.md</code> a la branca <code>docs</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout docs\njpuigcerver@fp:~/git_branques (docs) $ echo &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (docs) $ echo \"## Documentaci\u00f3\" &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (docs) $ git diff\ndiff --git a/README.md b/README.md\nindex 4efb7a9..3e27f51 100644\n--- a/README.md\n+++ b/README.md\n@@ -1 +1,3 @@\n # Bloc: Branques\n+\n+## Documentaci\u00f3\njpuigcerver@fp:~/git_branques (docs) $ git add README.md\njpuigcerver@fp:~/git_branques (docs) $ git commit -m \"Subt\u00edtol documentaci\u00f3\"\n[docs 1b2c5d6] Subt\u00edtol documentaci\u00f3\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (docs) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (HEAD -&gt; docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (main)\n</code></pre> <p>Vegem que la branca <code>docs</code> ha avan\u00e7at al nou <code>commit</code> <code>1b2c5d6</code>, mentre que la branca <code>main</code> continua apuntant al <code>commit</code> <code>0b1b3b4</code>.</p> <p></p> <p>Figura 4. Estructura de branques despr\u00e9s de fer un <code>commit</code> a la branca <code>docs</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#reanomenar-una-branca","title":"Reanomenar una branca","text":"<p>Per reanomenar una branca, utilitzem l'ordre: <pre><code>git branch [-m | --move] &lt;nou_nom&gt;\n</code></pre></p> <ul> <li><code>[-m | --move]</code>: Opcional. Reanomena la branca actual (on es troba el <code>HEAD</code>).</li> <li><code>&lt;nou_nom&gt;</code>: Nou nom de la branca.</li> </ul> <p>Exemple: Reanomenar la branca principal</p> <p>En la Introducci\u00f3 s'ha utilitzat aquesta opci\u00f3 per canviar el nom de la branca principal de <code>master</code> a <code>main</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#eliminar-una-branca","title":"Eliminar una branca","text":"<p>Per eliminar una branca, utilitzem l'ordre: <pre><code>git branch [-d | --delete] [-D] [-f | --force] &lt;nom&gt;\n</code></pre></p> <ul> <li><code>[-d | --delete]</code>: Opcional. Elimina la branca.</li> <li><code>[-f | --force]</code>: Opcional. For\u00e7a l'eliminaci\u00f3 de la branca.</li> <li><code>[-D]</code>: Opcional. Abreviatura de <code>--delete --force</code>.</li> </ul> <p>Advert\u00e8ncia</p> <p>Quan un <code>commit</code> perd totes les refer\u00e8ncies per a ser accedit, es diu que \u00e9s un <code>commit</code> orfe i ser\u00e0 eliminat pel recol\u00b7lector de brossa (garbage collector) de Git.</p> <p>L'eliminaci\u00f3 d'una branca pot provocar la p\u00e8rdua de commits. En aquest cas, Git mostrar\u00e0 un error i no es podr\u00e0 eliminar la branca a no ser que s'utilitze l'opci\u00f3 <code>-D</code> o <code>--delete --force</code>.</p> Exemple: Eliminar la branca docs <p>Eliminem la branca <code>docs</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (docs) $ git checkout main\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\njpuigcerver@fp:~/git_branques (main) $ git branch -d docs\nerror: the branch 'docs' is not fully merged\nhint: If you are sure you want to delete it, run 'git branch -D docs'\nhint: Disable this message with \"git config advice.forceDeleteBranch false\"\njpuigcerver@fp:~/git_branques (main) $ git branch -D docs\nDeleted branch docs (was 1b2c5d6).\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>La branca <code>docs</code> ha estat eliminada i, per tant, el <code>commit</code> <code>1b2c5d6</code> s'ha convertit en un <code>commit</code> orfe i ser\u00e0 eliminat pel recol\u00b7lector de brossa de Git.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#fusio-de-branques-git-merge","title":"Fusi\u00f3 de branques (<code>git merge</code>)","text":"<p>La fusi\u00f3 de branques o merge \u00e9s el proc\u00e9s de combinar els canvis d'una branca a una altra.</p> <p>Aquest proc\u00e9s es realitza amb l'ordre: <pre><code>git merge &lt;branca&gt;\n</code></pre></p> <ul> <li><code>&lt;branca&gt;</code>: Branca que es vol fusionar amb la branca actual.</li> </ul> <p>Important</p> <p>La fusi\u00f3 de branques sempre incorpora els canvis de la branca especificada a la branca actual (on es troba el <code>HEAD</code>).</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git merge</code>: https://git-scm.com/docs/git-merge</p> <p>Segons l'estructura de les branques, la fusi\u00f3 pot ser directa (fast-forward) o mitjan\u00e7ant commit de fusi\u00f3 (merge commit).</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#fusio-directa","title":"Fusi\u00f3 directa","text":"<p>La fusi\u00f3 directa (fast-forward) \u00e9s un tipus de fusi\u00f3 que es produeix quan la branca actual (<code>HEAD</code>) no t\u00e9 cap nou <code>commit</code> des de que es va crear la branca que es vol fusionar. \u00c9s a dir, la branca que es vol fusionar est\u00e0 darrere de la branca actual, mantenint una hist\u00f2ria lineal.</p> <p></p> <p>Figura 5. Estructura de branques abans de la fusi\u00f3 directa.</p> <p>Aquesta fusi\u00f3 consisteix a avan\u00e7ar el punter de la branca actual (<code>HEAD</code>) fins on es troba la branca que es vol fusionar.</p> <p></p> <p>Figura 6. Estructura de branques despr\u00e9s de la fusi\u00f3 directa.</p> <p>Important</p> <p>La fusi\u00f3 directa \u00e9s la forma m\u00e9s senzilla i neta de fusionar branques, ja que no es crea cap <code>commit</code> addicional per fusionar les branques i mant\u00e9 una hist\u00f2ria lineal i f\u00e0cil de seguir.</p> <p>Info</p> <p>Per assegurar-se que la fusi\u00f3 siga directa, es pot utilitzar l'opci\u00f3 <code>--ff-only</code></p> <p>En cas que la fusi\u00f3 no siga directa, Git mostrar\u00e0 un error i no es realitzar\u00e0 la fusi\u00f3.</p> Exemple: Fusi\u00f3 directa de la branca docs <p>Partint de la situaci\u00f3 de la Figura 5, on la branca <code>docs</code> t\u00e9 un <code>commit</code> m\u00e9s que la branca <code>main</code>, la fusi\u00f3 de la branca <code>docs</code> a la branca <code>main</code> ser\u00e0 una fusi\u00f3 directa.</p> <pre><code>jpuigcerver@fp:~/git_branques (docs) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>En aquest cas, la fusi\u00f3 es portar\u00e0 a terme avan\u00e7ant el punter de la branca <code>main</code> fins al punt on es troba la branca <code>docs</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git merge docs\nUpdating 0b1b3b4..1b2c5d6\nFast-forward\n README.md | 1 +\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (main) $ cat README.md # (1)!\n# Bloc: Branques\n\n## Documentaci\u00f3\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (HEAD -&gt; main, docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Vegem que el fitxer <code>README.md</code> ha incorporat els canvis de la branca <code>docs</code>.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#fusio-de-branques-divergents","title":"Fusi\u00f3 de branques divergents","text":"<p>No sempre \u00e9s possible realitzar fusi\u00f3 mitjan\u00e7ant una fusi\u00f3 directa (fast-forward). Pot donar-se el cas que les dues branques hagen divergit, \u00e9s a dir, que cada branca haja realitzat canvis que no estan presents en l'altra branca.</p> Preparaci\u00f3 branques divergents <ol> <li>Realitzem canvis en la branca <code>docs</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout docs\nSwitched to branch 'docs'\njpuigcerver@fp:~/git_branques (docs) $ echo \"https://git-scm.com/\" &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (docs) $ git diff\ndiff --git a/README.md b/README.md\nindex 4efb7a9..3e27f51 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,3 +1,4 @@\n # Bloc: Branques\n\n ## Documentaci\u00f3\n+- https://git-scm.com/\njpuigcerver@fp:~/git_branques (docs) $ git commit -a -m \"Documentaci\u00f3 oficial\"\n[docs 3d4e5f6] Documentaci\u00f3 oficial\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (docs) $ git lg\n* 3d4e5f6 - (3 seconds ago) Documentaci\u00f3 oficial - Joan Puigcerver (HEAD -&gt; docs)\n* 1b2c5d6 - (3 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (main)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Realitzem canvis en la branca <code>main</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (docs) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ vim README.md # (1)!\njpuigcerver@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 3e27f51..4efb7a9 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # Bloc: Branques\n+__Autor:__ Joan Puigcerver\n\n ## Documentaci\u00f3\njpuigcerver@fp:~/git_branques (main) $ git commit -a -m \"Autor\"\n[main 2a3b4c5] Autor\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (main) $ git lg -a\n* 2a3b4c5 - (5 seconds ago) Autor - Joan Puigcerver (HEAD -&gt; main)\n| * 3d4e5f6 - (3 minutes ago) Documentaci\u00f3 oficial - Joan Puigcerver (docs)\n|/\n* 1b2c5d6 - (10 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (13 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Modifiquem el fitxer <code>README.md</code>. Pots utilitzar l'editor de text que preferisques.</li> </ol> <p></p> <p>Figura 7. Hist\u00f2ria abans de la fusi\u00f3 en branques divergents.</p> <p>En aquest cas, la fusi\u00f3 es realitza mitjan\u00e7ant un commit de fusi\u00f3 (merge commit). Aquest <code>commit</code> de fusi\u00f3 t\u00e9 dos pares, un per cada branca que es fusiona i incorpora els canvis de les dues branques.</p> <p></p> <p>Figura 8. Hist\u00f2ria despr\u00e9s de la fusi\u00f3 en branques divergents.</p> <p>En el moment de realitzar la fusi\u00f3 (<code>git merge</code>), Git crear\u00e0 un nou <code>commit</code> de fusi\u00f3 que incorporar\u00e0 els canvis de les dues branques.</p> <p>Aquest <code>commit</code> necessita d'un missatge, per tant, es pot utilitzar l'opci\u00f3 <code>-m</code> per afegir un missatge al <code>commit</code>. Si no se n'especifica cap, s'obrir\u00e0 l'editor de text configurat per defecte per a afegir el missatge. (Vegeu Confirmar canvis (git commit))</p> <p>Advert\u00e8ncia</p> <p>Aquest tipus de fusi\u00f3 no \u00e9s tan neta com la fusi\u00f3 directa (fast-forward), ja que la hist\u00f2ria del projecte es torna m\u00e9s complexa i no lineal.</p> <p>Info</p> <p>Per for\u00e7ar que la fusi\u00f3 es realitze amb un commit de fusi\u00f3 (merge commit), es pot utilitzar l'opci\u00f3 <code>--no-ff</code>.</p> Exemple: Fusi\u00f3 de docs divergent amb main <p>Realitzem la fusi\u00f3 de les dues branques.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git merge docs -m \"Merge branch 'docs' into main\" # (1)!\nAuto-merging README.md\nMerge made by the 'ort' strategy.\n README.md | 1 +\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (main) $ git lg\n*   b6aa5c3 - (3 seconds ago) Merge branch 'docs' into main - Joan Puigcerver (HEAD -&gt; main)\n|\\\n| * 3d4e5f6 - (3 minutes ago) Documentaci\u00f3 oficial - Joan Puigcerver (docs)\n* | 2a3b4c5 - (5 seconds ago) Autor - Joan Puigcerver\n|/\n* 1b2c5d6 - (10 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver\n* 0b1b3b4 - (13 minutes ago) T\u00edtol - Joan Puigcerver\njpuigcerver@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\n__Autor:__ Joan Puigcerver\n\n## Documentaci\u00f3\n- https://git-scm.com/\n</code></pre> <ol> <li>La opci\u00f3 <code>-m</code> permet afegir un missatge al <code>commit</code> de fusi\u00f3.</li> </ol> <p>En aquest punt ens trobem en la situaci\u00f3 mostrada en la Figura 8. Vegem que el fitxer <code>README.md</code> ha incorporat els canvis de les dues branques.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#resolucio-de-conflictes","title":"Resoluci\u00f3 de conflictes","text":"<p>En el proc\u00e9s de fusi\u00f3 de branques, pot donar-se el cas que les dues branques hagen modificat la mateixa part d'un fitxer. En aquest cas, Git no pot resoldre el conflictes de forma autom\u00e0tica i caldr\u00e0 resoldre'ls manualment.</p> <p>En el moment que executem <code>git merge</code>, Git detectar\u00e0 el conflictes els marcar\u00e0 en el fitxer amb la seg\u00fcent notaci\u00f3: <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nContingut de la branca actual\n=======\nContingut de la branca a fusionar\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; branca_a_fusionar\n</code></pre></p> <p>A m\u00e9s, el repositori passar\u00e0 a l'estat de fusi\u00f3 (<code>MERGING</code>), indicant que hi ha una fusi\u00f3 en curs.</p> <p>Per resoldre el conflicte, caldr\u00e0:</p> <ol> <li>Editar el fitxer i resoldre manualment el conflicte.</li> <li>Esborrar les marques de conflicte.</li> </ol> <p>Una vegada resolt el conflicte, caldr\u00e0 confirmar els canvis amb <code>git add</code> i <code>git commit</code>.</p> <p>Info</p> <p>En cas que es desitge cancel\u00b7lar el proc\u00e9s de fusi\u00f3, es pot utilitzar l'ordre <code>git merge --abort</code>.</p> Preparaci\u00f3 branques divergents amb conflicte <ol> <li>Creem la branca <code>conflictes</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git branch conflictes\njpuigcerver@fp:~/git_branques (main) $ git checkout conflictes\nSwitched to branch 'conflictes'\njpuigcerver@fp:~/git_branques (conflictes) $ vim README.md\njpuigcerver@fp:~/git_branques (conflictes) $ git diff\ndiff --git a/README.md b/README.md\nindex f94383b..c9b0a17 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,7 @@\n # Bloc: Branques\n __Autor__: Joan Puigcerver\n\n+Estem aprenent a resoldre conflictes.\n+\n ## Documentaci\u00f3\n - https://git-scm.com/\njpuigcerver@fp:~/git_branques (conflictes) $ git commit -a -m \"Text conflictes\"\n[conflictes 4e5f6d7] Text conflictes\n 1 file changed, 2 insertions(+)\njpuigcerver@fp:~/git_branques (conflictes) $ git lg\n* 4e5f6d7 - (3 seconds ago) Text conflictes - Joan Puigcerver (HEAD -&gt; conflictes)\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ vim README.md\njpuigcerver@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex f94383b..a03cd9d 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,7 @@\n # Bloc: Branques\n __Autor__: Joan Puigcerver\n\n+Estem aprenent a fusionar branques.\n+\n ## Documentaci\u00f3\n - https://git-scm.com/\njpuigcerver@fp:~/git_branques (main) $ git commit -a -m \"Text fusi\u00f3\"\n[main 072e36a] Text fusi\u00f3\n 1 file changed, 2 insertions(+)\njpuigcerver@fp:~/git_branques (main) $ git lg -a\n* 072e36a - (3 seconds ago) Text fusi\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n| * 4e5f6d7 - (3 minutes ago) Text conflictes - Joan Puigcerver (conflictes)\n|/\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver\n...\n</code></pre> Exemple: Fusi\u00f3 amb resoluci\u00f3 de conflictes <p>Realitzem la fusi\u00f3 de la branca <code>conflictes</code> a la branca <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git merge conflictes\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\njpuigcerver@fp:~/git_branques (main|MERGING) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nEstem aprenent a fusionar branques.\n=======\nEstem aprenent a resoldre conflictes.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; conflictes\n\n## Documentaci\u00f3\n- https://git-scm.com/\njpuigcerver@fp:~/git_branques (main|MERGING) $ vim README.md # (1)!\njpuigcerver@fp:~/git_branques (main|MERGING) $ cat README.md\njpuigcerver@fedora:~/git_branques (main|MERGING) $ cat README.md \n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\n\n## Documentaci\u00f3\n- https://git-scm.com/\njpuigcerver@fp:~/git_branques (main|MERGING) $ git add README.md\njpuigcerver@fp:~/git_branques (main|MERGING) $ git commit -m \"Resoluci\u00f3 conflicte\"\n[main 8a9b0c1] Resoluci\u00f3 conflicte\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 8a9b0c1 - (3 seconds ago) Resoluci\u00f3 conflicte - Joan Puigcerver (HEAD -&gt; main)\n|\\\n| * 4e5f6d7 - (3 minutes ago) Text conflictes - Joan Puigcerver (conflictes)\n* | 072e36a - (3 minutes ago) Text fusi\u00f3 - Joan Puigcerver\n|/\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver\n...\n</code></pre> <ol> <li>Hem combinat els dos textos i hem eliminat les marques de conflicte.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#canvi-de-base-rebase","title":"Canvi de base (<code>rebase</code>)","text":"<p>El canvi de base (<code>rebase</code>) \u00e9s una altra manera de fusionar canvis de branques divergents, que consisteix en aplicar els canvis dels <code>commit</code> d'una branca sobre una altra branca, en ordre cronol\u00f2gic.</p> <p>Aquesta t\u00e8cnica permet eliminar les branques divergents i mantindre una hist\u00f2ria lineal.</p> <p>Aquest proc\u00e9s es realitza amb l'ordre: <pre><code>git rebase &lt;branca&gt;\n</code></pre></p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git rebase</code>: https://git-scm.com/docs/git-rebase</p> <p></p> <p>Figura 9. Hist\u00f2ria abans del canvi de base.</p> <p></p> <p>Figura 10. Hist\u00f2ria despr\u00e9s del canvi de base.</p> <p>Important</p> <p>L'ordre <code>git rebase</code> canviar\u00e0 la base de la branca actual (<code>HEAD</code>).</p> Preparaci\u00f3 branques divergents <ol> <li>Creem la branca <code>llicencia</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout -b llicencia # (1)!\nSwitched to a new branch 'llicencia'\njpuigcerver@fp:~/git_branques (llicencia) $ echo &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (llicencia) $ echo \"## Llic\u00e8ncia\" &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (llicencia) $ echo \"CC BY-NC-SA 4.0\" &gt;&gt; README.md\njpuigcerver@fp:~/git_branques (llicencia) $ git diff\ndiff --git a/README.md b/README.md\nindex 2ca252f..6aa790e 100644\n--- a/README.md\n+++ b/README.md\n@@ -5,3 +5,6 @@ Estem aprenent a fusionar branques i resoldre conflictes.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+\n+## Llic\u00e8ncia\n+CC BY-NC-SA 4.0\njpuigcerver@fp:~/git_branques (llicencia) $ git commit -a -m \"Llic\u00e8ncia\"\n[llicencia e474d76] Llic\u00e8ncia\n 1 file changed, 3 insertions(+)\njpuigcerver@fp:~/git_branques (llicencia) $ git lg\n* e474d76 - (14 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; llicencia)\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (llicencia) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ vim README.md\njpuigcerver@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 2ca252f..3a3fe02 100644\n--- a/README.md\n+++ b/README.md\n@@ -2,6 +2,7 @@\n __Autor__: Joan Puigcerver\n\n Estem aprenent a fusionar branques i resoldre conflictes.\n+Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\njpuigcerver@fp:~/git_branques (main) $ git commit -a -m \"Text rebase\"\n[main 1b2c3d4] Text rebase\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (main) $ git lg -a\n* 1b2c3d4 - (3 seconds ago) Text rebase - Joan Puigcerver (HEAD -&gt; main)\n| * e474d76 - (3 minutes ago) Llic\u00e8ncia - Joan Puigcerver (llicencia)\n|/\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver\n...\n</code></pre> <ol> <li>L'opci\u00f3 <code>git checkout -b</code> permet crear una nova branca i situar-se en ella directament.</li> </ol> Exemple: Canvi de base <p>Canviem la base de la branca <code>llicencia</code> a la branca <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout llicencia\nSwitched to branch 'llicencia'\njpuigcerver@fp:~/git_branques (llicencia) $ git rebase main\nSuccessfully rebased and updated refs/heads/llicencia.\njpuigcerver@fp:~/git_branques (llicencia) $ git lg\n* 8bad4a1 - (3 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; llicencia)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver (main)\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver\n...\njpuigcerver@fp:~/git_branques (llicencia) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\n</code></pre> <p>Vegem que la branca <code>llicencia</code> ha canviat la seva base a la branca <code>main</code> i ha incorporat els seus canvis.</p> <p>Notice</p> <p>L'identificador (hash) del <code>commit</code> Llic\u00e8ncia ha canviat despr\u00e9s del <code>rebase</code>.</p> <p>Aix\u00f2 \u00e9s degut a que s'ha creat un nou <code>commit</code> amb els canvis de l'anterior.</p> <p>En aquest punt, si volem incorporar els canvis de la branca <code>llicencia</code> a la branca <code>main</code>, podem fer-ho mitjan\u00e7ant una fusi\u00f3 directa (fast-forward).</p> <pre><code>jpuigcerver@fp:~/git_branques (llicencia) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ git merge llicencia\nUpdating 1b2c3d4..8bad4a1\nFast-forward\n README.md | 3 +++\n 1 file changed, 3 insertions(+)\njpuigcerver@fp:~/git_branques (main) $ git lg\n* 8bad4a1 - (3 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; main, llicencia)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver\n...\n</code></pre>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#resolucio-de-conflictes_1","title":"Resoluci\u00f3 de conflictes","text":"<p>El canvi de base (<code>rebase</code>) tamb\u00e9 pot provocar conflictes si les dues branques han modificat la mateixa part d'un fitxer.</p> <p>Git ens indicar\u00e0 que hi ha conflictes i caldr\u00e0 resoldre'ls manualment, d'una manera similar a la resoluci\u00f3 de conflictes en la fusi\u00f3 de branques.</p> <p>En aquest cas, caldr\u00e0 resoldre els conflictes per a cada <code>commit</code> en el que s'est\u00e0 canviant la base.</p> <p>Despr\u00e9s de resoldre els conflictes d'un <code>commit</code>, caldr\u00e0 continuar amb el proc\u00e9s de <code>rebase</code> amb l'ordre <code>git rebase --continue</code> fins que s'haja aplicat el canvi de base a tots els <code>commit</code> de la branca.</p> Preparaci\u00f3 branques divergents amb conflictes <ol> <li>Creem la branca <code>docs/git_training</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout -b docs_git_training\nSwitched to a new branch 'docs_git_training'\njpuigcerver@fp:~/git_branques (docs_git_training) $ vim README.md\njpuigcerver@fp:~/git_branques (docs_git_training) $ git diff\ndiff --git a/README.md b/README.md\nindex 54f292f..271a617 100644\n--- a/README.md\n+++ b/README.md\n@@ -6,6 +6,7 @@ Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+- https://github.com/UnseenWizzard/git_training \n\n ## Llic\u00e8ncia\n CC BY-NC-SA 4.0\njpuigcerver@fp:~/git_branques (docs_git_training) $ git commit -a -m \"Documentaci\u00f3 git_training\"\n[docs_git_training a136424] Documentaci\u00f3 git_training\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (docs_git_training) $ git lg\n* a136424 - (3 seconds ago) Documentaci\u00f3 git_training - Joan Puigcerver (HEAD -&gt; docs_git_training)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>jpuigcerver@fp:~/git_branques (docs_git_training) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_branques (main) $ vim README.md\njpuigcerver@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 54f292f..6f65136 100644\n--- a/README.md\n+++ b/README.md\n@@ -6,6 +6,7 @@ Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+- https://www.w3schools.com/git/\n\n ## Llic\u00e8ncia\n CC BY-NC-SA 4.0\njpuigcerver@fp:~/git_branques (main) $ git commit -a -m \"Documentaci\u00f3 w3schools\"\n[main 0230b1b] Documentaci\u00f3 w3schools\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_branques (main) $ git lg -a\n* 0230b1b - (3 seconds ago) Documentaci\u00f3 w3schools - Joan Puigcerver (HEAD -&gt; main)\n| * a136424 - (3 minutes ago) Documentaci\u00f3 git_training - Joan Puigcerver (docs_git_training)\n|/\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver\n...\n</code></pre> Exemple: Canvi de base amb conflictes <p>Canviem la base de la branca <code>docs_git_training</code> a la branca <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_branques (main) $ git checkout docs_git_training\nSwitched to branch 'docs_git_training'\njpuigcerver@fp:~/git_branques (docs_git_training) $ git rebase main\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nerror: could not apply a136424... git_training\nhint: Resolve all conflicts manually, mark them as resolved with\nhint: \"git add/rm &lt;conflicted_files&gt;\", then run \"git rebase --continue\".\nhint: You can instead skip this commit: run \"git rebase --skip\".\nhint: To abort and get back to the state before \"git rebase\", run \"git rebase --abort\".\nhint: Disable this message with \"git config advice.mergeConflict false\"\nCould not apply a136424... Documentaci\u00f3 git_training\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git status\ninteractive rebase in progress; onto 0230b1b\nLast command done (1 command done):\n   pick a136424 git_training\nNo commands remaining.\nYou are currently rebasing branch 'docs_git_training' on '0230b1b'.\n  (fix conflicts and then run \"git rebase --continue\")\n  (use \"git rebase --skip\" to skip this patch)\n  (use \"git rebase --abort\" to check out the original branch)\n\nUnmerged paths:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n  (use \"git add &lt;file&gt;...\" to mark resolution)\n    both modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n- https://www.w3schools.com/git/\n=======\n- https://github.com/UnseenWizzard/git_training \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; a136424 (git_training)\n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\n</code></pre> <p>Vegem que hi ha conflictes en el fitxer <code>README.md</code>. Hem de resoldre'ls manualment.</p> <pre><code>jpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ vim README.md # (1)!\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n- https://www.w3schools.com/git/\n- https://github.com/UnseenWizzard/git_training \n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git add README.md # (2)!\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git status\ninteractive rebase in progress; onto 0230b1b\nLast command done (1 command done):\n   pick a136424 git_training\nNo commands remaining.\nYou are currently rebasing branch 'docs_git_training' on '0230b1b'.\n  (all conflicts fixed: run \"git rebase --continue\")\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\njpuigcerver@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git rebase --continue --no-edit # (3)!\nSuccessfully rebased and updated refs/heads/docs_git_training.\njpuigcerver@fp:~/git_branques (docs_git_training) $ git lg\n* 8bad4a1 - (3 seconds ago) Documentaci\u00f3 git_training - Joan Puigcerver (HEAD -&gt; docs_git_training)\n* 0230b1b - (3 minutes ago) Documentaci\u00f3 w3schools - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Hem eliminat les marques de conflicte i hem combinat els dos textos.</li> <li>Hem marcat el fitxer <code>README.md</code> com a resolt.</li> <li>L'opci\u00f3 <code>--no-edit</code> permet continuar el proc\u00e9s de <code>rebase</code>, utilitzant el missatge del <code>commit</code> original.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/01_branques/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://git-scm.com/book/en/v2</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/02_transparencies/","title":"Transpar\u00e8ncies: Branques","text":""},{"location":"apunts/02_branques/02_transparencies/#branques","title":"Branques","text":""},{"location":"apunts/02_branques/02_transparencies/#introduccio-a-git-i-la-seua-aplicacio-a-laula","title":"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula","text":""},{"location":"apunts/02_branques/02_transparencies/#branques_1","title":"Branques","text":""},{"location":"apunts/02_branques/02_transparencies/#canviar-de-branca","title":"Canviar de branca","text":""},{"location":"apunts/02_branques/02_transparencies/#nous-canvis-en-una-branca","title":"Nous canvis en una branca","text":""},{"location":"apunts/02_branques/02_transparencies/#fusio-directa-de-branques","title":"Fusi\u00f3 directa de branques","text":"<p>Abans</p> <p>--</p> <p></p> <p>Despr\u00e9s</p>"},{"location":"apunts/02_branques/02_transparencies/#fusio-de-branques-divergents","title":"Fusi\u00f3 de branques divergents","text":"<p>Abans</p> <p>--</p> <p></p> <p>Despr\u00e9s</p>"},{"location":"apunts/02_branques/02_transparencies/#resolucio-de-conflictes","title":"Resoluci\u00f3 de conflictes","text":"<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nContingut de la branca actual\n=======\nContingut de la branca a fusionar\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; branca_a_fusionar\n</code></pre>"},{"location":"apunts/02_branques/02_transparencies/#canvi-de-base","title":"Canvi de base","text":"<p>Abans</p> <p>--</p> <p></p> <p>Despr\u00e9s</p>"},{"location":"apunts/02_branques/03_exercici/","title":"Exercici: Branques","text":""},{"location":"apunts/02_branques/03_exercici/#objectius","title":"Objectius","text":"<p>Els objectius d'aquests exercici s\u00f3n:</p> <ul> <li>Con\u00e9ixer com crear i eliminar branques.</li> <li>Con\u00e9ixer com realitzar canvis en una branca.</li> <li>Con\u00e9ixer com canviar de branca.</li> <li>Con\u00e9ixer com fusionar branques.</li> <li>Con\u00e9ixer com canviar la base d'una branca.</li> <li>Con\u00e9ixer com resoldre conflictes en la fusi\u00f3 de branques.</li> <li>Con\u00e9ixer com resoldre conflictes en el canvi de base d'una branca.</li> </ul>"},{"location":"apunts/02_branques/03_exercici/#exercici","title":"Exercici","text":""},{"location":"apunts/02_branques/03_exercici/#inicialitzacio","title":"Inicialitzaci\u00f3","text":"<p>Important</p> <p>Comprova l'estat del repositori amb <code>git status</code> i <code>git lga</code> (1) despr\u00e9s de cada ordre per entendre els diferents estats dels fitxers.</p> <ol> <li>Revisa Hist\u00f2ric de canvis (git log) per veure     la configuraci\u00f3 de l'\u00e0lies <code>git lga</code>.</li> </ol> <ol> <li>Crea un directori anomenat <code>bloc2_exercici</code> en la teua carpeta de treball.</li> <li>Inicialitza un repositori de Git en aquest directori.</li> <li>Crea un fitxer anomenat <code>llibres.txt</code> i afegeix tres llibres que t'agraden.</li> <li>Fes un primer commit. Tria un missatge significatiu.</li> <li>Reanomena la branca principal a <code>main</code>.</li> </ol>"},{"location":"apunts/02_branques/03_exercici/#fusio-directa","title":"Fusi\u00f3 directa","text":"<ol> <li>Crea una branca anomenada <code>musica</code> i situa't en aquesta branca.</li> <li>Crea un fitxer anomenat <code>musica.txt</code> i afegeix tres can\u00e7ons que t'agraden.</li> <li>Fes un commit en aquesta branca.</li> <li>Fusiona la branca <code>musica</code> amb la branca <code>main</code>.</li> </ol>"},{"location":"apunts/02_branques/03_exercici/#fusio-de-branques-divergents","title":"Fusi\u00f3 de branques divergents","text":"<ol> <li>Des de la branca <code>main</code>, crea les branques <code>mes-llibres</code> i <code>mes-musica</code>.</li> <li>Des de la branca <code>mes-llibres</code>:<ol> <li>Afegeix un llibre a <code>llibres.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li> <p>Des de la branca <code>mes-musica</code>:</p> <ol> <li>Afegeix una can\u00e7\u00f3 a <code>musica.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li> <p>Fusiona la branca <code>mes-llibres</code> amb la branca <code>main</code>.</p> </li> <li>Fusiona la branca <code>mes-musica</code> amb la branca <code>main</code>.</li> </ol>"},{"location":"apunts/02_branques/03_exercici/#resolucio-de-conflictes-en-la-fusio","title":"Resoluci\u00f3 de conflictes en la fusi\u00f3","text":"<ol> <li>Des de la branca <code>main</code>, crea les branques <code>llibres-ciencia-ficcio</code> i <code>llibres-fantasia</code>.</li> <li>Des de la branca <code>llibres-ciencia-ficcio</code>:<ol> <li>Afegeix un llibre de ci\u00e8ncia-ficci\u00f3 a <code>llibres.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Des de la branca <code>llibres-fantasia</code>:<ol> <li>Afegeix un llibre de fantasia a <code>llibres.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Fusiona la branca <code>llibres-ciencia-ficcio</code> amb la branca <code>main</code>.</li> <li>Fusiona la branca <code>llibres-fantasia</code> amb la branca <code>main</code>.</li> </ol>"},{"location":"apunts/02_branques/03_exercici/#eliminacio-duna-branca","title":"Eliminaci\u00f3 d'una branca","text":"<ol> <li>Des de la branca <code>main</code>, crea una branca anomenada <code>series</code>.</li> <li>Des de la branca <code>main</code>, crea una branca anomenada <code>pelicules</code>.</li> <li>Des de la branca <code>series</code>:<ol> <li>Afegeix una s\u00e8rie a <code>series.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Elimina la branca <code>pelicules</code>.</li> <li>Elimina la branca <code>series</code>.</li> </ol> <p>Pregunta</p> <p>Qu\u00e8 ha passat amb el commit de la branca <code>series</code>?</p>"},{"location":"apunts/02_branques/03_exercici/#canvi-de-base-duna-branca","title":"Canvi de base d'una branca","text":"<ol> <li>Des de la branca <code>main</code>, crea una branca anomenada <code>series</code>.</li> <li>Des de la branca <code>main</code>, crea una branca anomenada <code>pelicules</code>.</li> <li>Des de la branca <code>series</code>:<ol> <li>Afegeix una s\u00e8rie a <code>series.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Des de la branca <code>pelicules</code>:<ol> <li>Afegeix una pel\u00b7l\u00edcula a <code>pelicules.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Fusiona la branca <code>pelicules</code> amb la branca <code>main</code>.</li> <li>Canvia la base de la branca <code>series</code> a la branca <code>main</code>.</li> <li>Fusiona la branca <code>series</code> amb la branca <code>main</code>.</li> </ol> <p>Info</p> <p>Aquest proc\u00e9s \u00e9s el que cal seguir per fusionar branques divergents d'una manera que la hist\u00f2ria siga lineal.</p>"},{"location":"apunts/02_branques/03_exercici/#resolucio-de-conflictes-en-el-canvi-de-base","title":"Resoluci\u00f3 de conflictes en el canvi de base","text":"<ol> <li>Des de la branca <code>main</code>, crea una branca anomenada <code>series-accio</code> i <code>series-drama</code>.</li> <li>Des de la branca <code>series-accio</code>:<ol> <li>Afegeix una s\u00e8rie d'acci\u00f3 a <code>series.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Des de la branca <code>series-drama</code>:<ol> <li>Afegeix una s\u00e8rie de drama a <code>series.txt</code>.</li> <li>Fes un commit.</li> </ol> </li> <li>Fusiona la branca <code>series-accio</code> amb la branca <code>main</code>.</li> <li>Canvia la base de la branca <code>series-drama</code> a la branca <code>main</code>.</li> <li>Fusiona la branca <code>series-drama</code> amb la branca <code>main</code>.</li> </ol>"},{"location":"apunts/03_remots/01_remots/","title":"Remots","text":"","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#introduccio","title":"Introducci\u00f3","text":"<p>En el blocs anteriors, ens hem centrat en con\u00e9ixer la seua estructura i realitzar accions b\u00e0siques per realitzar canvis sobre aquest.</p> <p>No obstant aix\u00f2, totes les accions que hem realitzat fins ara han sigut sobre un repositori local, \u00e9s a dir, un repositori que es troba en el nostre dispositiu i aquests canvis no han segut publicats en cap lloc.</p> <p>En aquest bloc, ens centrarem en la creaci\u00f3 de repositoris remots; repositoris que es troben allotjats en un servidor, que permeten l'acc\u00e9s a altres usuaris i la col\u00b7laboraci\u00f3 en el desenvolupament de projectes.</p> Preparaci\u00f3 repositori local <p>En aquest material treballarem sobre un nou repositori local.</p> <p>Inicialitzaci\u00f3: <pre><code>git init ~/git_remots\ncd ~/git_remots\necho \"# Bloc: Remots\" &gt; README.md\ngit add README.md\ngit commit -m \"README.md: T\u00edtol\"\necho \"Repositori del __Bloc: Remots__ del curs __\\\"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\\\"__\" &gt;&gt; README.md\ngit commit -a -m \"README.md: Descripci\u00f3\"\n</code></pre></p> <pre><code>jpuigcerver@fp:~ $ git init ~/git_remots\nInitialized empty Git repository in /home/jpuigcerver/git_remots/.git/\njpuigcerver@fp:~ $ cd ~/git_remots\njpuigcerver@fp:~/git_remots (main) $ branch -m main # (1)!\njpuigcerver@fp:~/git_remots (main) $ echo \"# Bloc: Remots\" &gt; README.md\njpuigcerver@fp:~/git_remots (main) $ git add README.md\njpuigcerver@fp:~/git_remots (main) $ git commit -m \"README.md: T\u00edtol\"\n[master (root-commit) 0b1b3b4] README.md: T\u00edtol\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_remots (main) $ echo \"Repositori del __Bloc: Remots__ del curs __\\\"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\\\"__\" &gt;&gt; README.md\njpuigcerver@fp:~/git_remots (main) $ git commit -a -m \"README.md: Descripci\u00f3\"\n[master 1b3b4b0] README.md: Descripci\u00f3\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* 0b1b3b4 - (3 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Canviem el nom de la branca principal a <code>main</code>.</li> </ol>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#repositori-remot","title":"Repositori remot","text":"<p>Un Repositori Remot \u00e9s una c\u00f2pia d'un repositori de Git que es troba allotjat en un servidor o en un altre lloc fora del teu propi sistema local. Aquesta c\u00f2pia cont\u00e9 una r\u00e8plica completa de la hist\u00f2ria del repositori, incloses totes les revisions i les branques. Els repositoris remots permeten la col\u00b7laboraci\u00f3 i el seguiment del desenvolupament del codi entre m\u00faltiples persones, o tu mateix en diferents dispositius.</p> <p></p> <p>Figura 1. Repositori remot vinculat a m\u00faltiples repositoris locals</p> <p>Entre les finalitats dels repositoris remots podem trobar:</p> <ul> <li>Col\u00b7laboraci\u00f3: Permeten que diversos desenvolupadors treballen junts en un mateix projecte.     Cada desenvolupador pot treballar en la seua c\u00f2pia local del repositori remot i,     una vegada fetes les seues modificacions, pot pujar els canvis al repositori remot perqu\u00e8 altres membres     de l'equip puguen veure i incorporar aquestes modificacions.</li> <li>C\u00f2pia de seguretat: Un repositori remot pot servir com a c\u00f2pia de seguretat del teu projecte.     Si el teu sistema local es danya o es perd, encara tindr\u00e0s acc\u00e9s a la teua hist\u00f2ria completa     i als fitxers del projecte mitjan\u00e7ant el repositori remot.</li> <li>Distribuci\u00f3: Els repositoris remots permeten distribuir el teu codi a altres llocs.     Aix\u00f2 pot ser \u00fatil per compartir el teu codi amb altres persones     o per desplegar el teu projecte en un servidor en l\u00ednia.</li> </ul> <p>Gr\u00e0cies a aquestes caracter\u00edstiques, Git s'ha convertit en una eina clau en qualsevol desenvolupament, per\u00f2 sobretot en els projectes de codi obert (open source), ja que permet la col\u00b7laboraci\u00f3 de desenvolupadors de tot el m\u00f3n en un mateix projecte de manera senzilla i distribu\u00efda.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#allotjament-de-repositoris-remots","title":"Allotjament de repositoris remots","text":"<p>Els repositoris remots es poden allotjar en qualsevol m\u00e0quina o servidor dedicat. No obstant aix\u00f2, hi ha serveis d'allotjament de repositoris remots en l\u00ednia que faciliten la creaci\u00f3 i la gesti\u00f3 de repositoris remots.</p> <p>Alguns dels serveis d'allotjament repositoris remots en l\u00ednia m\u00e9s coneguts s\u00f3n:</p> <ul> <li> <p> GitHub: Servei d'allotjament de repositoris creat en 2008 i adquirit per Microsoft en 2018.     \u00c9s el servei d'allotjament de repositoris de Git m\u00e9s utilitzat.</p> <p>Ofereix una opci\u00f3 gratu\u00efta, que permet crear projectes p\u00fablics i privats, per\u00f2 amb algunes restriccions. Tamb\u00e9 ofereix plans de pagament per projectes empresarials.</p> </li> <li> <p> GitLab: Servei d'allotjament de repositoris. GitLab \u00e9s una plataforma de codi obert.</p> </li> <li> Bitbucket: Servei d'allotjament de repositoris propietat de l'empresa Atlassian,     s'integra estretament amb altres eines d'aquesta empresa, com Jira.</li> </ul> <p>Info</p> <p>M\u00e9s informaci\u00f3: https://prismic.io/blog/gitlab-vs-github#similarities-between-github-and-gitlab</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#creacio-dun-repositori-remot-a-github","title":"Creaci\u00f3 d'un repositori remot a GitHub","text":"<p>En aquesta secci\u00f3, crearem un repositori remot a GitHub.</p> <ol> <li>Crea un compte a  GitHub si no en tens un.</li> <li>Inicia la sessi\u00f3 amb el teu compte.</li> <li>Fes clic a l'opci\u00f3 \"New\" per crear un nou repositori.</li> <li>Omple el formulari amb la informaci\u00f3 del teu repositori:<ul> <li>Nom del repositori. Ha de ser un nom \u00fanic en el teu compte de GitHub.</li> <li>Descripci\u00f3 del repositori. Opcional.</li> <li>Visibilitat del repositori. Pots triar entre p\u00fablic o privat.<ul> <li>P\u00fablic: Qualsevol persona pot veure el teu repositori. Sols les persones autoritzades poden fer canvis.</li> <li>Privat: Nom\u00e9s tu i les persones que tu autoritzes poden veure el teu repositori. Sols les persones autoritzades poden fer canvis.</li> </ul> </li> <li>README: Indica si vols afegir un README al teu repositori.</li> <li>.gitignore: Indica si vols afegir un fitxer <code>.gitignore</code> per ignorar fitxers en el teu repositori.</li> <li>Llic\u00e8ncia: Indica si vols afegir una llic\u00e8ncia al teu repositori.</li> </ul> </li> </ol> Exemple: Creaci\u00f3 d'un repositori a GitHub <p>Creem un repositori amb les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>Nom: <code>git_remots</code></li> <li>Descripci\u00f3: Repositori del Bloc: Remots del curs \"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\"</li> <li>Visibilitat: P\u00fablic</li> <li>README: No</li> <li>.gitignore: No</li> <li>Llic\u00e8ncia: No</li> </ul> <p></p> <p>Figura 2. Formulari de creaci\u00f3 d'un nou repositori a GitHub</p> <p>Una vegada omplert el formulari, fes clic a \"Create repository\" per crear el teu repositori.</p> <p>El teu repositori s'hauria de crear buit i hauries de veure una p\u00e0gina com la seg\u00fcent:</p> <p></p> <p>Figura 3. Repositori buit creat a GitHub</p> <p>La Figura 3 mostra els passos per enlla\u00e7ar el teu repositori local amb el repositori remot creat a GitHub. En els seg\u00fcents apartats, explicarem aquestes ordres amb m\u00e9s detall.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#metodes-dautenticacio-a-github","title":"M\u00e8todes d'autenticaci\u00f3 a GitHub","text":"<p>Per poder enlla\u00e7ar el teu repositori local amb el repositori remot i fer canvis en aquest, necessites autenticar-te amb el servidor de GitHub.</p> <p>GitHub ofereix diferents m\u00e8todes d'autenticaci\u00f3, utilitzant dos protocols diferents:</p> <p>Consell</p> <p>Per seguretat i reutilitzaci\u00f3, es recomana utilitzar el m\u00e8tode SSH per autenticar-se amb el servidor de GitHub.</p> <p>Consulta l'apartat Configuraci\u00f3 de la clau SSH si vols anar directament a aquest m\u00e8tode.</p> <ul> <li> <p>Protocol HTTPS: Utilitza el protocol HTTPS per autenticar-se amb el servidor de GitHub.</p> <p>Per utilitzar aquest m\u00e8tode, has de configurar les teues credencials d'acc\u00e9s a GitHub en el teu sistema local.</p> <p>Aquesta autenticaci\u00f3 es pot realitzar mitjan\u00e7ant:</p> <ul> <li>Nom d'usuari i contrasenya: Des del 2021-08-13, aquest m\u00e8tode est\u00e0     deshabilitat a GitHub.</li> <li>Token d'acc\u00e9s personal (Personal Access Token o PAT):     GitHub permet crear un token d'acc\u00e9s personal     per autenticar-se amb el servidor de GitHub.</li> <li>Extensions de l'IDE: Algunes extensions de l'IDE que utilitzes poden     gestionar l'autenticaci\u00f3 amb GitHub directament.</li> </ul> </li> <li> <p>Protocol SSH: Utilitza el protocol SSH per autenticar-se amb el servidor de GitHub.</p> <p>Per utilitzar aquest m\u00e8tode, has de configurar una clau SSH en el teu sistema local i afegir-la al teu compte de GitHub.</p> </li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#token-dacces-personal-pat","title":"Token d'acc\u00e9s personal (PAT)","text":"<p>Un Token d'Acc\u00e9s Personal (Personal Access Token o PAT) \u00e9s una clau d'acc\u00e9s que permet autenticar-se amb el servidor de GitHub mitjan\u00e7ant el protocol HTTPS.</p> <p>Documentaci\u00f3</p> <ul> <li>GitHub: Managing your personal access tokens</li> <li>StackOverflow: Message \"Support for password authentication was removed.\"</li> </ul> <p>Per crear un token d'acc\u00e9s personal, segueix els seg\u00fcents passos:</p> <ul> <li>Inicia la sessi\u00f3 a  GitHub</li> <li>Fes clic a la teua foto de perfil i selecciona Settings.</li> <li>A la barra lateral esquerra, fes clic a Developer settings.</li> <li>A la barra lateral esquerra, fes clic a Personal access tokens.</li> <li>Fes clic a Generate new token.</li> </ul> <p>Existeixen dos tipus de tokens d'acc\u00e9s personal:</p> <ul> <li>Access token (classic): Permet especificar els permisos que vols donar al token,     que s\u00f3n globals per a tot el teu compte.</li> <li>Fine-grained token: Permet especificar els permisos que vols donar al token,     que s\u00f3n espec\u00edfics per a un repositori o organitzaci\u00f3.</li> </ul> <p>Una vegada creat el token, podr\u00e0s utilitzar-lo per autenticar-te amb el servidor de GitHub.</p> <p>Important</p> <p>Guarda el teu token d'acc\u00e9s personal en un lloc segur.</p> <p>No podr\u00e0s veure'l de nou despr\u00e9s de tancar la p\u00e0gina.</p> <p>Pots utilitzar el teu token d'acc\u00e9s personal per autenticar-te amb el servidor de GitHub de dues maneres:</p> <ul> <li>Mitjan\u00e7ant la URL: Pots afegir el teu token d'acc\u00e9s personal a la URL del repositori     per autenticar-te amb el servidor de GitHub.     <pre><code>git clone https://&lt;token&gt;@github.com/&lt;usuari&gt;/&lt;repositori&gt;\n</code></pre></li> <li> <p>Mitjan\u00e7ant la contrasenya: Pots utilitzar el teu token d'acc\u00e9s personal com a contrasenya     per autenticar-te amb el servidor de GitHub.</p> <pre><code>jpuigcerver@fp:~ $ git clone https://github.com/&lt;usuari&gt;/&lt;repositori&gt;\nCloning into '&lt;repositori&gt;'...\nUsername for 'https://github.com': &lt;usuari&gt;\nPassword for 'https://&lt;username&gt;@github.com': &lt;token&gt;\n</code></pre> <p>Note</p> <p>Per seguretat, no es mostrar\u00e0 res en el camp de la contrasenya.</p> </li> </ul> <p>Consell</p> <p>Per tal de no haver de recordar el PAT cada vegada, \u00e9s possible configurar Git perqu\u00e8 ho recorde autom\u00e0ticament.</p> <p><pre><code>git config --global credential.helper store\n</code></pre> Aquesta comanda guardar\u00e0 les credencials en un fitxer de text en el teu sistema local.</p> <p>Danger</p> <p>Aquesta opci\u00f3 guarda les credencials en text pla en el fitxer <code>~/.git-credentials</code>.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#configuracio-de-la-clau-ssh","title":"Configuraci\u00f3 de la clau SSH","text":"<p>Per autenticar-te amb el servidor de GitHub mitjan\u00e7ant el protocol SSH, has de configurar una clau SSH en el teu sistema local i afegir-la al teu compte de GitHub.</p> <p>Documentaci\u00f3</p> <ul> <li>https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh</li> </ul> <p>Per generar una clau SSH, segueix els seg\u00fcents passos.</p> TerminalInterf\u00edcie gr\u00e0fica <ul> <li> <p>Crea una clau SSH al teu sistema local mitjan\u00e7ant la comanda <code>ssh-keygen</code>.</p> <pre><code>jpuigcerver@fp:~ $ ssh-keygen -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/jpuigcerver/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /home/jpuigcerver/.ssh/id_rsa\n</code></pre> <ul> <li><code>-t rsa</code>: Indica el tipus de clau RSA.</li> <li><code>-b 4096</code>: Indica la longitud de la clau en bits.</li> <li>Pots indicar la ruta on guardar la clau. Per defecte, es guarda en <code>/home/&lt;usuari&gt;/.ssh/id_rsa</code>.</li> <li>Pots indicar una contrasenya per protegir la clau. Si no vols protegir-la, deixa el camp buit.</li> </ul> </li> <li> <p>C\u00f2pia el contingut de la clau p\u00fablica (<code>id_rsa.pub</code>) al porta-retalls.</p> <pre><code>jpuigcerver@fp:~ $ cat ~/.ssh/id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7GqFnEFQZK4+l3zvXF07hN/cMk5ZtJmMkHWAJyTYQ+pDwMXp9eQs\n+VASLlz9z+0Q3vnnXN4vBO/+2u29fKJ4YlrecDYtCDpEhMXCkaCv9/ggkru09j2rELFuAqER55lgEtRKTfLKAVFa3Ws\n2VV7zlTSAH2y8nVddzlJRE9Y1BAfH0+1hjpCe+vgGObBLyIGGsXwlmm3mwI7NKHuKCIVskIEX3F0jw668dBex+6VUtG\n...\n</code></pre> </li> </ul> <ul> <li>Obri el programa Git GUI.</li> <li> <p>Obri el di\u00e0leg a Help &gt; Show SSH Key.</p> <p></p> <p>Men\u00fa di\u00e0leg SSH de Git GUI</p> </li> <li> <p>Fes clic a Generate Key.</p> <ul> <li>Indica una contrasenya (passphrase) per protegir la clau (opcional)     o deixa el camp buit per no protegir-la.</li> </ul> </li> <li> <p>Fes clic a Copy to Clipboard per copiar la clau p\u00fablica al porta-retalls.</p> <p></p> <p>Clau SSH generada amb Git GUI</p> </li> </ul> <p>Despr\u00e9s, configura la clau SSH al teu compte de GitHub seguint els seg\u00fcents passos:</p> <ul> <li>Inicia la sessi\u00f3 a  GitHub</li> <li>Fes clic a la teua foto de perfil i selecciona Settings.</li> <li>A la barra lateral esquerra, fes clic a SSH and GPG keys.</li> <li>Fes clic a New SSH key.</li> <li>Indica un t\u00edtol per a la clau SSH.</li> <li>Enganxa el contingut de la clau p\u00fablica al camp Key.</li> </ul> <p>Important</p> <p>Aquesta configuraci\u00f3 s'ha de repetir per cada dispositiu on vulgues autenticar-te amb el servidor de GitHub mitjan\u00e7ant el protocol SSH.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#configurar-un-repositori-remot-git-remote","title":"Configurar un repositori remot (<code>git remote</code>)","text":"<p>El primer pas \u00e9s enlla\u00e7ar el teu Repositori Local amb el Repositori Remot que acabem de crear. Per fer-ho, utilitzarem la comanda <code>git remote</code>.</p> <p>La comanda <code>git remote</code> permet gestionar els repositoris remots associats al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote [add|rename|remove|show] [&lt;options&gt;]\n</code></pre></p> <p>Aquesta comanda permet realitzar les seg\u00fcents accions:</p> <ul> <li>Sense opcions: Mostra els repositoris remots associats al teu repositori local.</li> <li><code>add</code>: Afegeix un nou repositori remot.</li> <li><code>rename</code>: Canvia el nom d'un repositori remot.</li> <li><code>remove</code>: Elimina un repositori remot.</li> <li><code>show</code>: Mostra informaci\u00f3 detallada d'un repositori remot.</li> </ul> <p>Cadascuna d'aquestes opcions t\u00e9 les seues pr\u00f2pies opcions i arguments.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git remote</code>: https://git-scm.com/docs/git-remote</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#afegir-un-repositori-remot","title":"Afegir un repositori remot","text":"<p>Per afegir un repositori remot, utilitzarem la comanda <code>git remote add</code>.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote add &lt;nom&gt; &lt;url&gt;\n</code></pre></p> <ul> <li><code>&lt;nom&gt;</code>: Nom o \u00e0lies del repositori remot en el teu repositori local.     Normalment, s'utilitza el nom <code>origin</code> per referir-se al repositori remot principal.</li> <li><code>&lt;url&gt;</code>: URL del repositori remot.</li> </ul> <p></p> <p>Figura 4. Repositori Local vinculat amb un Repositori Remot</p> <p>Warning</p> <p>Si intentes publicar amb <code>git push</code> els canvis en un repositori remot sense haver enlla\u00e7at el teu repositori local, Git et mostrar\u00e0 un missatge d'error: <pre><code>jpuigcerver@fp:~/git_remots (main) $ git remote # (1)!\njpuigcerver@fp:~/git_remots (main) $ git push\nfatal: No configured push destination.\nEither specify the URL from the command-line or configure a remote repository using\n\n    git remote add &lt;name&gt; &lt;url&gt;\n\nand then push using the remote name\n\n    git push &lt;name&gt;\n</code></pre></p> <ol> <li>Aquesta ordre no mostra res perqu\u00e8 encara no hi ha configurat cap remot.</li> </ol> Exemple: Afegir un repositori remot <p>Enlla\u00e7arem el nostre repositori local amb el repositori remot creat anteriorment a GitHub.</p> <p>La URL del repositori remot \u00e9s <code>git@github.com:jpuigcerver/git_remots.git</code>(1).</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git remote\njpuigcerver@fp:~/git_remots (main) $ git remote add origin git@github.com:jpuigcerver/git_remots.git\njpuigcerver@fp:~/git_remots (main) $ git remote\norigin\njpuigcerver@fp:~/git_remots (main) $ git remote show origin\n* remote origin\n  Fetch URL: git@github.com:jpuigcerver/git_remots.git\n  Push  URL: git@github.com:jpuigcerver/git_remots.git\n  HEAD branch: (unknown)\n</code></pre> <ol> <li>Utilitzem la URL SSH ja que he decidit utilitzar aquest m\u00e8tode d'autenticaci\u00f3.</li> </ol>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#reanomenar-un-repositori-remot","title":"Reanomenar un repositori remot","text":"<p>L'ordre <code>git remote rename</code> permet canviar el nom d'un repositori remot associat al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote rename &lt;antic&gt; &lt;nou&gt;\n</code></pre></p> <ul> <li><code>&lt;antic&gt;</code>: Nom actual del repositori remot.</li> <li><code>&lt;nou&gt;</code>: Nou nom del repositori remot.</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#eliminar-un-repositori-remot","title":"Eliminar un repositori remot","text":"<p>L'ordre <code>git remote remove</code> permet eliminar un repositori remot associat al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote remove &lt;nom&gt;\n</code></pre></p> <ul> <li><code>&lt;nom&gt;</code>: Nom del repositori remot a eliminar.</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#associacio-entre-branques-locals-i-remotes-git-push-set-upstream","title":"Associaci\u00f3 entre branques locals i remotes (<code>git push --set-upstream</code>)","text":"<p>De moment, les branques que hem creat resideixen en el repositori local, \u00e9s a dir, en el nostre dispositiu.</p> <p>Podem associar les branques locals a branques remotes, del repositori remot, perqu\u00e8 els canvis que fem localment es puguen veure reflectits en el repositori remot.</p> <p>Per fer-ho, utilitzarem la comanda <code>git push</code> amb l'opci\u00f3 <code>-u</code> o <code>--set-upstream</code>.</p> <pre><code>git push [-u|--set-upstream] &lt;remot&gt; &lt;branca&gt;\n</code></pre> <ul> <li><code>-u|--set-upstream</code>: Configura la branca local perqu\u00e8 s'associe amb la branca remota.</li> <li><code>&lt;remot&gt;</code>: \u00c0lies del repositori remot (configurat amb <code>git remote add</code>).</li> <li><code>&lt;branca&gt;</code>: Nom de la branca remota.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git push</code>: https://git-scm.com/docs/git-push</p> <p>Important</p> <p>Aquesta comanda funciona sobre la branca on estem situats (<code>HEAD</code>).</p> <p></p> <p>Figura 5. Associaci\u00f3 d'una branca local a una branca remota</p> <p>Consell</p> <p>Pots configurar git perqu\u00e8 configure autom\u00e0ticament la branca local perqu\u00e8 s'associe amb la branca remota amb el mateix nom amb l'opci\u00f3 <code>push.autoSetupRemote</code>.</p> <pre><code>git config --global push.autoSetupRemote true\n</code></pre> Exemple: Associaci\u00f3 branca local i remota <p>Vegem que inicialment la branca <code>main</code> no est\u00e0 associada a cap branca remota.</p> <p>Si intentem fer un <code>git push</code>, ens mostrar\u00e0 un missatge d'error com que hem d'anar associar una branca remota.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git lga\n* b7adb78 - (2 seconds ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* a41ab9e - (2 seconds ago) README.md: T\u00edtol - Joan Puigcerver\njpuigcerver@fp:~/git_remots (main) $ git push\nfatal: The current branch main has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin main\n\nTo have this happen automatically for branches without a tracking\nupstream, see 'push.autoSetupRemote' in 'git help config'.\n</code></pre> <p>Associem les branques <code>main</code> local i remota amb l'ordre <code>git push --set-upstream</code>.</p> <p>Localment, s'ha creat la refer\u00e8ncia <code>origin/main</code> que apunta a la branca remota <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git push --set-upstream origin main\nEnumerating objects: 6, done.\nCounting objects: 100% (6/6), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (6/6), 503 bytes | 503.00 KiB/s, done.\nTotal 6 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)\nremote: Resolving deltas: 100% (1/1), done.\nTo github.com:jpuigcerver/git_remots.git\n * [new branch]      main -&gt; main\nbranch 'main' set up to track 'origin/main'.\njpuigcerver@fp:~/git_remots (main) $ git lga\n* b7adb78 - (2 seconds ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (2 seconds ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Vegem que els canvis s'han publicat correctament al repositori remot:</p> <p></p> <p>Figura 6. Canvis publicats a GitHub</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#clonacio-dun-repositori-remot-git-clone","title":"Clonaci\u00f3 d'un repositori remot (<code>git clone</code>)","text":"<p>L'ordre <code>git clone</code> permet copiar un repositori remot a un repositori local en el teu sistema, des del qual podr\u00e0s realitzar canvis.</p> <p>Aquesta ordre c\u00f2pia els continguts del Directori de Treball i tota la informaci\u00f3 del Repositori Local, incloent la hist\u00f2ria de canvis. A m\u00e9s, configura autom\u00e0ticament el repositori remot com a <code>origin</code>.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git clone &lt;url&gt; [&lt;directori&gt;]\n</code></pre></p> <ul> <li><code>&lt;url&gt;</code>: URL del repositori remot. Pot ser una URL HTTPS o SSH.</li> <li><code>&lt;directori&gt;</code>: Opcional. Nom del directori on es copiar\u00e0 el repositori. Per defecte, es crea un directori amb     el nom del repositori remot.</li> </ul> <p></p> <p>Figura 7. Clonaci\u00f3 d'un repositori remot</p> Exemple: Pau clona el repositori remot <p>En aquest exemple, el desenvolupador Pau clonar\u00e0 el repositori remot <code>git_remots</code> sobre el directori <code>~/git_remots_pau</code> del seu sistema.</p> <p>S'ha modificat el prompt per indicar les comandes que executaria Pau.</p> <pre><code>pau@fp:~ $ git clone git@github.com:jpuigcerver/git_remots.git ~/git_remots_pau\nCloning into '/home/pau/git_remots_pau'...\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 6 (delta 1), reused 6 (delta 1), pack-reused 0 (from 0)\nReceiving objects: 100% (6/6), done.\nResolving deltas: 100% (1/1), done.\npau@fp:~ $ cd ~/git_remots_pau\npau@fp:~/git_remots_pau (main) $ ls\nREADME.md\npau@fp:~/git_remots_pau (main) $ git lg\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>S'observa que s'ha clonat correctament el repositori remot <code>git_remots</code> al directori <code>~/git_remots_pau</code>, que cont\u00e9 els fitxers i la hist\u00f2ria de canvis del repositori remot.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#sincronitzacio-entre-repositoris-git-fetch","title":"Sincronitzaci\u00f3 entre repositoris (<code>git fetch</code>)","text":"Preparaci\u00f3: Pau realitza canvis <p>Pau crea el fitxer <code>pau.txt</code> amb el contingut <code>Canvi realitzat per Pau</code>.</p> <pre><code>pau@fp:~/git_remots_pau (main) $ echo \"Canvi realitzat per Pau\" &gt; pau.txt\npau@fp:~/git_remots_pau (main) $ git status\n    On branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n    pau.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\npau@fp:~/git_remots_pau (main) $ git add pau.txt\npau@fp:~/git_remots_pau (main) $ git commit -m \"pau.txt: Canvi realitzat per Pau\"\n[main 1b3b4b0] pau.txt: Canvi realitzat per Pau\n 1 file changed, 1 insertion(+)\n create mode 100644 pau.txt\npau@fp:~/git_remots_pau (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Despr\u00e9s, Pau puja els canvis al repositori remot.</p> <pre><code>pau@fp:~/git_remots_pau (main) $ git push\nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 303 bytes | 303.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:jpuigcerver/git_remots.git\n   b7adb78..1b3b4b0  main -&gt; main\npau@fp:~/git_remots_pau (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main, origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>L'ordre <code>git fetch</code> actualitza la informaci\u00f3 de les branques remotes <code>origin/&lt;branca&gt;</code> al nostre repositori local, per\u00f2 no aplica els canvis a les nostres branques locals.</p> <pre><code>git fetch [&lt;options&gt;] [&lt;remot&gt;]\n</code></pre> <ul> <li><code>&lt;options&gt;</code>: Opcions de la comanda.</li> <li><code>&lt;remot&gt;</code>: \u00c0lies del repositori remot. Per defecte, s'utilitza <code>origin</code>.</li> </ul> <p></p> <p>Figura 8. Sincronitzaci\u00f3 entre repositoris amb <code>git fetch</code></p> <p>Aquesta ordre \u00e9s \u00fatil per obtindre la informaci\u00f3 dels canvis realitzats en el repositori remot i decidir si volem incorporar-los al nostre repositori local.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git fetch</code>: https://git-scm.com/docs/git-fetch</p> <p>Info</p> <p>L'opci\u00f3 <code>--prune</code> permet eliminar les refer\u00e8ncies de les branques remotes que ja no existeixen en el repositori remot.</p> <p>Aquesta opci\u00f3 pot ser configurada per defecte amb la comanda <code>git config</code>.</p> <pre><code>git config --global fetch.prune true\n</code></pre> <p>Tamb\u00e9 es pot configurar perqu\u00e8 aquesta opci\u00f3 s'aplique en la comanda <code>git pull</code>.</p> <pre><code>git config --global remote.origin.prune true\n</code></pre> Exemple: Pau sincronitza el repositori remot <p>En aquest moment, Pau ha realitzat un canvi en el repositori remot, que no est\u00e0 reflectit en el nostre repositori local.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git lg\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Sincronitzem el repositori local amb el repositori remot, que cont\u00e9 els canvis realitzats per Pau.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git fetch\nremote: Enumerating objects: 4, done.\nremote: Counting objects: 100% (4/4), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (3/3), done.\nFrom github.com:jpuigcerver/git_remots\n   b7adb78..1b3b4b0  main     -&gt; origin/main\njpuigcerver@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>S'observa que la branca <code>origin/main</code> s'ha actualitzat amb el canvi realitzat per Pau, per\u00f2 la branca <code>main</code> continua en el commit anterior.</p>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#incorporacio-de-canvis-git-pull","title":"Incorporaci\u00f3 de canvis (<code>git pull</code>)","text":"<p>Per incorporar els canvis d'una branca remota a la branca local, utilitzarem l'ordre <code>git pull</code>.</p> <p>Aquesta ordre realitza dos accions:</p> <ul> <li><code>git fetch</code>: Actualitza la informaci\u00f3 de les branques remotes al nostre repositori local.</li> <li><code>git merge origin/&lt;branca&gt;</code>: Incorpora els canvis de la branca remota a la branca local.</li> </ul> <p></p> <p>Figura 9. Incorporaci\u00f3 de canvis amb <code>git pull</code></p> <pre><code>git pull [&lt;options&gt;] [&lt;remot&gt; [&lt;branca&gt;]\n</code></pre> <ul> <li><code>&lt;options&gt;</code>: Opcions de la comanda.</li> <li><code>&lt;remot&gt;</code>: \u00c0lies del repositori remot. Per defecte, s'utilitza la configuraci\u00f3 de la branca actual.</li> <li><code>&lt;branca&gt;</code>: Nom de la branca remota. Per defecte, s'utilitza la configuraci\u00f3 de la branca actual.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git pull</code>: https://git-scm.com/docs/git-pull</p> <p>Advert\u00e8ncia</p> <p>La fusi\u00f3 (<code>merge</code>) impl\u00edcita de <code>git pull</code> pot ser una Fusi\u00f3 directa o es pot produir una Fusi\u00f3 de branques divergents si la branca local i la branca remota divergeixen.</p> <p>En aquest \u00faltim cas:</p> <ul> <li>Poden produir conflictes. Si es produeixen, caldr\u00e0 resoldre'ls manualment.</li> <li>Executar directament <code>git pull</code> generar\u00e0 un commit de fusi\u00f3,     que pot ser no \u00e9s desitjable si es vol mantenir una hist\u00f2ria lineal.</li> </ul> <p>Consell</p> <p>Per evitar la fusi\u00f3 de branques divergents en <code>git pull</code>, es pot fer el seg\u00fcent:</p> <ul> <li> <p><code>git pull --ff-only</code>: Incorpora els canvis de la branca remota     nom\u00e9s si es pot fer una fusi\u00f3 directa (fast-forward).</p> <p>Git pot ser configurat perqu\u00e8 nom\u00e9s permeta aquest tipus de fusi\u00f3 en la comanda <code>git pull</code>.</p> <pre><code>git config --global pull.ff only\n</code></pre> </li> <li> <p><code>git pull --rebase</code>: Incorpora els canvis de la branca remota     mitjan\u00e7ant un rebase, \u00e9s a dir, aplica els canvis de la branca local     despr\u00e9s dels canvis de la branca remota.</p> <p>Aquest comportament tamb\u00e9 es pot configurar per defecte en la comanda <code>git pull</code>.</p> <pre><code>git config --global pull.rebase true\n</code></pre> </li> </ul> Exemple: Incorporaci\u00f3 de canvis fusi\u00f3 directa <p>Vegem com el commit <code>1b3b4b0</code> forma part de la branca remota <code>origin/main</code>, per\u00f2 no de la branca local <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\njpuigcerver@fp:~/git_remots (main) $ git status\nOn branch main\nYour branch is behind 'origin/main' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\n\nnothing to commit, working tree clean\n</code></pre> <p>Incorporem els canvis de la branca remota <code>origin/main</code> a la branca local <code>main</code>.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git pull\nUpdating b7adb78..1b3b4b0\nFast-forward\n pau.txt | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 pau.txt\njpuigcerver@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main, origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> Exemple: Incorporaci\u00f3 de canvis canvi de base Preparaci\u00f3: M\u00e9s canvis de Pau <pre><code>pau@fp:~/git_remots_pau (main) $ echo \"Un altre canvi de Pau\" &gt;&gt; pau.txt\npau@fp:~/git_remots_pau (main) $ git commit -a -m \"pau.txt: Un altre canvi de Pau\"\n[main 2b3b4b0] pau.txt: Un altre canvi de Pau\n 1 file changed, 1 insertion(+)\npau@fp:~/git_remots_pau (main) $ git push\nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 303 bytes | 303.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:jpuigcerver/git_remots.git\n   1b3b4b0..2b3b4b0  main -&gt; main\npau@fp:~/git_remots_pau (main) $ git lg\n* 2b3b4b0 - (2 minutes ago) pau.txt: Un altre canvi de Pau - Pau (HEAD -&gt; main, origin/main)\n* 1b3b4b0 - (10 minutes ago) pau.txt: Canvi realitzat per Pau - Pau\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Una de les situacions m\u00e9s comunes que ens porten a que la branca local divergisca de la branca remota \u00e9s quan realitzem canvis sobre la branca local sense haver sincronitzat abans el seu estat amb la branca remota associada.</p> <p>En aquest cas, Pau ha realitzat un altre canvi en el repositori remot, que nosaltres no hem incorporat.</p> <p>No obstant aix\u00f2, anem a fer un canvi a la branca local <code>main</code>, simulant la situaci\u00f3 anteriorment descrita.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git lg # (1)!\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main, origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\njpuigcerver@fp:~/git_remots (main) $ echo \"Canvi realitzat per Joan\" &gt;&gt; joan.txt\njpuigcerver@fp:~/git_remots (main) $ git add joan.txt\njpuigcerver@fp:~/git_remots (main) $ git commit -m \"joan.txt: Canvi realitzat per Joan\"\n[main 3b4b0b0] joan.txt: Canvi realitzat per Joan\n 1 file changed, 1 insertion(+)\n create mode 100644 joan.txt\njpuigcerver@fp:~/git_remots (main) $ git lg\n* 3b4b0b0 - (2 minutes ago) joan.txt: Canvi realitzat per Joan - Joan Puigcerver (HEAD -&gt; main)\n* 1b3b4b0 - (10 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>En aquest moment, el canvi de Pau <code>2b3b4b0</code> no est\u00e0 reflectit en el nostre repositori local.</li> </ol> <p>En aquest moment, podr\u00edem intentar publicar aquest canvi al repositori remot, per\u00f2 ens mostrar\u00e0 un error com que el repositori remot t\u00e9 canvis que no estan reflectits en el nostre repositori local.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git push\nTo github.com:jpuigcerver/git_remots.git\n! [rejected]        main -&gt; main (fetch first)\nerror: failed to push some refs to 'github.com:jpuigcerver/git_remots.git'\nhint: Updates were rejected because the remote contains work that you do not\nhint: have locally. This is usually caused by another repository pushing to\nhint: the same ref. If you want to integrate the remote changes, use\nhint: 'git pull' before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\njpuigcerver@fp:~/git_remots (main) $ git lga\n* 3b4b0b0 - (2 minutes ago) joan.txt: Canvi realitzat per Joan - Joan Puigcerver (HEAD -&gt; main)\n| * 2b3b4b0 - (2 minutes ago) pau.txt: Un altre canvi de Pau - Pau (origin/main)\n|/\n* 1b3b4b0 - (10 minutes ago) pau.txt: Canvi realitzat per Pau - Pau\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Vegem que l'ordre <code>git push</code> ens recomana fer un <code>git pull</code> per incorporar els canvis, ja que les dues branques han divergit.</p> <p>Si executem <code>git pull</code>, es produir\u00e0 una fusi\u00f3 de branques divergents, que crear\u00e0 un commit de fusi\u00f3 i resultar\u00e0 en una hist\u00f2ria no lineal.</p> <p>Intentem fer un <code>git pull --ff-only</code> per veure-ho.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git pull --ff-only\nhint: Diverging branches can't be fast-forwarded, you need to either:\nhint:\nhint:   git merge --no-ff\nhint:\nhint: or:\nhint:\nhint:   git rebase\nhint:\nhint: Disable this message with \"git config advice.diverging false\"\nfatal: Not possible to fast-forward, aborting.\n</code></pre> <p>Si volem conservar una hist\u00f2ria lineal, haurem de fer un canvi de base amb <code>git pull --rebase</code>.</p> <pre><code>jpuigcerver@fp:~/git_remots (main) $ git pull --rebase\nSuccessfully rebased and updated refs/heads/main.\njpuigcerver@fp:~/git_remots (main) $ git lga\n* 3b4b0b0 - (2 minutes ago) joan.txt: Canvi realitzat per Joan - Joan Puigcerver (HEAD -&gt; main)\n* 2b3b4b0 - (2 minutes ago) pau.txt: Un altre canvi de Pau - Pau (origin/main)\n* 1b3b4b0 - (10 minutes ago) pau.txt: Canvi realitzat per Pau - Pau\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#eliminar-una-branca-remota","title":"Eliminar una branca remota","text":"<p>Per eliminar una branca remota, cal utilitzar <code>git push</code> amb l'opci\u00f3 <code>-d</code>:</p> <pre><code>git push -d origin &lt;ref&gt;\n</code></pre> <ul> <li><code>ref</code>: Refer\u00e8ncia a esborrar, que inclou branques i etiquetes.</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/01_remots/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://git-scm.com/book/en/v2</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","GitHub","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/021_transparencies_auth/","title":"Transpar\u00e8ncies: M\u00e8todes d'autenticaci\u00f3 a GitHub","text":""},{"location":"apunts/03_remots/021_transparencies_auth/#metodes-dautenticacio-a-github","title":"M\u00e8todes d'autenticaci\u00f3 a GitHub","text":""},{"location":"apunts/03_remots/021_transparencies_auth/#introduccio-a-git-i-la-seua-aplicacio-a-laula","title":"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula","text":""},{"location":"apunts/03_remots/021_transparencies_auth/#repositori-remot","title":"Repositori remot","text":""},{"location":"apunts/03_remots/021_transparencies_auth/#desenvolupament-distribuit","title":"Desenvolupament distribu\u00eft","text":""},{"location":"apunts/03_remots/021_transparencies_auth/#metodes-dautenticacio-a-github_1","title":"M\u00e8todes d'autenticaci\u00f3 a GitHub","text":"<ul> <li>Nom d'usuari i contrasenya (2021)</li> <li>(HTTPS) Personal Access Token (PAT)</li> <li>(SSH) Clau SSH</li> </ul>"},{"location":"apunts/03_remots/021_transparencies_auth/#token-dacces-personal-pat","title":"Token d'acc\u00e9s personal (PAT)","text":"<p>Generat desde Settings &gt; Developer settings &gt; Personal access tokens</p> <ul> <li>Classic</li> <li>Fine-grained</li> </ul> <pre><code>git config --global credential.helper store\n</code></pre>"},{"location":"apunts/03_remots/021_transparencies_auth/#clau-ssh","title":"Clau SSH","text":"<ul> <li>Generar clau SSH localment</li> <li>Afegir clau a GitHub</li> </ul> <pre><code>ssh-keygen -t rsa -b 4096\n</code></pre>"},{"location":"apunts/03_remots/022_transparencies_remots/","title":"Transpar\u00e8ncies: Remots","text":""},{"location":"apunts/03_remots/022_transparencies_remots/#remots","title":"Remots","text":""},{"location":"apunts/03_remots/022_transparencies_remots/#introduccio-a-git-i-la-seua-aplicacio-a-laula","title":"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula","text":""},{"location":"apunts/03_remots/022_transparencies_remots/#repositori-remot","title":"Repositori remot","text":""},{"location":"apunts/03_remots/022_transparencies_remots/#desenvolupament-distribuit","title":"Desenvolupament distribu\u00eft","text":""},{"location":"apunts/03_remots/022_transparencies_remots/#afegir-un-repositori-remot","title":"Afegir un repositori remot","text":"<pre><code>git remote add origin &lt;url&gt;\n</code></pre> <ul> <li>(HTTPS) Personal Access Token (PAT)</li> <li>(SSH) Clau SSH</li> </ul>"},{"location":"apunts/03_remots/022_transparencies_remots/#associacio-branques-locals-i-remotes","title":"Associaci\u00f3 branques locals i remotes","text":"<pre><code>git push [-u | --set-upstream] origin &lt;branca&gt;\n</code></pre>"},{"location":"apunts/03_remots/022_transparencies_remots/#clonar-un-repositori","title":"Clonar un repositori","text":"<pre><code>git clone &lt;url&gt; [&lt;directori&gt;]\n</code></pre>"},{"location":"apunts/03_remots/022_transparencies_remots/#sincronitzacio","title":"Sincronitzaci\u00f3","text":"<p><pre><code>git fetch\n</code></pre> </p>"},{"location":"apunts/03_remots/022_transparencies_remots/#integracio-de-canvis","title":"Integraci\u00f3 de canvis","text":"<pre><code>git pull [--rebase]\n</code></pre>"},{"location":"apunts/03_remots/03_exercici/","title":"Exercici: Remots","text":""},{"location":"apunts/03_remots/03_exercici/#objectius","title":"Objectius","text":"<p>Els objectius d'aquests exercici s\u00f3n:</p> <ul> <li>Con\u00e9ixer com crear un repositori remot a  GitHub.</li> <li>Con\u00e9ixer com configurar un repositori remot.</li> <li>Con\u00e9ixer com associar una branca local a una branca remota.</li> <li>Con\u00e9ixer com publicar els canvis d'una branca al repositori remot.</li> <li>Con\u00e9ixer com sincronitzar l'estat dels repositoris local i remot.</li> <li>Con\u00e9ixer com incorporar canvis d'una branca remota a una branca local.</li> <li>Con\u00e9ixer com clonar un repositori remot.</li> <li>Con\u00e9ixer com eliminar una branca remota.</li> </ul>"},{"location":"apunts/03_remots/03_exercici/#exercici","title":"Exercici","text":""},{"location":"apunts/03_remots/03_exercici/#creacio-repositori-remot","title":"Creaci\u00f3 repositori remot","text":"<ol> <li>Crea un compte a  GitHub si no en tens un.</li> <li>Crea un repositori remot anomenat <code>bloc3_exercici</code> completament buit:<ol> <li>No afegisques cap fitxer (README.md, LICENSE, .gitignore, etc.).</li> </ol> </li> </ol>"},{"location":"apunts/03_remots/03_exercici/#creacio-repositori-local","title":"Creaci\u00f3 repositori local","text":"<ol> <li>Crea un directori anomenat <code>bloc3_exercici</code> en la teua carpeta de treball.</li> <li>Inicialitza un repositori de Git en aquest directori.</li> <li>Crea un fitxer anomenat <code>llibres.txt</code> i afegeix tres llibres que t'agraden.</li> <li>Fes un primer commit.</li> <li>Reanomena la branca principal a <code>main</code>.</li> </ol>"},{"location":"apunts/03_remots/03_exercici/#enllac-amb-repositori-remot","title":"Enlla\u00e7 amb repositori remot","text":"<ol> <li>Configura el repositori local per afegir el repositori remot     creat anteriorment com a <code>origin</code>.</li> <li>Publica la branca <code>main</code> al repositori remot, associant-la a la branca <code>origin/main</code>     del repositori remot.</li> </ol> <p>Consell</p> <p>Comprova a  GitHub que el repositori remot cont\u00e9 el fitxer <code>llibres.txt</code>.</p>"},{"location":"apunts/03_remots/03_exercici/#clonacio-del-repositori-remot","title":"Clonaci\u00f3 del repositori remot","text":"<ol> <li>Clona el repositori remot a un directori anomenat     <code>bloc3_exercici_clone</code> en la teua carpeta de treball.</li> <li>Comprova que el directori <code>bloc3_exercici_clone</code> cont\u00e9 el fitxer     <code>llibres.txt</code>.</li> <li>Configura el repositori clonat per realitzar commits amb el seg\u00fcent usuari:     <pre><code>git config user.name \"Brian\"\ngit config user.email \"brian.cohen@fpmislata.com\"\n</code></pre></li> </ol>"},{"location":"apunts/03_remots/03_exercici/#publicacio-de-canvis","title":"Publicaci\u00f3 de canvis","text":"<p>Important</p> <p>A partir d'aquest punt treballarem amb els dos repositoris locals: <code>bloc3_exercici</code> i <code>bloc3_exercici_clone</code>.</p> <p>Des del repositori <code>bloc3_exercici_clone</code>:</p> <ol> <li>Afegeix la pel\u00b7l\u00edcula La vida de Brian al fitxer <code>pelicules.txt</code>.</li> <li>Realitza un commit.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> </ol>"},{"location":"apunts/03_remots/03_exercici/#incorporacio-de-canvis-amb-fusio-directa","title":"Incorporaci\u00f3 de canvis amb fusi\u00f3 directa","text":"<p>Des del repositori <code>bloc3_exercici</code>:</p> <ol> <li>Sincronitza el repositori local amb el repositori remot amb <code>git fetch</code>.</li> <li>Observa el <code>log</code> de canvis.</li> <li>Incorpora els canvis de la branca <code>origin/main</code> a la branca <code>main</code> local.</li> </ol>"},{"location":"apunts/03_remots/03_exercici/#incorporacio-de-canvis-amb-fusio-de-branques-divergents","title":"Incorporaci\u00f3 de canvis amb fusi\u00f3 de branques divergents","text":"<p>Des del repositori <code>bloc3_exercici</code>:</p> <ol> <li>Afegeix una pel\u00b7l\u00edcula a <code>pelicules.txt</code>.</li> <li>Realitza un commit.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> </ol> <p>Des del repositori <code>bloc3_exercici_clone</code>:</p> <ol> <li>Afegeix la pel\u00b7l\u00edcula Monty Python and the Holy Grail al fitxer <code>pelicules.txt</code>.</li> <li>Realitza un commit.</li> <li> <p>Tracta de publicar la branca <code>main</code> al repositori remot.</p> <p>Question</p> <p>Per qu\u00e8 no pots publicar la branca <code>main</code> al repositori remot?</p> </li> <li> <p>Incorpora els canvis de la branca <code>origin/main</code> a la branca <code>main</code> local.</p> </li> <li>Resol els conflictes que puguen apar\u00e9ixer.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> </ol>"},{"location":"apunts/03_remots/03_exercici/#incorporacio-de-canvis-amb-canvi-de-base","title":"Incorporaci\u00f3 de canvis amb canvi de base","text":"<p>Des del repositori <code>bloc3_exercici</code>:</p> <ol> <li>Incorpora els canvis de la branca <code>origin/main</code> a la branca <code>main</code> local.</li> <li>Afegeix una altra pel\u00b7l\u00edcula a <code>pelicules.txt</code>.</li> <li>Realitza un commit.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> </ol> <p>Des del repositori <code>bloc3_exercici_clone</code>:</p> <ol> <li>Sincronitza el repositori local amb el repositori remot (<code>git fetch</code>).</li> <li>Afegeix la pel\u00b7l\u00edcula El sentit de la vida al fitxer <code>pelicules.txt</code>.</li> <li>Realitza un commit.</li> <li>Incorpora els canvis de la branca <code>origin/main</code> a la branca <code>main</code> local     amb un canvi de base.</li> <li>Resol els conflictes que puguen apar\u00e9ixer.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> </ol>"},{"location":"apunts/03_remots/03_exercici/#branques-i-remots","title":"Branques i remots","text":"<p>Des del repositori <code>bloc3_exercici</code>:</p> <ol> <li>Incorpora els canvis de la branca <code>origin/main</code> a la branca <code>main</code> local.</li> <li>Crea una branca anomenada <code>musica</code>.</li> <li>Afegeix una can\u00e7\u00f3 a <code>musica.txt</code>.</li> <li>Realitza un commit.</li> <li>Publica la branca <code>musica</code> al repositori remot.</li> <li>Comprova que la branca <code>musica</code> est\u00e0 publicada al repositori remot.</li> <li>Fusiona la branca <code>musica</code> amb la branca <code>main</code>.</li> <li>Publica la branca <code>main</code> al repositori remot.</li> <li>Elimina la branca local <code>musica</code>.</li> <li>Elimina la branca remota <code>musica</code>.</li> </ol>"},{"location":"apunts/04_avancat/01_etiquetes/","title":"Etiquetes","text":"","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#etiquetes","title":"Etiquetes","text":"<p>En Git, tots els commits estan identificats mitjan\u00e7ant un hash, que es un identificador alfanum\u00e8ric que es genera quan creem un commit. No obstant aix\u00f2, de vegades \u00e9s \u00fatil identificar punts concrets (commits) en l'estat del nostre repositori amb un nom \u00e9s m\u00e9s f\u00e0cil i significatiu que un hash.</p> <p>Per aquesta ra\u00f3, Git ens permet crear etiquetes (tags) per a marcar punts concrets en la hist\u00f2ria del nostre repositori.</p> <p>Normalment, en projectes de desenvolupament, les etiquetes s'utilitzen per identificar noves publicacions (releases): <code>v1.0</code>, <code>v2.0</code>, ..., per\u00f2 poden ser utilitzades per qualsevol prop\u00f2sit.</p> <p>Hi ha dos tipus d'etiquetes, les etiquetes lleugeres i les etiquetes anotades.</p> <ul> <li>Una etiqueta lleugera \u00e9s una refer\u00e8ncia alfanum\u00e8rica que s'especifica a un commit.</li> <li>Una etiqueta anotada \u00e9s un objecte de Git que, a m\u00e9s, cont\u00e9 qui ha creat l'etiqueta, la data de creaci\u00f3 i un missatge.</li> </ul> <p>Documentaci\u00f3</p> <ul> <li>Documentaci\u00f3 oficial sobre etiquetes.</li> <li>Apartat 2.6 Git Basics - Tagging del llibre Pro Git.</li> </ul> Preparaci\u00f3 repositori <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_etiquetes\njpuigcerver@fp:~ $ cd ~/git_etiquetes\njpuigcerver@fp:~/git_etiquetes $ git init\nInitialized empty Git repository in ~/git_etiquetes/.git/\njpuigcerver@fp:~/git_etiquetes (main) $ git branch -m main\njpuigcerver@fp:~/git_etiquetes (main) $ echo \"# Etiquetes\" &gt; README.md\njpuigcerver@fp:~/git_etiquetes (main) $ git add README.md\njpuigcerver@fp:~/git_etiquetes (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) 2dc09af] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_etiquetes (main) $ echo \"Repositori d'exemple amb etiquetes\" &gt;&gt; README.md\njpuigcerver@fp:~/git_etiquetes (main) $ git commit -a -m \"README: Descripci\u00f3\"\n[main da2c930] README: Descripci\u00f3\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_etiquetes (main) $ echo \"\" &gt;&gt; README.md\njpuigcerver@fp:~/git_etiquetes (main) $ echo \"## Tipus de etiquetes\" &gt;&gt; README.md\njpuigcerver@fp:~/git_etiquetes (main) $ git commit -a -m \"README: Apartat tipus de etiquetes\"\n[main 7909b46] README: Apartat tipus de etiquetes\n 1 file changed, 2 insertions(+)\njpuigcerver@fp:~/git_etiquetes (main) $ echo \"Existeixen dos tipus de etiquetes: anotades i lleugeres\" &gt;&gt; README.md\njpuigcerver@fp:~/git_etiquetes (main) $ git commit -a -m \"README: Descripci\u00f3 tipus de etiquetes\"\n[main e29a607] README: Descripci\u00f3 tipus de etiquetes\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_etiquetes (main) $ git lga\n* e29a607 - (0 seconds ago) README: Descripci\u00f3 tipus de etiquetes - Joan Puigcerver (HEAD -&gt; main)\n* 7909b46 - (0 seconds ago) README: Apartat tipus de etiquetes - Joan Puigcerver\n* da2c930 - (0 seconds ago) README: Descripci\u00f3 - Joan Puigcerver\n* 2dc09af - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#numeracio-de-versions","title":"Numeraci\u00f3 de versions","text":"<p>En projectes de desenvolupament, \u00e9s com\u00fa utilitzar un sistema de numeraci\u00f3 de versions per identificar les diferents versions del software.</p> <p>Una bona pr\u00e0ctica \u00e9s utilitzar el sistema de numeraci\u00f3 sem\u00e0ntica, que permet identificar de forma clara i senzilla els canvis que s'han realitzat en cada versi\u00f3.</p> <p>El sistema de numeraci\u00f3 sem\u00e0ntica SemVer especifica el seg\u00fcent format per a les versions:</p> <pre><code>MAJOR.MINOR.PATCH\n</code></pre> <ol> <li><code>MAJOR</code>: Cal incrementar aquest comptador quan es realitzen canvis incompatibles amb versions anteriors.</li> <li><code>MINOR</code>: Cal incrementar aquest comptador quan s'afegeixen funcionalitats compatibles amb versions anteriors.</li> <li><code>PATCH</code>: Cal incrementar aquest comptador quan es realitzen correccions de bugs compatibles amb versions anteriors.</li> </ol> Exemple: Numeraci\u00f3 de versions <p>La versi\u00f3 <code>1.2.0</code> indica:</p> <ul> <li><code>1</code>: Versi\u00f3 major.</li> <li><code>2</code>: Versi\u00f3 menor.</li> <li><code>0</code>: Versi\u00f3 de correcci\u00f3 de bugs.</li> </ul> <p>Si en aquest punt es realitza una addici\u00f3 de funcionalitats compatibles amb versions anteriors, la versi\u00f3 seg\u00fcent seria <code>1.3.0</code>.</p> <p>Despr\u00e9s, si es realitzen correccions de bugs compatibles amb versions anteriors, la versi\u00f3 seg\u00fcent seria <code>1.3.1</code>.</p> <p>En canvi, si es realitzen canvis incompatibles amb versions anteriors, la versi\u00f3 seg\u00fcent seria <code>2.0.0</code>.</p>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#creacio-detiquetes","title":"Creaci\u00f3 d'etiquetes","text":"<p>L'ordre <code>git tag</code> ens permet crear etiquetes lleugeres o anotades.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git tag [-a] &lt;nom_etiqueta&gt; [-m \"missatge\"] [&lt;ref&gt;]\n</code></pre></p> <ul> <li><code>-a</code>: Crea una etiqueta anotada. Si no s'especifica, es crea una etiqueta lleugera.</li> <li><code>&lt;nom_etiqueta&gt;</code>: Nom de l'etiqueta.</li> <li><code>-m \"missatge\"</code>: Missatge de l'etiqueta anotada. Si no s'especifica, s'obrir\u00e0 un editor per escriure el missatge.</li> <li><code>&lt;ref&gt;</code>: Refer\u00e8ncia al commit al qual volem associar l'etiqueta. Si no s'especifica, es crea en el commit actual (<code>HEAD</code>).</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial sobre etiquetes.</p> Exemple: Creaci\u00f3 d'etiqueta anotada <p>S'han creat la etiquetes anotades:</p> <ul> <li><code>v1.0.0</code> en el primer commit, amb el missatge <code>Primera versi\u00f3: v1.0.0</code>.</li> <li><code>v2.0.0</code> en el commit README: Apartat tipus etiquetes, amb el missatge <code>Versi\u00f3: v2.0.0</code>.</li> </ul> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git tag -a v1.0.0 -m \"Primera versi\u00f3: v1.0.0\" 2dc09af\njpuigcerver@fp:~/git_etiquetes (main) $ git tag -a v2.0.0 -m \"Versi\u00f3: v2.0.0\" 7909b46\njpuigcerver@fp:~/git_etiquetes (main) $ git lga\n* e29a607 - (0 seconds ago) README: Descripci\u00f3 tipus de etiquetes - Joan Puigcerver (HEAD -&gt; main)\n* 7909b46 - (0 seconds ago) README: Apartat tipus de etiquetes - Joan Puigcerver (tag: v2.0.0)\n* da2c930 - (0 seconds ago) README: Descripci\u00f3 - Joan Puigcerver\n* 2dc09af - (0 seconds ago) Commit inicial - Joan Puigcerver (tag: v1.0.0)\n</code></pre> Exemple: Creaci\u00f3 d'etiqueta lleugera <p>S'han creat la etiquetes lleugeres:</p> <ul> <li><code>v1.1.0</code> en el commit README: Descripci\u00f3.</li> <li><code>v2.1.0</code> en el commit actual.</li> </ul> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git tag v1.1.0 da2c930\njpuigcerver@fp:~/git_etiquetes (main) $ git tag v2.1.0\njpuigcerver@fp:~/git_etiquetes (main) $ git lga\n* e29a607 - (0 seconds ago) README: Descripci\u00f3 tipus de etiquetes - Joan Puigcerver (HEAD -&gt; main, tag: v2.1.0)\n* 7909b46 - (0 seconds ago) README: Apartat tipus de etiquetes - Joan Puigcerver (tag: v2.0.0)\n* da2c930 - (0 seconds ago) README: Descripci\u00f3 - Joan Puigcerver (tag: v1.1.0)\n* 2dc09af - (0 seconds ago) Commit inicial - Joan Puigcerver (tag: v1.0.0)\n</code></pre>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#llistar-etiquetes","title":"Llistar etiquetes","text":"<p>L'ordre <code>git tag</code> sense arguments ens permet llistar les etiquetes del nostre repositori.</p> <pre><code>git tag [-l | --list] [&lt;patr\u00f3&gt;]\n</code></pre> <ul> <li><code>-l</code> o <code>--list</code>: Llista les etiquetes.</li> <li><code>&lt;patr\u00f3&gt;</code>: Patr\u00f3 per filtrar les etiquetes que permeten car\u00e0cters comod\u00ed (wildcards).</li> </ul> <p>Documentaci\u00f3</p> <p>Apartat de la documentaci\u00f3 oficial sobre tag --list.</p> Exemple: Llistar etiquetes <p>Mostrem les etiquetes del nostre repositori.</p> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git tag\nv1.0.0\nv1.1.0\nv2.0.0\nv2.1.0\n</code></pre> Exemple: Llistar etiquetes amb patr\u00f3 <p>Mostrem les etiquetes del nostre repositori que comencen per <code>v2.</code>.</p> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git tag -l \"v2.*\"\nv2.0.0\nv2.1.0\n</code></pre>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#consultar-informacio-duna-etiqueta","title":"Consultar informaci\u00f3 d'una etiqueta","text":"<p>L'ordre <code>git show</code> ens permet consultar la informaci\u00f3 d'una etiqueta.</p> <pre><code>git show &lt;nom_etiqueta&gt;\n</code></pre> <ul> <li>En cas de les etiquetes lleugeres, es mostrar\u00e0 la informaci\u00f3 del commit associat.</li> <li>En cas de les etiquetes anotades, a m\u00e9s, es mostrar\u00e0 la persona que ha creat l'etiqueta, la data de creaci\u00f3 i el missatge associat.</li> </ul> Exemple: Consultar informaci\u00f3 d'una etiqueta anotada <p>Mostrem la informaci\u00f3 de l'etiqueta anotada <code>v1.0.0</code>.</p> <p>Podem observar:</p> <ul> <li>La persona que ha creat l'etiqueta.</li> <li>La data de creaci\u00f3.</li> <li>El missatge associat.</li> <li>El commit associat.</li> </ul> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git show v1.0.0\ntag v1.0.0\nTagger: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Sat Oct 19 20:51:43 2024 +0200\n\nPrimera versi\u00f3: v1.0.0\n\ncommit 2dc09af5ba36816057c43a04f3d7f75cf3302bd0\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Sat Oct 19 20:51:43 2024 +0200\n\n    Commit inicial\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..81387f9\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1 @@\n+# Etiquetes\n</code></pre> Exemple: Consultar informaci\u00f3 d'una etiqueta lleugera <p>Mostrem la informaci\u00f3 de l'etiqueta lleugera <code>v1.1.0</code>.</p> <p>En aquest cas, sols podem veure el commit associat.</p> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git show v1.1.0\ncommit da2c93043a5ee159146b38a3f0d66ec6862312a6\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Sat Oct 19 20:51:43 2024 +0200\n\n    README: Descripci\u00f3\n\ndiff --git a/README.md b/README.md\nindex 81387f9..199416c 100644\n--- a/README.md\n+++ b/README.md\n@@ -1 +1,2 @@\n # Etiquetes\n+Repositori d'exemple amb etiquetes\n</code></pre>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#eliminar-etiquetes","title":"Eliminar etiquetes","text":"<p>L'ordre <code>git tag</code> amb l'opci\u00f3 <code>-d</code> ens permet eliminar etiquetes.</p> <pre><code>git tag -d &lt;nom_etiqueta&gt;\n</code></pre> Exemple: Eliminar etiquetes <p>Eliminem l'etiqueta lleugera <code>v1.1.0</code>.</p> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git tag -d v1.1.0\nDeleted tag 'v1.1.0' (was da2c930)\njpuigcerver@fp:~/git_etiquetes (main) $ git tag\nv1.0.0\nv2.0.0\nv2.1.0\njpuigcerver@fp:~/git_etiquetes (main) $ git lga\n* e29a607 - (0 seconds ago) README: Descripci\u00f3 tipus de etiquetes - Joan Puigcerver (HEAD -&gt; main, tag: v2.1.0)\n* 7909b46 - (0 seconds ago) README: Apartat tipus de etiquetes - Joan Puigcerver (tag: v2.0.0)\n* da2c930 - (0 seconds ago) README: Descripci\u00f3 - Joan Puigcerver\n* 2dc09af - (0 seconds ago) Commit inicial - Joan Puigcerver (tag: v1.0.0)\n</code></pre>","tags":["tag"]},{"location":"apunts/04_avancat/01_etiquetes/#etiquetes-en-el-repositori-remot","title":"Etiquetes en el repositori remot","text":"<p>Per publicar una etiqueta en el repositori remot, utilitzarem l'ordre <code>git push</code>:</p> <pre><code>git push origin &lt;nom_etiqueta&gt;\n</code></pre> <p>Si desitgem publicar totes les etiquetes, utilitzarem l'opci\u00f3 <code>--tags</code>:</p> <pre><code>git push origin --tags\n</code></pre> <p>En cas de voler eliminar una etiqueta del repositori remot, utilitzarem l'opci\u00f3 <code>--delete</code>:</p> <pre><code>git push [-d | --delete] origin &lt;nom_etiqueta&gt;\n</code></pre> Enlla\u00e7 amb el repositori remot <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git remote add origin git@github.com:joapuiib/cursgit_etiquetes.git\njpuigcerver@fp:~/git_etiquetes (main) $ git push -u origin main\nbranch 'main' set up to track 'origin/main'.\nTo github.com:joapuiib/cursgit_etiquetes.git\n * [new branch]      main -&gt; main\njpuigcerver@fp:~/git_etiquetes (main) $ git lga\n* e29a607 - (2 seconds ago) README: Descripci\u00f3 tipus de etiquetes - Joan Puigcerver (HEAD -&gt; main, tag: v2.1.0, origin/main)\n* 7909b46 - (2 seconds ago) README: Apartat tipus de etiquetes - Joan Puigcerver (tag: v2.0.0)\n* da2c930 - (2 seconds ago) README: Descripci\u00f3 - Joan Puigcerver\n* 2dc09af - (2 seconds ago) Commit inicial - Joan Puigcerver (tag: v1.0.0)\n</code></pre> <p>Podem veure que les etiquetes creades en el nostre repositori local no estan en el repositori remot.</p> <p></p> Exemple: Etiquetes en el repositori remot <p>Publiquem totes les etiquetes en el repositori remot.</p> <pre><code>jpuigcerver@fp:~/git_etiquetes (main) $ git push origin --tags\nTo github.com:joapuiib/cursgit_etiquetes.git\n * [new tag]         v1.0.0 -&gt; v1.0.0\n * [new tag]         v2.0.0 -&gt; v2.0.0\n * [new tag]         v2.1.0 -&gt; v2.1.0\n</code></pre> <p>Vegem que les etiquetes creades en el nostre repositori local s'han publicat en el repositori remot.</p> <p></p>","tags":["tag"]},{"location":"apunts/04_avancat/02_stash/","title":"Reserva de canvis (stash)","text":"","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#reserva-de-canvis-stash","title":"Reserva de canvis (stash)","text":"<p>La reserva de canvis o <code>stash</code> en Git es un magatzem que permet guardar temporalment els canvis que encara no es volen confirmar (commit).</p> <p>Aquesta funci\u00f3 \u00e9s \u00fatil si heu de realitzar alguna acci\u00f3 de Git que, d'altra manera, vos faria perdre els canvis que heu realitzat al directori de treball.</p> <ul> <li>Canviar de branca.</li> <li>Incorporar canvis d'una altra branca (<code>merge</code>, <code>rebase</code> o <code>pull</code>).</li> </ul> <p>La reserva de canvis permet guardar aquests canvis temporalment i recuperar-los posteriorment quan siga necessari.</p> Preparaci\u00f3 repositori <p>Inicialitzem un repositori amb canvis en el fitxer <code>README.md</code> i una branca addicional <code>feature/documentacio</code> on s'han fet canvis al mateix fitxer.</p> <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_stash\njpuigcerver@fp:~ $ cd ~/git_stash\njpuigcerver@fp:~/git_stash $ git init\nInitialized empty Git repository in ~/git_stash/.git/\njpuigcerver@fp:~/git_stash (main) $ git branch -m main\njpuigcerver@fp:~/git_stash (main) $ echo \"# Reserva de canvis\" &gt; README.md\njpuigcerver@fp:~/git_stash (main) $ git add README.md\njpuigcerver@fp:~/git_stash (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) fba8bc4] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_stash (main) $ echo \"Repositori d'exemple amb reserva de canvis\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (main) $ git commit -a -m \"README: Descripci\u00f3\"\n[main f4e28c6] README: Descripci\u00f3\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_stash (main) $ git checkout -b feature/documentacio\nSwitched to a new branch 'feature/documentacio'\njpuigcerver@fp:~/git_stash (feature/documentacio) $ echo \"\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (feature/documentacio) $ echo \"## Documentaci\u00f3\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (feature/documentacio) $ echo \"- https://git-scm.com/docs/git-stash\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (feature/documentacio) $ git commit -a -m \"README: Documentaci\u00f3\"\n[feature/documentacio 305357f] README: Documentaci\u00f3\n 1 file changed, 3 insertions(+)\njpuigcerver@fp:~/git_stash (feature/documentacio) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_stash (main) $ git lga\n* 305357f - (0 seconds ago) README: Documentaci\u00f3 - Joan Puigcerver (feature/documentacio)\n* f4e28c6 - (0 seconds ago) README: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* fba8bc4 - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#crear-una-reserva-de-canvis","title":"Crear una reserva de canvis","text":"<p>La comanda <code>git stash</code> permet guardar els canvis que s'han realitzat al directori de treball.</p> <pre><code>git stash [-m &lt;missatge&gt;]\n</code></pre> <p>Aquesta comanda inclour\u00e0 els canvis a una pila de canvis:</p> <ul> <li>Els nous canvis es guardaran a la primera posici\u00f3 del <code>stash</code> com a <code>stash@{0}</code>.</li> <li>La resta de canvis es despla\u00e7aran una posici\u00f3 a la dreta, incrementant l'\u00edndex en 1.</li> </ul> <p>A m\u00e9s, es pot afegir un missatge al <code>stash</code> per identificar millor els canvis guardats.</p> <p></p> <p>Figura 1. Reservar canvis amb <code>stash</code></p> Exemple: Crear una reserva de canvis <p>En aquest exemple, es guardaran els canvis realitzats al fitxer <code>README.md</code> al <code>stash</code>.</p> <p>Com que canviar a la branca <code>feature/documentacio</code> sobreescriuria el contingut de <code>README.md</code>, Git no ens ho permet i ens recomana reservar els canvis o confirmar-los.</p> <pre><code>jpuigcerver@fp:~/git_stash (main) $ echo \"\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (main) $ echo \"L'ordre git stash permet reservar els canvis temporalment per a poder fer altres tasques.\" &gt;&gt; README.md\njpuigcerver@fp:~/git_stash (main) $ git status\nOn branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_stash (main) $ git checkout feature/documentacio\nerror: Your local changes to the following files would be overwritten by checkout:\n    README.md\nPlease commit your changes or stash them before you switch branches.\nAborting\njpuigcerver@fp:~/git_stash (main) $ git stash -m \"Text git stash\"\nSaved working directory and index state On main: Text git stash\njpuigcerver@fp:~/git_stash (main) $ git status\nOn branch main\nnothing to commit, working tree clean\njpuigcerver@fp:~/git_stash (main) $ git checkout feature/documentacio\nSwitched to branch 'feature/documentacio'\njpuigcerver@fp:~/git_stash (feature/documentacio) $ git checkout main\nSwitched to branch 'main'\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#mostrar-les-reserves-de-canvis","title":"Mostrar les reserves de canvis","text":"<p>Per mostrar els <code>stash</code> existents, cal executar la comanda:</p> <pre><code>git stash list\n</code></pre> <p>Aquesta comanda mostrar\u00e0 una llista amb els <code>stash</code> existents, identificats per l'\u00edndex i el missatge que s'ha afegit al <code>stash</code>.</p> Exemple: Mostrar les reserves de canvis <pre><code>jpuigcerver@fp:~/git_stash (main) $ git stash list\nstash@{0}: On main: Text git stash\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#mostrar-els-canvis-duna-reserva","title":"Mostrar els canvis d'una reserva","text":"<p>Els canvis guardats en una reserva de canvis poden ser consultats mitjan\u00e7ant l'acci\u00f3 <code>show</code>. Aquesta acci\u00f3 mostrar\u00e0 els fitxers que s'han canviat.</p> <pre><code>git stash show [-p] [index]\n</code></pre> <p>Addicionalment, podem mostrar els canvis (<code>diff</code>) mitjan\u00e7ant l'opci\u00f3 <code>-p</code>.</p> <p>Tamb\u00e9 es pot indicar l'\u00edndex del <code>stash</code> que es vol consultar. Si no s'indica, mostrar\u00e0 per defecte el <code>stash@{0}</code>.</p> Exemple: Mostrar els canvis d'una reserva <pre><code>jpuigcerver@fp:~/git_stash (main) $ git stash show\n README.md | 2 ++\n 1 file changed, 2 insertions(+)\njpuigcerver@fp:~/git_stash (main) $ git stash show -p\ndiff --git a/README.md b/README.md\nindex dd979cc..a0acb65 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,4 @@\n # Reserva de canvis\n Repositori d'exemple amb reserva de canvis\n+\n+L'ordre git stash permet reservar els canvis temporalment per a poder fer altres tasques.\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#recuperar-els-canvis","title":"Recuperar els canvis","text":"<p>Els canvis reservats poden recuperar-se mitjan\u00e7ant l'acci\u00f3 <code>apply</code>.</p> <pre><code>git stash apply [index]\n</code></pre> <p>Aquesta acci\u00f3 aplicar\u00e0 els canvis guardats al directori de treball.</p> <p>Tamb\u00e9 es pot indicar l'\u00edndex del <code>stash</code> que es vol aplicar. Si no s'indica, s'aplicar\u00e0 per defecte el <code>stash@{0}</code>.</p> <p></p> <p>Figura 2. Recuperar canvis amb <code>stash apply</code></p> <p>Si a m\u00e9s, volem esborrar la reserva de canvis, podem utilitzar l'opci\u00f3 <code>pop</code>. <pre><code>git stash pop [index]\n</code></pre></p> <p></p> <p>Figura 3. Recuperar canvis i esborrar la reserva amb <code>stash pop</code></p> Exemple: Recuperar els canvis <pre><code>jpuigcerver@fp:~/git_stash (main) $ git status\nOn branch main\nnothing to commit, working tree clean\njpuigcerver@fp:~/git_stash (main) $ git stash apply\nOn branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_stash (main) $ git diff\ndiff --git a/README.md b/README.md\nindex dd979cc..a0acb65 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,4 @@\n # Reserva de canvis\n Repositori d'exemple amb reserva de canvis\n+\n+L'ordre git stash permet reservar els canvis temporalment per a poder fer altres tasques.\njpuigcerver@fp:~/git_stash (main) $ git stash list\nstash@{0}: On main: Text git stash\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/02_stash/#descartar-els-canvis","title":"Descartar els canvis","text":"<p>Una reserva de canvis pot ser eliminada de la pila de canvis mitjan\u00e7ant l'acci\u00f3 <code>drop</code>.</p> <pre><code>git stash drop [index]\n</code></pre> <p>Tamb\u00e9 es pot indicar l'\u00edndex del <code>stash</code> que es vol descartar. Si no s'indica, es descartar\u00e0 per defecte el <code>stash@{0}</code>.</p> Exemple: Descartar els canvis <pre><code>jpuigcerver@fp:~/git_stash (main) $ git stash list\nstash@{0}: On main: Text git stash\njpuigcerver@fp:~/git_stash (main) $ git stash drop\nDropped refs/stash@{0} (6454e0cf44cfd7835b14d1baec30e4cdf71a8640)\njpuigcerver@fp:~/git_stash (main) $ git stash list\n</code></pre>","tags":["stash"]},{"location":"apunts/04_avancat/03_reset_amend/","title":"Reset i Amend","text":"","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#reset","title":"Reset","text":"<p>L'ordre <code>git reset</code> ens permet moure la refer\u00e8ncia de la branca actual a qualsevol altre commit del repositori. Aix\u00f2 significa que podem modificar la hist\u00f2ria del repositori local local, per ajustar o refer la hist\u00f2ria a les nostres necessitats.</p> <p>Algunes de les accions que podem fer mitjan\u00e7ant aquestes eines s\u00f3n:</p> <ul> <li>Desfer o modificar commits anteriors.</li> <li>Reorganitzar els commits abans de publicar-los.</li> <li>Moure punters de les branques.</li> </ul> <p>Perill</p> <p>Aquestes eines s\u00f3n molt potents, per\u00f2 cal tindre en compte que modificar la hist\u00f2ria del repositori pot ser perill\u00f3s.</p> <p>Especialment, en les branques que ja han segut publicades (<code>push</code>),  ja que pot ocasionar problemes entre els col\u00b7laboradors del repositori.</p> Preparaci\u00f3 repositori setup_reset.sh<pre><code>#!/bin/bash\n\n# Elimina els repositoris si existeixen\nif [ -d ~/git_reset ]; then\n    rm -rf ~/git_reset\nfi\n\nmkdir -p ~/git_reset\ncd ~/git_reset\ngit init\ngit branch -m main\necho \"# Git reset i commit --amend\" &gt; README.md\ngit add README.md\ngit commit -m \"Commit inicial\"\necho \"- Canvi A\" &gt;&gt; README.md\ngit commit -a -m \"Canvi A\"\necho \"- Canvi B\" &gt;&gt; README.md\ngit commit -a -m \"Canvi B\"\necho \"- Canvi C\" &gt;&gt; README.md\ngit commit -a -m \"Canvi C\"\ngit lga\n</code></pre> <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_reset\njpuigcerver@fp:~ $ cd ~/git_reset\njpuigcerver@fp:~/git_reset $ git init\nInitialized empty Git repository in ~/git_reset/.git/\njpuigcerver@fp:~/git_reset (main) $ git branch -m main\njpuigcerver@fp:~/git_reset (main) $ echo \"# Git reset i commit --amend\" &gt; README.md\njpuigcerver@fp:~/git_reset (main) $ git add README.md\njpuigcerver@fp:~/git_reset (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) 16786db] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_reset (main) $ echo \"- Canvi A\" &gt;&gt; README.md\njpuigcerver@fp:~/git_reset (main) $ git commit -a -m \"Canvi A\"\n[main 4dc7c85] Canvi A\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_reset (main) $ echo \"- Canvi B\" &gt;&gt; README.md\njpuigcerver@fp:~/git_reset (main) $ git commit -a -m \"Canvi B\"\n[main 04fafb7] Canvi B\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_reset (main) $ echo \"- Canvi C\" &gt;&gt; README.md\njpuigcerver@fp:~/git_reset (main) $ git commit -a -m \"Canvi C\"\n[main 0c65882] Canvi C\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 0c65882 - (0 seconds ago) Canvi C - Joan Puigcerver (HEAD -&gt; main)\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> <p>La sintaxi de l'ordre <code>git reset</code> \u00e9s: <pre><code>git reset [--soft | --mixed | --hard | --keep] &lt;ref&gt;\n</code></pre></p> <ul> <li><code>ref</code>: La refer\u00e8ncia pot ser l'identificador de un commit, una branca o una etiqueta.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git reset</code>.</p> <p>El comportament de git reset dep\u00e9n del mode especificat. Per defecte, el mode \u00e9s <code>--mixed</code>.</p> <p></p> <p>Figura 1. Resum de l'eina <code>git reset</code>.</p> <p>Info</p> <p>Aquesta ordre mou la refer\u00e8ncia de la branca actual, on est\u00e0 situat el <code>HEAD</code>.</p>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#soft","title":"Soft","text":"<p>El mode <code>reset --soft</code> mou la refer\u00e8ncia de la branca actual al commit especificat, conservant els canvis perduts a l'\u00c0rea de Preparaci\u00f3 (Staging Area).</p> <pre><code>git reset --soft &lt;ref&gt;\n</code></pre> Exemple: reset --soft <p>Establim la referencia de la branca <code>main</code> al commit Canvi B.</p> <p>En aquest cas, es perdran els canvis del commit Canvi C, que es conservaran en l'\u00c0rea de Preparaci\u00f3.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git reset --soft 04fafb7\njpuigcerver@fp:~/git_reset (main) $ git status\nOn branch main\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> <p>Creem de nou el commit Canvi C.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git commit -m \"Canvi C\"\n[main 0c65882] Canvi C\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 0c65882 - (0 seconds ago) Canvi C - Joan Puigcerver (HEAD -&gt; main)\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#mixed","title":"Mixed","text":"<p>El mode <code>reset --mixed</code> mou la refer\u00e8ncia de la branca actual al commit especificat. Els canvis es conserven en el Directori de Treball.</p> <p>Aquest es el comportament per defecte si no s'especifica cap altra opci\u00f3.</p> <pre><code>git reset --mixed &lt;ref&gt;\n</code></pre> Exemple: reset --mixed <p>Establim la referencia de la branca <code>main</code> al commit Canvi B.</p> <p>En aquest cas, es perdran els canvis del commit Canvi C, que es conservaran en el Directori de Treball.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git reset --mixed 04fafb7\nUnstaged changes after reset:\nM   README.md\njpuigcerver@fp:~/git_reset (main) $ git status\nOn branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> <p>Creem de nou el commit Canvi C.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git add README.md\njpuigcerver@fp:~/git_reset (main) $ git commit -m \"Canvi C\"\n[main 0c65882] Canvi C\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 0c65882 - (0 seconds ago) Canvi C - Joan Puigcerver (HEAD -&gt; main)\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#hard","title":"Hard","text":"<p>El mode <code>reset --hard</code> mou la refer\u00e8ncia de la branca actual al commit especificat. modificant l'estat del repositori i revertint-lo a la refer\u00e8ncia especificada.</p> <p>Perill</p> <p>Tots els canvis es descarten permanentment.</p> <pre><code>git reset --hard &lt;ref&gt;\n</code></pre> Exemple: reset --hard <p>Establim la referencia de la branca <code>main</code> al commit Canvi B.</p> <p>En aquest cas, es perdran els canvis del commit Canvi C, que no es conservaran enlloc i no es podran recuperar.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git reset --hard 04fafb7\nHEAD is now at 04fafb7 Canvi B\njpuigcerver@fp:~/git_reset (main) $ git status\nOn branch main\nnothing to commit, working tree clean\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#keep","title":"Keep","text":"<p>El mode <code>reset --keep</code> \u00e9s molt similar al comportament per defecte.</p> <p>En aquest cas, no permet realitzar el <code>reset</code> si aix\u00f2 comporta que els canvis actuals del Directori de Treball siguen sobreescrits per els canvis de l'operaci\u00f3 de <code>reset</code>.</p> <pre><code>git reset --keep &lt;ref&gt;\n</code></pre> Exemple: reset --keep <p>Com que realitzar el <code>reset</code> comportaria sobreescriure els canvis del Directori de Treball, l'operaci\u00f3 no es realitza.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ echo \"- Canvi C\" &gt;&gt; README.md\njpuigcerver@fp:~/git_reset (main) $ git status\nOn branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_reset (main) $ git reset --keep 4dc7c85\nerror: Entry 'README.md' not uptodate. Cannot merge.\nfatal: Could not reset index file to revision '4dc7c85'.\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#amend","title":"Amend","text":"<p>L'opci\u00f3 <code>git commit --amend</code> permet realitzar canvis a l'\u00faltim commit realitzat.</p> <p>Permet modificar el missatge de l'\u00faltim commit, afegir nous fitxers o afegir nous canvis els fitxers del repositori, incl\u00f2s els que han segut modificats en aquest \u00faltim commit.</p> <p>El funcionament d'aquesta ordre consisteix en crear un nou commit amb els canvis de l'\u00c0rea de Preparaci\u00f3 i els canvis del commit anterior. A m\u00e9s, el nou commit substitueix l'anterior.</p> <p>La sintaxi \u00e9s: <pre><code>git commit --amend [-m &lt;missatge&gt;]\n</code></pre></p> <ul> <li><code>-m &lt;missatge&gt;</code>: Permet especificar un nou missatge per al commit.</li> </ul> Exemple: Amend <p>Hem modificat l'\u00faltim commit Canvi B, on hem afegit canvis a <code>README.md</code> i modificat el missatge del commit.</p> <pre><code>jpuigcerver@fp:~/git_reset (main) $ git lga\n* 04fafb7 - (0 seconds ago) Canvi B - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_reset (main) $ git status\nOn branch main\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_reset (main) $ git diff\ndiff --git a/README.md b/README.md\nindex dc7fc7d..d05d0d2 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,3 +1,4 @@\n # Git reset i commit --amend\n - Canvi A\n - Canvi B\n+- Canvi C\njpuigcerver@fp:~/git_reset (main) $ git add README.md\njpuigcerver@fp:~/git_reset (main) $ git commit --amend -m \"Canvi B i C\"\n[main 3aedfd5] Canvi B i C\n Date: Sun Oct 20 20:21:37 2024 +0200\n 1 file changed, 2 insertions(+)\njpuigcerver@fp:~/git_reset (main) $ git lga\n* 3aedfd5 - (0 seconds ago) Canvi B i C - Joan Puigcerver (HEAD -&gt; main)\n* 4dc7c85 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 16786db - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/03_reset_amend/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://stackoverflow.com/questions/3528245/whats-the-difference-between-git-reset-mixed-soft-and-hard</li> <li>https://git-scm.com/docs/git-reset</li> </ul>","tags":["git reset","soft reset","mixed reset","hard reset","git commit --amend"]},{"location":"apunts/04_avancat/04_squash/","title":"Merge squash","text":"","tags":["git merge --squash"]},{"location":"apunts/04_avancat/04_squash/#merge-squash","title":"<code>merge --squash</code>","text":"<p>L'opci\u00f3 <code>--squash</code> de la comanda <code>git merge</code> permet fusionar els canvis d'una branca en una altra en un \u00fanic commit.</p> <p>De vegades, el treball en una branca pot generar molts commits (micro-commits) que no aporten informaci\u00f3 rellevant. Amb aquesta opci\u00f3, \u00e9s possible fusionar tots aquests commits en un de sol, evitant la sobrec\u00e0rrega d'informaci\u00f3 i contaminaci\u00f3 de l'historial.</p> <p>Aquesta opci\u00f3 \u00e9s especialment \u00fatil en la fusi\u00f3 de branques de funcionalitat, que veurem en el seg\u00fcent bloc Estrat\u00e8gies de ramificaci\u00f3.</p> <p>El funcionament de <code>git merge --squash</code> consisteix en aplicar tots els canvis de la branca especificada a l'\u00c0rea de Preparaci\u00f3 (Staging Area), per\u00f2 sense realitzar el commit, que caldr\u00e0 fer manualment.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git merge --squash &lt;branca&gt;\n</code></pre></p> <p></p> <p>Figura 1. Funcionament de <code>git merge --squash</code>.</p> Preparaci\u00f3 repositori setup_squash.sh<pre><code>#!/bin/bash\n\n# Elimina els repositori si existeix\nif [ -d ~/git_squash ]; then\n    rm -rf ~/git_squash\nfi\n\nmkdir -p ~/git_squash\ncd ~/git_squash\ngit init\ngit branch -m main\necho \"# Git merge --squash\" &gt; README.md\ngit add README.md\ngit commit -m \"Commit inicial\"\ngit checkout -b canvis\necho \"- Canvi A\" &gt;&gt; README.md\ngit commit -a -m \"Canvi A\"\necho \"- Canvi B\" &gt;&gt; README.md\ngit commit -a -m \"Canvi B\"\necho \"- Canvi C\" &gt;&gt; README.md\ngit commit -a -m \"Canvi C\"\ngit lga\n</code></pre> <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_squash\njpuigcerver@fp:~ $ cd ~/git_squash\njpuigcerver@fp:~/git_squash $ git init\nInitialized empty Git repository in ~/git_squash/.git/\njpuigcerver@fp:~/git_squash (main) $ git branch -m main\njpuigcerver@fp:~/git_squash (main) $ echo \"# Git merge --squash\" &gt; README.md\njpuigcerver@fp:~/git_squash (main) $ git add README.md\njpuigcerver@fp:~/git_squash (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) 863c0b2] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_squash (main) $ git checkout -b canvis\nSwitched to a new branch 'canvis'\njpuigcerver@fp:~/git_squash (canvis) $ echo \"- Canvi A\" &gt;&gt; README.md\njpuigcerver@fp:~/git_squash (canvis) $ git commit -a -m \"Canvi A\"\n[canvis b460f08] Canvi A\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_squash (canvis) $ echo \"- Canvi B\" &gt;&gt; README.md\njpuigcerver@fp:~/git_squash (canvis) $ git commit -a -m \"Canvi B\"\n[canvis 58d9407] Canvi B\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_squash (canvis) $ echo \"- Canvi C\" &gt;&gt; README.md\njpuigcerver@fp:~/git_squash (canvis) $ git commit -a -m \"Canvi C\"\n[canvis 824cb01] Canvi C\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_squash (canvis) $ git lga\n* 824cb01 - (0 seconds ago) Canvi C - Joan Puigcerver (HEAD -&gt; canvis)\n* 58d9407 - (0 seconds ago) Canvi B - Joan Puigcerver\n* b460f08 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 863c0b2 - (0 seconds ago) Commit inicial - Joan Puigcerver (main)\n</code></pre> Exemple: git merge --squash <p>S'han fusionat tots els canvis de la branca <code>canvis</code> a la branca principal <code>main</code> en un \u00fanic commit.</p> <pre><code>jpuigcerver@fp:~/git_squash (canvis) $ git checkout main\nSwitched to branch 'main'\njpuigcerver@fp:~/git_squash (main) $ git merge --squash canvis\nUpdating 863c0b2..824cb01\nFast-forward\nSquash commit -- not updating HEAD\n README.md | 3 +++\n 1 file changed, 3 insertions(+)\njpuigcerver@fp:~/git_squash (main) $ git status\nOn branch main\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\njpuigcerver@fp:~/git_squash (main) $ git commit -m \"Canvis A, B i C\"\n[main 00b7e27] Canvis A, B i C\n 1 file changed, 3 insertions(+)\njpuigcerver@fp:~/git_squash (main) $ git lga\n* 824cb01 - (0 seconds ago) Canvi C - Joan Puigcerver (canvis)\n* 58d9407 - (0 seconds ago) Canvi B - Joan Puigcerver\n* b460f08 - (0 seconds ago) Canvi A - Joan Puigcerver\n| * 00b7e27 - (0 seconds ago) Canvis A, B i C - Joan Puigcerver (HEAD -&gt; main)\n|/  \n* 863c0b2 - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git merge --squash"]},{"location":"apunts/04_avancat/05_revert_cherrypick/","title":"Revert i cherry-pick","text":"","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#introduccio","title":"Introducci\u00f3","text":"<p>Les accions <code>revert</code> i <code>cherry-pick</code> s\u00f3n eines poc comuns, per\u00f2 poden ser \u00fatils en situacions espec\u00edfiques.</p> Preparaci\u00f3 repositori setup_cherrypick.sh<pre><code>#!/bin/bash\n\n# Elimina els repositori si existeix\nif [ -d ~/git_cherrypick ]; then\n    rm -rf ~/git_cherrypick\nfi\n\nmkdir -p ~/git_cherrypick\ncd ~/git_cherrypick\ngit init\ngit branch -m main\necho \"# Git revert i cherrypick\" &gt; README.md\ngit add README.md\ngit commit -m \"Commit inicial\"\necho \"- Canvi A\" &gt;&gt; README.md\ngit commit -a -m \"Canvi A\"\necho \"- Canvi B\" &gt;&gt; README.md\ngit commit -a -m \"Canvi B\"\necho \"- Canvi C\" &gt;&gt; README.md\ngit commit -a -m \"Canvi C\"\necho \"- Canvi D\" &gt;&gt; README.md\ngit commit -a -m \"Canvi D\"\necho \"- Canvi E\" &gt;&gt; README.md\ngit commit -a -m \"Canvi E\"\ngit lga\n</code></pre> <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_cherrypick\njpuigcerver@fp:~ $ cd ~/git_cherrypick\njpuigcerver@fp:~/git_cherrypick $ git init\nInitialized empty Git repository in ~/git_cherrypick/.git/\njpuigcerver@fp:~/git_cherrypick (main) $ git branch -m main\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"# Git revert i cherrypick\" &gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git add README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) 810ec42] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"- Canvi A\" &gt;&gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -a -m \"Canvi A\"\n[main 4d18d71] Canvi A\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"- Canvi B\" &gt;&gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -a -m \"Canvi B\"\n[main fad1ea7] Canvi B\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"- Canvi C\" &gt;&gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -a -m \"Canvi C\"\n[main 75f51e1] Canvi C\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"- Canvi D\" &gt;&gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -a -m \"Canvi D\"\n[main a079d5b] Canvi D\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ echo \"- Canvi E\" &gt;&gt; README.md\njpuigcerver@fp:~/git_cherrypick (main) $ git commit -a -m \"Canvi E\"\n[main ff4ae1c] Canvi E\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* ff4ae1c - (0 seconds ago) Canvi E - Joan Puigcerver (HEAD -&gt; main)\n* a079d5b - (0 seconds ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (0 seconds ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (0 seconds ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 810ec42 - (0 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#revert","title":"Revert","text":"<p>La comanda <code>revert</code> \u00e9s \u00fatil per desfer els canvis d'un commit concret, sense alterar la hist\u00f2ria del repositori.</p> <p>El seu funcionament consisteix en crear un nou commit que inverteix els canvis del commit que desitgem desfer.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git revert</code></p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git revert &lt;ref&gt;\n</code></pre></p> <ul> <li><code>&lt;ref&gt;</code>: Refer\u00e8ncia del commit que es vol desfer.</li> </ul> <p></p> <p>Figura 1. Funcionament de <code>git revert</code>.</p> Exemple: git revert <pre><code>jpuigcerver@fp:~/git_cherrypick (main) $ git revert ff4ae1c --no-edit\n[main 2f610b9] Revert \"Canvi E\"\n Date: Sun Oct 20 22:15:45 2024 +0200\n 1 file changed, 1 deletion(-)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 2f610b9 - (0 seconds ago) Revert \"Canvi E\" - Joan Puigcerver (HEAD -&gt; main)\n* ff4ae1c - (0 seconds ago) Canvi E - Joan Puigcerver\n* a079d5b - (0 seconds ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (0 seconds ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (0 seconds ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (0 seconds ago) Canvi A - Joan Puigcerver\n* 810ec42 - (0 seconds ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ git show\ncommit 2f610b93b6a0d1642dbc20585c964f4afee1fed5\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Sun Oct 20 22:15:45 2024 +0200\n\n    Revert \"Canvi E\"\n\n    This reverts commit ff4ae1c6f2b90276fdb9aa48415e631d74497811.\n\ndiff --git a/README.md b/README.md\nindex 9024074..ec78542 100644\n--- a/README.md\n+++ b/README.md\n@@ -3,4 +3,3 @@\n - Canvi B\n - Canvi C\n - Canvi D\n-- Canvi E\n</code></pre>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#revertir-multiples-commits","title":"Revertir m\u00faltiples commits","text":"<p>L'acci\u00f3 <code>revert</code> sols permet desfer un commit a la vegada.</p> <p>En cas de voler desfer m\u00faltiples commits, es pot aplicar la comanda <code>revert</code> de forma successiva a cada commit que es vol desfer amb la opci\u00f3 <code>--no-commit</code>.</p> <p>Aquest proc\u00e9s posar\u00e0 el repositori en un estat <code>REVERTING</code> i afegira els canvis a l'\u00c0rea de Preparaci\u00f3 (Staging Area).</p> <p>En aquest punt, es poden revertir m\u00e9s commits o finalitzar el proc\u00e9s amb <code>git revert --continue</code>.</p> <pre><code>git revert --no-commit &lt;ref&gt;\n</code></pre> <p>Documentaci\u00f3</p> <p>Discussi\u00f3 StackOverflow: How can I revert multiple Git commits?</p> Exemple: git revert m\u00faltiples commits <pre><code>jpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver (HEAD -&gt; main)\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ git revert a079d5b --no-commit\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex ec78542..89461b7 100644\n--- a/README.md\n+++ b/README.md\n@@ -2,4 +2,3 @@\n - Canvi A\n - Canvi B\n - Canvi C\n-- Canvi D\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git revert 75f51e1 --no-commit\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex ec78542..5377894 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,3 @@\n # Git revert i cherrypick\n - Canvi A\n - Canvi B\n-- Canvi C\n-- Canvi D\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git commit -m \"Revert \\\"Canvi C i D\\\"\" # (1)!\n[main aa99382] Revert \"Canvi C i D\"\n 1 file changed, 2 deletions(-)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver (HEAD -&gt; main)\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ git show\ncommit aa9938270b80774ca3fd740649860c76c9fe9e4d\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Sun Oct 20 22:15:46 2024 +0200\n\n    Revert \"Canvi C i D\"\n\ndiff --git a/README.md b/README.md\nindex ec78542..5377894 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,3 @@\n # Git revert i cherrypick\n - Canvi A\n - Canvi B\n-- Canvi C\n-- Canvi D\n</code></pre> <ol> <li>Per eixir de l'estat <code>REVERTING</code> tamb\u00e9 es pot fer un <code>git commit</code>.</li> </ol>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#resolucio-de-conflictes","title":"Resoluci\u00f3 de conflictes","text":"<p>Aquesta acci\u00f3 pot generar conflictes si els canvis que es volen desfer han estat modificats en commits posteriors.</p> <p>En aquest cas, passarem a l'estat <code>REVERTING</code> i caldr\u00e0 resoldre els conflictes manualment, de la mateixa manera que es fa en una fusi\u00f3 de branques (<code>merge</code>).</p> Exemple: Resoluci\u00f3 de conflictes en git revert <pre><code>jpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver (HEAD -&gt; main)\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ git revert 4d18d71\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nerror: could not revert 4d18d71... Canvi A\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm &lt;pathspec&gt;\", then run\nhint: \"git revert --continue\".\nhint: You can instead skip this commit with \"git revert --skip\".\nhint: To abort and get back to the state before \"git revert\",\nhint: run \"git revert --abort\".\nhint: Disable this message with \"git config advice.mergeConflict false\"\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git status\nOn branch main\nYou are currently reverting commit 4d18d71.\n  (fix conflicts and run \"git revert --continue\")\n  (use \"git revert --skip\" to skip this patch)\n  (use \"git revert --abort\" to cancel the revert operation)\n\nUnmerged paths:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n  (use \"git add &lt;file&gt;...\" to mark resolution)\n    both modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ vim README.md # (1)!\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git diff\ndiff --cc README.md\nindex 5377894,376d064..0000000\n--- a/README.md\n+++ b/README.md\n@@@ -1,3 -1,1 +1,2 @@@\n  # Git revert i cherrypick\n- - Canvi A\n +- Canvi B\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git add README.md\njpuigcerver@fp:~/git_cherrypick (main|REVERTING) $ git revert --continue --no-edit\n[main 6a5c752] Revert \"Canvi A\"\n 1 file changed, 1 deletion(-)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 6a5c752 - (0 seconds ago) Revert \"Canvi A\" - Joan Puigcerver (HEAD -&gt; main)\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\n</code></pre> <ol> <li>S'ha editat manualment el fitxer per eliminar els marcadors de     conflicte i la l\u00ednia <code>- Canvi A</code>.</li> </ol>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#cherry-pick","title":"Cherry-pick","text":"<p>La comanda <code>cherry-pick</code> permet aplicar els canvis d'un commit concret sobre la branca actual.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git cherry-pick</code></p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git cherry-pick &lt;ref&gt;\n</code></pre></p> <ul> <li><code>&lt;ref&gt;</code>: Refer\u00e8ncia del commit que es vol aplicar.</li> </ul> <p></p> <p>Figura 2. Funcionament de <code>git cherry-pick</code>.</p> Exemple: git cherry-pick <p>En aquest cas, tornem a aplicar el Canvi C despr\u00e9s de Canvi B amb <code>git cherry-pick</code>.</p> <pre><code>jpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 6a5c752 - (0 seconds ago) Revert \"Canvi A\" - Joan Puigcerver (HEAD -&gt; main)\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ cat README.md\n# Git revert i cherrypick\n- Canvi B\njpuigcerver@fp:~/git_cherrypick (main) $ git cherry-pick 75f51e1\nAuto-merging README.md\n[main 0c28064] Canvi C\n Date: Sun Oct 20 22:15:45 2024 +0200\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 0c28064 - (1 second ago) Canvi C - Joan Puigcerver (HEAD -&gt; main)\n* 6a5c752 - (0 seconds ago) Revert \"Canvi A\" - Joan Puigcerver\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ cat README.md\n# Git revert i cherrypick\n- Canvi B\n- Canvi C\n</code></pre>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/05_revert_cherrypick/#resolucio-de-conflictes_1","title":"Resoluci\u00f3 de conflictes","text":"<p>Aquesta acci\u00f3 pot generar conflictes si els canvis que es volen aplicar es produeixen en llocs que han segut modificats.</p> <p>En aquest cas, passarem a l'estat <code>CHERRY-PICKING</code> i caldr\u00e0 resoldre els conflictes manualment, de la mateixa manera que es fa en una fusi\u00f3 de branques (<code>merge</code>).</p> Exemple: Resoluci\u00f3 de conflictes en git cherry-pick <p>En aquest cas, <code>git cherry-pick</code> ha generat un conflicte ja que Canvi A modificava la mateixa l\u00ednia que Canvi B.</p> <pre><code>jpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* 0c28064 - (1 second ago) Canvi C - Joan Puigcerver (HEAD -&gt; main)\n* 6a5c752 - (0 seconds ago) Revert \"Canvi A\" - Joan Puigcerver\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\njpuigcerver@fp:~/git_cherrypick (main) $ git cherry-pick 4d18d71\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nerror: could not apply 4d18d71... Canvi A\nhint: After resolving the conflicts, mark them with\nhint: \"git add/rm &lt;pathspec&gt;\", then run\nhint: \"git cherry-pick --continue\".\nhint: You can instead skip this commit with \"git cherry-pick --skip\".\nhint: To abort and get back to the state before \"git cherry-pick\",\nhint: run \"git cherry-pick --abort\".\nhint: Disable this message with \"git config advice.mergeConflict false\"\njpuigcerver@fp:~/git_cherrypick (main|CHERRY-PICKING) $ vim README.md # (1)!\njpuigcerver@fp:~/git_cherrypick (main|CHERRY-PICKING) $ git diff\ndiff --cc README.md\nindex d6c55ca,2754255..0000000\n--- a/README.md\n+++ b/README.md\n@@@ -1,3 -1,2 +1,4 @@@\n  # Git revert i cherrypick\n+ - Canvi A\n +- Canvi B\n +- Canvi C\njpuigcerver@fp:~/git_cherrypick (main|CHERRY-PICKING) $ git add README.md\njpuigcerver@fp:~/git_cherrypick (main|CHERRY-PICKING) $ git revert --continue --no-edit\n[main d0bf36e] Canvi A\n Date: Sun Oct 20 22:15:45 2024 +0200\n 1 file changed, 1 insertion(+)\njpuigcerver@fp:~/git_cherrypick (main) $ git lga\n* d0bf36e - (1 second ago) Canvi A - Joan Puigcerver (HEAD -&gt; main)\n* 0c28064 - (1 second ago) Canvi C - Joan Puigcerver\n* 6a5c752 - (0 seconds ago) Revert \"Canvi A\" - Joan Puigcerver\n* aa99382 - (0 seconds ago) Revert \"Canvi C i D\" - Joan Puigcerver\n* 2f610b9 - (1 second ago) Revert \"Canvi E\" - Joan Puigcerver\n* ff4ae1c - (1 second ago) Canvi E - Joan Puigcerver\n* a079d5b - (1 second ago) Canvi D - Joan Puigcerver\n* 75f51e1 - (1 second ago) Canvi C - Joan Puigcerver\n* fad1ea7 - (1 second ago) Canvi B - Joan Puigcerver\n* 4d18d71 - (1 second ago) Canvi A - Joan Puigcerver\n* 810ec42 - (1 second ago) Commit inicial - Joan Puigcerver\n</code></pre> <ol> <li>S'ha editat manualment el fitxer per eliminar els marcadors de     conflicte i posar Canvi A abans de Canvi B.</li> </ol>","tags":["git revert","git cherry-pick"]},{"location":"apunts/04_avancat/06_exercici/","title":"Exercici: Git avan\u00e7at","text":""},{"location":"apunts/04_avancat/06_exercici/#objectius","title":"Objectius","text":"<p>Els objectius d'aquest exercici s\u00f3n:</p> <ul> <li>Con\u00e9ixer i saber aplicar els m\u00e8todes per modificar la hist\u00f2ria del repositori.</li> <li>Con\u00e9ixer com modificar el commit anterior, canviant els canvis realitzats i el seu missatge.</li> <li>Con\u00e9ixer com fusionar de branques en un sol commit.</li> <li>Con\u00e9ixer com aplicar la c\u00f2pia de commits.</li> </ul>"},{"location":"apunts/04_avancat/06_exercici/#exercici","title":"Exercici","text":"<p>A partir del seg\u00fcent repositori inicial:</p> <pre><code>jpuigcerver@fp:~/git_avancat_exericici (canvis) $ git lga\n*   a606c9b - (0 seconds ago) Merge 'canvi/C' a 'canvis' - Joan Puigcerver (HEAD -&gt; canvis)\n|\\  \n| *   d53c298 - (0 seconds ago) Merge 'canvi/B' a 'canvi/C' - Joan Puigcerver (canvi/C)\n| |\\  \n| | *   6117be3 - (1 second ago) Merge 'canvi/A' a 'canvi/B' - Joan Puigcerver (canvi/B)\n| | |\\  \n| | | * e9902d3 - (1 second ago) canviA - Joan Puigcerver (canvi/A)\n| | * | 47c3abe - (1 second ago) Canvi B - Joan Puigcerver\n| | |/  \n| * / 2ff2d5d - (1 second ago) Canvi C - Joan Puigcerver\n| |/  \n* / 1ea8b07 - (1 second ago) Canvis - Joan Puigcerver\n|/  \n* 33e06bb - (1 second ago) Commit inicial - Joan Puigcerver (main)\n</code></pre> <p>Preparaci\u00f3 repositori inicial</p> <p>Pots executar el seg\u00fcent script per obtenir el repositori inicial:</p> setup_exercici_avancat.sh<pre><code>#!/bin/bash\n\n# Elimina els repositori si existeix\nif [ -d ~/git_avancat_exericici ]; then\n    rm -rf ~/git_avancat_exericici\nfi\n\nmkdir -p ~/git_avancat_exericici\ncd ~/git_avancat_exericici\ngit init\ngit branch -m main\necho \"# Exerici Git avan\u00e7at\" &gt; README.md\ngit add README.md\ngit commit -m \"Commit inicial\"\ngit branch canvis\ngit branch canvi/A\ngit branch canvi/B\ngit branch canvi/C\ngit checkout canvis\necho \"__Canvis__: \" &gt;&gt; README.md\ngit commit -a -m \"Canvis\"\ngit checkout canvi/A\necho \"- Canvi A\" &gt;&gt; README.md\ngit commit -a -m \"canviA\"\ngit checkout canvi/B\necho \"- Canvi B\" &gt;&gt; README.md\ngit commit -a -m \"Canvi B\"\ngit checkout canvi/C\necho \"- Canvi C\" &gt;&gt; README.md\ngit commit -a -m \"Canvi C\"\ngit checkout canvi/B\ngit merge --no-ff canvi/A\nsed -i '/^&lt;&lt;&lt;&lt;&lt;&lt;&lt;.*$/d; /^=======/d; /^&gt;&gt;&gt;&gt;&gt;&gt;&gt;.*$/d' README.md # Elimina les marques de conflicte\ngit commit -a -m \"Merge 'canvi/A' a 'canvi/B'\"\ngit checkout canvi/C\ngit merge --no-ff canvi/B\nsed -i '/^&lt;&lt;&lt;&lt;&lt;&lt;&lt;.*$/d; /^=======/d; /^&gt;&gt;&gt;&gt;&gt;&gt;&gt;.*$/d' README.md\ngit commit -a -m \"Merge 'canvi/B' a 'canvi/C'\"\ngit checkout canvis\ngit merge --no-ff canvi/C\nsed -i '/^&lt;&lt;&lt;&lt;&lt;&lt;&lt;.*$/d; /^=======/d; /^&gt;&gt;&gt;&gt;&gt;&gt;&gt;.*$/d' README.md\ngit commit -a -m \"Merge 'canvi/C' a 'canvis'\"\ngit lga\n</code></pre>"},{"location":"apunts/04_avancat/06_exercici/#tasca-1","title":"Tasca 1","text":"<p>Fent \u00fas de les ordres avan\u00e7ades de Git, modifica la hist\u00f2ria del repositori perqu\u00e8 quede com es mostra a continuaci\u00f3.</p> <pre><code>jpuigcerver@fp:~/git_avancat_exericici (main) $ git lga\n* e9902d3 - (1 second ago) canviA - Joan Puigcerver (canvi/A)\n| * 47c3abe - (1 second ago) Canvi B - Joan Puigcerver (canvi/B)\n|/  \n| * 2ff2d5d - (1 second ago) Canvi C - Joan Puigcerver (canvi/C)\n|/  \n| * 1ea8b07 - (1 second ago) Canvis - Joan Puigcerver (canvis)\n|/  \n* 33e06bb - (1 second ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main)\n</code></pre>"},{"location":"apunts/04_avancat/06_exercici/#tasca-2","title":"Tasca 2","text":"<p>Modifica el missatge del commit <code>canviA</code> per <code>Canvi A</code>.</p> <pre><code>jpuigcerver@fp:~/git_avancat_exericici (main) $ git lga\n* ddbc142 - (1 second ago) Canvi A - Joan Puigcerver (canvi/A)\n| * 47c3abe - (1 second ago) Canvi B - Joan Puigcerver (canvi/B)\n|/  \n| * 2ff2d5d - (1 second ago) Canvi C - Joan Puigcerver (canvi/C)\n|/  \n| * 1ea8b07 - (1 second ago) Canvis - Joan Puigcerver (canvis)\n|/  \n* 33e06bb - (1 second ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main)\n</code></pre>"},{"location":"apunts/04_avancat/06_exercici/#tasca-3","title":"Tasca 3","text":"<p>C\u00f2pia els continguts dels commits <code>Canvi A</code>, <code>Canvi B</code> i <code>Canvi C</code> a la branca <code>canvis</code>.</p> <pre><code>jpuigcerver@fp:~/git_avancat_exericici (main) $ git lga\n* ddbc142 - (1 second ago) Canvi A - Joan Puigcerver (canvi/A)\n| * a45b26b - (1 second ago) Canvi C - Joan Puigcerver (canvis)\n| * ad44b74 - (1 second ago) Canvi B - Joan Puigcerver\n| * 01d6f19 - (1 second ago) Canvi A - Joan Puigcerver\n| * 1ea8b07 - (1 second ago) Canvis - Joan Puigcerver\n|/  \n| * 47c3abe - (1 second ago) Canvi B - Joan Puigcerver (canvi/B)\n|/  \n| * 2ff2d5d - (1 second ago) Canvi C - Joan Puigcerver (canvi/C)\n|/  \n* 33e06bb - (1 second ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main)\n</code></pre>"},{"location":"apunts/04_avancat/06_exercici/#tasca-4","title":"Tasca 4","text":"<p>Fusiona la branca <code>canvis</code> amb la branca <code>main</code> en un sol commit.</p> <p>Crea una etiqueta anotada amb el nom <code>GitAvan\u00e7at</code> en aquest commit.</p> <pre><code>jpuigcerver@fp:~/git_avancat_exericici (main) $ git lga\n* ddbc142 - (1 second ago) Canvi A - Joan Puigcerver (canvi/A)\n| * a45b26b - (1 second ago) Canvi C - Joan Puigcerver (canvis)\n| * ad44b74 - (1 second ago) Canvi B - Joan Puigcerver\n| * 01d6f19 - (1 second ago) Canvi A - Joan Puigcerver\n| * 1ea8b07 - (1 second ago) Canvis - Joan Puigcerver\n|/  \n| * dcccfbc - (0 seconds ago) Canvis A, B i C - Joan Puigcerver (HEAD -&gt; main, tag: GitAvan\u00e7at)\n|/  \n| * 47c3abe - (1 second ago) Canvi B - Joan Puigcerver (canvi/B)\n|/  \n| * 2ff2d5d - (1 second ago) Canvi C - Joan Puigcerver (canvi/C)\n|/  \n* 33e06bb - (1 second ago) Commit inicial - Joan Puigcerver\n</code></pre>"},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/","title":"Estrat\u00e8gies de ramificaci\u00f3","text":"","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#estrategies-de-ramificacio","title":"Estrat\u00e8gies de ramificaci\u00f3","text":"<p>En un projecte de desenvolupament de programari que utilitza Git com a sistema de control de versions, la gesti\u00f3 de les branques \u00e9s important per aconseguir un flux de treball eficient i ordenat.</p> <p>Les metodologies de treball amb branques s'anomenen estrat\u00e8gies de ramificaci\u00f3, que son un conjunt de regles i pautes que defineixen com s'han de crear, fusionar i mantindre les branques en un projecte.</p> <p>Aquesta part \u00e9s essencial, ja que permet el desenvolupament en paral\u00b7lel de diferents funcionalitats i garanteix la correcta integraci\u00f3 de les diferents parts del projecte.</p> <p>Existeixen diverses estrat\u00e8gies de ramificaci\u00f3 per\u00f2, totes, en certa manera, comparteixen els mateixos principis b\u00e0sics:</p> <ul> <li>Creaci\u00f3 de branques de funcionalitat <code>feature/*</code>: Es crea una branca independent per desenvolupar cada funcionalitat.</li> <li>Branca de desenvolupament <code>develop</code>: Estat del projecte on s'incorporen les funcionalitats acabades, per\u00f2 que encara no han segut publicades.</li> <li>Branca principal <code>main</code>: Branca on es troba la versi\u00f3 estable del projecte.</li> <li>Branca de llan\u00e7ament <code>release/*</code>: Branca on es prepara la versi\u00f3 final del projecte abans de publicar-la.</li> <li>Branca de correcci\u00f3 <code>hotfix/*</code>: Branca per corregir errors en la versi\u00f3 estable del projecte.</li> </ul> <p>Utilitzant aquestes caracter\u00edstiques, es pot adaptar el flux de treball a les necessitats del projecte, on podem decidir quin tipus de branca incorporar en la nostra metodologia de treball.</p> <p>Exemple</p> <p>En projectes xicotets pot ser no \u00e9s necess\u00e0ria una branca de desenvolupament <code>develop</code> o branques de llan\u00e7ament <code>release/*</code>.</p> <p>A m\u00e9s, les estrat\u00e8gies poden ser utilitzades en combinaci\u00f3 amb altres t\u00e8cniques com les Pull Requests, que veurem en Gesti\u00f3 de projectes a GitHub.</p>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#branques-amb-un-proposit-unic","title":"Branques amb un prop\u00f2sit \u00fanic","text":"<p>Les estrat\u00e8gies de ramificaci\u00f3 m\u00e9s comuns es basen en la creaci\u00f3 de diferents branques, cadascuna amb un prop\u00f2sit concret i una s\u00e8rie de regles per aconseguir una integraci\u00f3 eficient de les funcionalitats:</p> <ul> <li>Branca principal (<code>main</code>): Branca on es troba la versi\u00f3 publicada i estable del projecte.</li> <li>Branca de desenvolupament (<code>develop</code>): Branca on es troba l'estat actual del projecte, on s'incorporen les funcionalitats acabades.</li> <li> <p>Branques de funcionalitats (<code>feature/*</code>): Per cada nova funcionalitat es crea una branca independent,     on es codifica i es prova la nova funcionalitat.</p> <ul> <li>Es creen a partir de la branca <code>develop</code>.</li> <li>S'integren a la branca <code>develop</code> una vegada acabades.</li> <li>Es poden eliminar despr\u00e9s de ser integrades.</li> </ul> <p>Info</p> <p>Dep\u00e9n de l'estrat\u00e8gia triada, el proc\u00e9s d'integraci\u00f3 es realitzar\u00e0 de diferents maneres.</p> </li> <li> <p>Branques de llan\u00e7ament (<code>release/*</code>): Branca on es preparen els canvis     per poder publicar una nova versi\u00f3 del projecte.</p> <ul> <li>Es creen a partir de la branca <code>develop</code>.</li> <li>Es fusionen amb les branques <code>develop</code> i <code>main</code> una vegada acabades.</li> <li>Es poden eliminar una vegada fusionades.</li> <li>Normalment, es crea una etiqueta amb la versi\u00f3 publicada.</li> </ul> </li> <li> <p>Branques de correcci\u00f3 (<code>hotfix/*</code>): Branca per corregir errors     cr\u00edtics en la versi\u00f3 publicada del projecte.</p> <ul> <li>Es creen a partir de la branca <code>main</code>.</li> <li>Es fusionen amb les branques <code>develop</code> i <code>main</code> una vegada acabades.</li> </ul> <p>Danger</p> <p>Aquestes branques sols han de ser utilitzades per corregir errors cr\u00edtics que afecten la versi\u00f3 publicada del projecte i han de corregir-se immediatament.</p> <p>Aquestes branques poden dificultar el flux de treball, sobretot si es tracta de mantindr\u00e0 una hist\u00f2ria lineal del projecte.</p> </li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#avantatges-i-desavantatges","title":"Avantatges i desavantatges","text":"<p>Utilitzar aquest tipus d'estrat\u00e8gies de ramificaci\u00f3 presenta una s\u00e8rie d'avantatges i desavantatges que cal tindre en compte a l'hora de decidir si val la pena utilitzar-les.</p> <p>Els avantatges principals s\u00f3n:</p> <ul> <li>Proporciona un flux de treball clar i coherent per gestionar els canvis de codi.</li> <li>Permet el desenvolupament paral\u00b7lel i la prova de diferents funcions i correccions d'errors.</li> <li>Ajuda a mantenir un codi estable i preparat per posat en producci\u00f3.</li> <li>Facilita la col\u00b7laboraci\u00f3 entre els membres de l'equip.</li> <li>Mant\u00e9 un ordre coherent en la hist\u00f2ria del projecte.</li> </ul> <p>El principal desavantatge \u00e9s:</p> <ul> <li>Pot suposar una sobrec\u00e0rrega en projectes xicotets o amb pocs membres.</li> </ul> <p>A m\u00e9s, \u00e9s important adaptar la metodologia a les necessitats del projecte i no seguir-la de forma estricta si no aporta valor afegit.</p>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#bones-practiques","title":"Bones pr\u00e0ctiques","text":"<p>Per utilitzar les estrat\u00e8gies de ramificaci\u00f3 de forma eficient, \u00e9s important seguir una s\u00e8rie de bones pr\u00e0ctiques que ajudaran a mantindre l'ordre i la coher\u00e8ncia en el projecte.</p> <p>Algunes de les bones pr\u00e0ctiques m\u00e9s importants s\u00f3n:</p> <ul> <li> <p>Utilitzar noms de branques descriptius i coherents, que indiquen clarament el seu prop\u00f2sit i contingut.     Una bona manera de fer-ho \u00e9s utilitzar un prefix com\u00fa per cada tipus de branca.</p> <p>Tip</p> <p>Pots organitzar les branques en \"directoris\" utilitzant el mateix prefixe en el nom de la branca, separat per una barra <code>/</code>.</p> <ul> <li><code>feature/frontend/landing-page</code> o <code>feature/backend/user-authentication</code>,     com exemple de branques de funcionalitats.</li> <li><code>release/v1.0.0</code> o <code>release/v1.1.0</code>, com exemple de branques de llan\u00e7ament.</li> <li><code>hotfix/issue-123</code>, com exemple de branques de correcci\u00f3.</li> </ul> </li> <li> <p>Incorporeu els canvis de <code>develop</code> a les branques <code>feature/*</code> de forma regular.</p> <p>\u00c9s preferible mantindre les branques de funcionalitat actualitzades amb els canvis del projecte, i d'aquesta manera, evitar resolucions de conflictes immenses en el moment d'integrar-les.</p> </li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#integracio-de-les-funcionalitats","title":"Integraci\u00f3 de les funcionalitats","text":"<p>El proc\u00e9s per integrar les funcionalitats a la branca de desenvolupament <code>develop</code> \u00e9s el seg\u00fcent:</p> <p>Important</p> <p>Segons la t\u00e8cnica d'integraci\u00f3 triada, els punts 3 i 4 poden variar.</p> <ol> <li>Sincronitzar l'estat del repositori local amb el remot amb <code>git fetch</code>.</li> <li> <p>Actualitzar la branca local <code>develop</code> amb els canvis del remot <code>git pull</code>.</p> <p>Tip</p> <p>Per evitar possibles conflictes i errors, es recomana configurar <code>git pull</code> perqu\u00e8 sols puga incorporar els canvis de manera directa (fast-forward).</p> <pre><code>git config [--global] pull.ff only\n</code></pre> </li> <li> <p>Actualitzar la branca <code>feature/*</code> amb els nous canvis de <code>develop</code>.</p> </li> <li>Incorporar els canvis de la branca <code>feature/*</code> amb la branca <code>develop</code> amb la t\u00e8cnica triada.</li> <li> <p>Publicar els canvis de la branca <code>develop</code> al repositori remot amb <code>git push</code>.</p> <p>Danger</p> <p>En aquest punt podria passar que mentre has realitzat aquest proc\u00e9s, altres desenvolupadors hagen publicat nous canvis.</p> <p>En aquest cas, caldria integrar els canvis de <code>develop</code> amb <code>git pull --rebase</code>.</p> </li> <li> <p>Eliminar les branques <code>feature/*</code> del repositori local i del remot.</p> </li> </ol>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#fusio-merge-no-ff","title":"Fusi\u00f3 <code>merge -no-ff</code>","text":"<p>Gitflow \u00e9s una de les estrat\u00e8gies de ramificaci\u00f3 m\u00e9s conegudes i utilitzades en projectes de desenvolupament de programari.</p> <p>Aquesta metodologia es basa en la creaci\u00f3 de les branques <code>main</code>, <code>develop</code>, <code>feature/*</code>, <code>release/*</code> i <code>hotfix/*</code>.</p> <p></p> <p>Figura 1. Esquema de branques amb Gitflow</p> <p>La particularitat d'aquesta estrat\u00e8gia \u00e9s que la fusi\u00f3 de les branques de funcionalitat <code>feature/*</code> amb la branca de desenvolupament <code>develop</code> \u00e9s realitza mitjan\u00e7ant <code>merge --no-ff</code>, de manera que es conserva la hist\u00f2ria de les branques de funcionalitat que es fusionen mitjan\u00e7ant un commit de fusi\u00f3.</p> <pre><code>git checkout develop\ngit merge --no-ff feature/A\n</code></pre> <p></p> <p>Figura 2. Fusi\u00f3 de branques mitjan\u00e7ant <code>merge --no-ff</code></p> <p>Els avantatges principals s\u00f3n:</p> <ul> <li>Mant\u00e9 tot l'hist\u00f2ric de canvis.</li> <li>Permet revertir una funcionalitat f\u00e0cilment, ja que sols cal revertir un \u00fanic commit.</li> </ul> <p>El principal desavantatge \u00e9s:</p> <ul> <li>No mant\u00e9 una hist\u00f2ria lineal.</li> <li>En projectes amb moltes funcionalitats, la hist\u00f2ria pot ser dif\u00edcil de seguir.</li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#canvi-de-base-rebase-merge-ff-only","title":"Canvi de base <code>rebase</code> + <code>merge --ff-only</code>","text":"<p>Aquest m\u00e8tode per fusionar les branques de funcionalitat es basa en la utilitzaci\u00f3 del canvi de base <code>rebase</code>, per despr\u00e9s fusionar-la de manera lineal amb <code>merge --ff-only</code>.</p> <pre><code>git checkout feature/A\ngit rebase develop\ngit checkout develop\ngit merge --ff-only feature/A\n</code></pre> <p></p> <p>Figura 3. Fusi\u00f3 de branques mitjan\u00e7ant <code>rebase</code> + <code>merge --ff-only</code></p> <p>Els avantatges s\u00f3n:</p> <ul> <li>Mant\u00e9 la hist\u00f2ria lineal.</li> <li>Permet resoldre els conflictes f\u00e0cilment en el proc\u00e9s de <code>rebase</code>.</li> </ul> <p>Els principal desavantatges s\u00f3n:</p> <ul> <li>Realitzar el canvi de base de funcionalitats amb molts commits pot ser complicat.</li> <li>Revertir una funcionalitat \u00e9s complicat, ja que cal revertir m\u00faltiples commits.</li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#fusio-rebase-merge-no-ff","title":"Fusi\u00f3 <code>rebase</code> + <code>merge --no-ff</code>","text":"<p>Aquesta opci\u00f3 combina les dues opcions anteriors per tal d'aprofitar els avantatges de cadascuna i a la vegada minimitzar els seus desavantatges.</p> <p>Aquest m\u00e8tode es basa en realitzar un canvi de base <code>rebase</code> i despr\u00e9s fusionar la branca de funcionalitat mitjan\u00e7ant un commit de fusi\u00f3 amb <code>merge --no-ff</code>.</p> <pre><code>git checkout feature/A\ngit rebase develop\ngit checkout develop\ngit merge --no-ff feature/A\n</code></pre> <p></p> <p>Figura 4. Fusi\u00f3 de branques mitjan\u00e7ant <code>rebase</code> + <code>merge --no-ff</code></p> <p>Els avantatges principals s\u00f3n:</p> <ul> <li>Mant\u00e9 la hist\u00f2ria neta i semi-lineal, on les funcionalitats s'integren una despr\u00e9s de l'altra.</li> <li>Permet revertir una funcionalitat f\u00e0cilment, ja que sols cal revertir un \u00fanic commit.</li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#fusio-merge-squash","title":"Fusi\u00f3 <code>merge --squash</code>","text":"<p>Aquesta opci\u00f3 consisteix a fusionar les branques de funcionalitat amb la branca de desenvolupament <code>develop</code> mitjan\u00e7ant <code>merge --squash</code>, de manera que tots els commits de la branca de funcionalitat es fusionen en un \u00fanic commit.</p> <pre><code>git checkout develop\ngit merge --squash feature/A\ngit commit -m &lt;missatge&gt;\n</code></pre> <p></p> <p>Figura 5. Fusi\u00f3 de branques mitjan\u00e7ant <code>merge --squash</code></p> <p>En el cas que hi hagen conflictes, una bona pr\u00e0ctica \u00e9s integrar els canvis de <code>develop</code> a la branca de funcionalitat i resoldre'ls abans de realitzar la fusi\u00f3.</p> <p>Per realitzar aquesta integraci\u00f3 de canvis, es recomana utilitzar <code>git merge --no-ff</code>.</p> <pre><code>git checkout feature/A\ngit merge --no-ff develop\ngit checkout develop\ngit merge --squash feature/A\ngit commit -m &lt;missatge&gt;\n</code></pre> <p></p> <p>Figura 6. Fusi\u00f3 de branques mitjan\u00e7ant <code>merge --no-ff</code> + <code>merge --squash</code></p> <p>Com que la branca de funcionalitat ser\u00e0 eliminada despr\u00e9s de la fusi\u00f3, no importa si la hist\u00f2ria de la branca de funcionalitat es mant\u00e9 neta o no.</p> <p>Advert\u00e8ncia</p> <p>Tamb\u00e9 es podria realitzar la fusi\u00f3 amb <code>rebase</code>, per\u00f2 en cas de conflicte, s'hauria de resoldre en cada commit de la branca de funcionalitat.</p> <p>Els avantatges principals d'aquesta opci\u00f3 s\u00f3n:</p> <ul> <li>Mant\u00e9 la hist\u00f2ria lineal.</li> <li>Permet revertir una funcionalitat f\u00e0cilment, ja que sols cal revertir un \u00fanic commit.</li> <li>Facilita la revisi\u00f3 de codi, ja que tots els canvis es troben en un \u00fanic commit.</li> <li>Evita la sobrec\u00e0rrega de commits en la branca de desenvolupament <code>develop</code>.</li> <li>Els desenvolupador poden despreocupar-se de com queda la hist\u00f2ria de la branca de funcionalitat,     on es poden permetre escriure micro-commits, ja que aquests desapareixeran una vegada s'hagen     integrat es canvis.</li> </ul> <p>El principal desavantatge \u00e9s:</p> <ul> <li>No mant\u00e9 tot l'hist\u00f2ric de canvis.</li> <li>Dificulta la revisi\u00f3 de canvis individuals.</li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#branques-de-llancament","title":"Branques de llan\u00e7ament","text":"<p>Les branques de llan\u00e7ament s\u00f3n branques temporals que s'utilitzen per a preparar el llan\u00e7ament d'una versi\u00f3.</p> <p>Normalment, el prefix de les branques de llan\u00e7ament \u00e9s <code>release/</code>.</p> <p>Aquestes branques es creen a partir de la branca de desenvolupament <code>develop</code> i s'utilitzen per a realitzar tasques com:</p> <ul> <li>Actualitzar la versi\u00f3 del projecte.</li> <li>Preparar par\u00e0metres de configuraci\u00f3 espec\u00edfics per a el llan\u00e7ament.</li> </ul> <p>El flux de treball amb aquestes branques \u00e9s el seg\u00fcent: - Es creen a partir de la branca de desenvolupament <code>develop</code>. - Es realitzen les tasques de preparaci\u00f3 per a el llan\u00e7ament. - S'integren els canvis a la branca de desenvolupament <code>develop</code>. - S'integren els canvis a la branca de desenvolupament <code>main</code>.</p> <p></p> <p>Figura 7. Branques de llan\u00e7ament</p> <p>Consell</p> <p>Si el teu projecte no requereix de tasques espec\u00edfiques per a preparar el llan\u00e7ament, pots prescindir d'aquestes branques i publicar directament des de la branca de desenvolupament <code>develop</code>.</p>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#branques-de-correccio","title":"Branques de correcci\u00f3","text":"<p>Les branques de correcci\u00f3 s\u00f3n branques temporals que s'utilitzen per a corregir errors cr\u00edtics en el codi estable del projecte, quan la seua correcci\u00f3 no pot esperar a la seg\u00fcent versi\u00f3.</p> <p>Perill</p> <p>Aquestes branques sols han de ser utilitzades en casos d'extrema necessitat.</p> <p>Normalment, el prefix de les branques de correcci\u00f3 \u00e9s <code>hotfix/</code>.</p> <p>El flux de treball amb aquestes branques \u00e9s el seg\u00fcent:</p> <ul> <li>Es creen a partir de la branca principal <code>main</code>.</li> <li>Es realitzen les correccions necess\u00e0ries.</li> <li>S'integren els canvis a la branca de desenvolupament <code>develop</code>.</li> <li>S'integren els canvis a la branca de desenvolupament <code>main</code>.</li> </ul> <p></p> <p>Figura 8. Branques de correcci\u00f3</p>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/01_estrategies_ramificacio/#bibliografia","title":"Bibliografia","text":"<ul> <li>Apunts de Desplegament d'Aplicacions Web de Lorenzo Gonz\u00e1lez Gasc\u00f3n</li> <li>War of the Git Flows</li> <li>Gitflow: A successful Git branching model</li> <li>OneFlow</li> <li>Trunk Based Development</li> </ul>","tags":["gitflow","develop","feature","release","hotfix"]},{"location":"apunts/05_estrategies/02_exemple_ramificacio/","title":"Exemple: Estrat\u00e8gia de ramificaci\u00f3 en un projecte","text":""},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#exemple-estrategia-de-ramificacio","title":"Exemple: Estrat\u00e8gia de ramificaci\u00f3","text":"<p>En aquest material veurem com es pot utilitzar una estrat\u00e8gia de ramificaci\u00f3 en un projecte de desenvolupament de programari.</p> <p>En aquest projecte utilitzarem la t\u00e8cnica d'integraci\u00f3 Fusi\u00f3 merge --squash.</p>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#repositori-remot","title":"Repositori remot","text":"<p>Anem a simular un projecte de desenvolupament de programari on tres desenvolupadors treballen en diferents funcionalitats de manera independent.</p> <p>Per evitar haver de crear un repositori a  GitHub, crearem un repositori remot en la m\u00e0quina local.</p> <pre><code>jpuigcerver@fp:~ $ mkdir -p ~/git_estrategies/remot\njpuigcerver@fp:~ $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot $ git init\nInitialized empty Git repository in ~/git_estrategies/remot/.git/\njpuigcerver@fp:~/git_estrategies/remot (main) $ git branch -m main\njpuigcerver@fp:~/git_estrategies/remot (main) $ echo \"# Estrat\u00e8gies de ramificaci\u00f3\" &gt; README.md\njpuigcerver@fp:~/git_estrategies/remot (main) $ git add README.md\njpuigcerver@fp:~/git_estrategies/remot (main) $ git commit -m \"Commit inicial\"\n[main (root-commit) ec0e2bd] Commit inicial\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* ec0e2bd - (0 seconds ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main)\njpuigcerver@fp:~/git_estrategies/remot (main) $ git config --bool core.bare true # (1)!\n</code></pre> <ol> <li>Aquesta comanda \u00e9s necess\u00e0ria perqu\u00e8 el repositori siga configurat com a  bare i puga ser utilitzat com a repositori remot.</li> </ol>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#branca-de-desenvolupament","title":"Branca de desenvolupament","text":"<p>El primer pas per establir un flux de treball amb Gitflow \u00e9s crear la branca de desenvolupament <code>develop</code>.</p> <pre><code>jpuigcerver@fp:~/git_estrategies/remot (main) $ git branch develop\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* ec0e2bd - (0 seconds ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main, develop)\n</code></pre>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#desenvolupament-de-funcionalitats","title":"Desenvolupament de funcionalitats","text":"<p>En aquest punt, podem comen\u00e7ar a desenvolupar les diferents funcionalitats del projecte en branques independents.</p> <p>Crearem un repositori local per a cada desenvolupador, simulant que cadasc\u00fa treballa en el seu dispositiu.</p> <pre><code>jpuigcerver@fp:~/git_estrategies/remot (main) $ cd ~/git_estrategies\njpuigcerver@fp:~/git_estrategies $ git clone remot anna\nCloning into 'anna'...\ndone.\njpuigcerver@fp:~/git_estrategies $ git clone remot pau\nCloning into 'pau'...\ndone.\njpuigcerver@fp:~/git_estrategies $ git clone remot mar\nCloning into 'mar'...\ndone.\njpuigcerver@fp:~/git_estrategies $ git clone remot carles\nCloning into 'carles'...\ndone.\njpuigcerver@fp:~/git_estrategies $ tree .\n.\n\u251c\u2500\u2500 anna\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 carles\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 mar\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 pau\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md\n\u2514\u2500\u2500 remot\n    \u2514\u2500\u2500 README.md\n\n6 directories, 5 files\n</code></pre> <p>Cada desenvolupador comen\u00e7ar\u00e0 a treballar en una nova funcionalitat.</p> <ul> <li>Anna treballar\u00e0 en la funcionalitat <code>feature/readme</code>, que consistir\u00e0 a afegir una descripci\u00f3 del projecte al README.</li> <li>Pau treballar\u00e0 en la funcionalitat <code>feature/license</code>, que consistir\u00e0 a afegir una llic\u00e8ncia al projecte.</li> <li>Mar treballar\u00e0 en la funcionalitat <code>feature/author</code>, que consistir\u00e0 a afegir el nom dels autors del projecte al README.</li> </ul> <p>A partir d'aquest moment, cada desenvolupador treballar\u00e0 en el seu propi repositori, en la seua pr\u00f2pia branca de funcionalitat de manera independent i paral\u00b7lela.</p> <p>Important</p> <p>\u00c9s important que cada desenvolupador treballe en una \u00fanica branca per funcionalitat, i que una mateixa branca no es compartisca entre desenvolupadors.</p> <p>Si existeix la necessitat de compartir una branca, segurament siga perqu\u00e8 la funcionalitat no est\u00e0 ben definida i podr\u00e0 ser dividida en diverses funcionalitats m\u00e9s xicotetes.</p>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#branca-featurereadme","title":"Branca <code>feature/readme</code>","text":"<p>Anna comen\u00e7ar\u00e0 a treballar en la seua funcionalitat <code>feature/readme</code> en el seu repositori local.</p> <p>Nota</p> <p>Configurem l'usuari i el correu electr\u00f2nic per a cada repositori local per simular que cada desenvolupador treballa en el seu propi dispositiu.</p> <p>Tamb\u00e9 es mostra el nom en el prompt.</p> <pre><code>anna@fp:~/git_estrategies $ cd ~/git_estrategies/anna\nanna@fp:~/git_estrategies/anna (main) $ git config user.name \"Anna\"\nanna@fp:~/git_estrategies/anna (main) $ git config user.email \"anna@fpmislata.com\"\nanna@fp:~/git_estrategies/anna (main) $ git checkout develop\nbranch 'develop' set up to track 'origin/develop'.\nSwitched to a new branch 'develop'\nanna@fp:~/git_estrategies/anna (develop) $ git checkout -b feature/readme\nSwitched to a new branch 'feature/readme'\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"Les estrat\u00e8gies de ramificaci\u00f3 proporcionen un\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"marc de treball organitzat que facilita la col\u00b7laboraci\u00f3\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"entre diferents desenvolupadors en un mateix projecte\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ git commit -a -m \"README.md: Descripci\u00f3\"\n[feature/readme 502dadb] README.md: Descripci\u00f3\n 1 file changed, 3 insertions(+)\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"La caracter\u00edstica principal \u00e9s la utilitzaci\u00f3\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ echo \"de branques amb un \u00fanic prop\u00f2sit.\" &gt;&gt; README.md\nanna@fp:~/git_estrategies/anna (feature/readme) $ git commit -a -m \"README.md: Branques prop\u00f2sit \u00fanic\"\n[feature/readme ea2559a] README.md: Branques prop\u00f2sit \u00fanic\n 1 file changed, 3 insertions(+)\nanna@fp:~/git_estrategies/anna (feature/readme) $ git push -u origin feature/readme\nbranch 'feature/readme' set up to track 'origin/feature/readme'.\nTo ~/git_estrategies/remot\n * [new branch]      feature/readme -&gt; feature/readme\nanna@fp:~/git_estrategies/anna (feature/readme) $ git lga\n* ea2559a - (0 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna (HEAD -&gt; feature/readme, origin/feature/readme)\n* 502dadb - (0 seconds ago) README.md: Descripci\u00f3 - Anna\n* ec0e2bd - (0 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/develop, origin/HEAD, main, develop)\n</code></pre> <p>Els passos seguits per Anna s\u00f3n:</p> <ul> <li>Crear la branca <code>feature/readme</code> a partir de <code>develop</code>.</li> <li>Realitzar els canvis pertinents.</li> <li>Publicar la branca <code>feature/readme</code> al repositori remot.</li> </ul>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#branca-featurelicense","title":"Branca <code>feature/license</code>","text":"<p>Pau comen\u00e7ar\u00e0 a treballar en la seua funcionalitat <code>feature/license</code> en el seu repositori local.</p> <pre><code>pau@fp:~/git_estrategies $ cd ~/git_estrategies/pau\npau@fp:~/git_estrategies/pau (main) $ git config user.name \"Pau\"\npau@fp:~/git_estrategies/pau (main) $ git config user.email \"pau@fpmislata.com\"\npau@fp:~/git_estrategies/pau (main) $ git checkout develop\nbranch 'develop' set up to track 'origin/develop'.\nSwitched to a new branch 'develop'\npau@fp:~/git_estrategies/pau (develop) $ git checkout -b feature/license\nSwitched to a new branch 'feature/license'\npau@fp:~/git_estrategies/pau (feature/license) $ echo \"\" &gt; LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ echo \"## Llic\u00e8ncia\" &gt;&gt; LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ echo \"CC BY-NC-SA 4.0 DEED - Reconeixement-NoComercial-CompartirIgual 4.0 Internacional\" &gt;&gt; LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ git add LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ git commit -m \"LICENSE: Afegida llic\u00e8ncia\"\n[feature/license b11b498] LICENSE: Afegida llic\u00e8ncia\n 1 file changed, 3 insertions(+)\n create mode 100644 LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ echo \"\" &gt;&gt; LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ echo \"M\u00e9s informaci\u00f3: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ca\" &gt;&gt; LICENSE\npau@fp:~/git_estrategies/pau (feature/license) $ git commit -a -m \"LICENSE: Enlla\u00e7 a la llic\u00e8ncia\"\n[feature/license c213387] LICENSE: Enlla\u00e7 a la llic\u00e8ncia\n 1 file changed, 2 insertions(+)\npau@fp:~/git_estrategies/pau (feature/license) $ git push -u origin feature/license\nbranch 'feature/license' set up to track 'origin/feature/license'.\nTo ~/git_estrategies/remot\n * [new branch]      feature/license -&gt; feature/license\npau@fp:~/git_estrategies/pau (feature/license) $ git lga\n* c213387 - (0 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (HEAD -&gt; feature/license, origin/feature/license)\n* b11b498 - (0 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n* ec0e2bd - (1 second ago) Commit inicial - Joan Puigcerver (origin/main, origin/develop, origin/HEAD, main, develop)\n</code></pre> <p>Els passos seguits per Pau s\u00f3n:</p> <ul> <li>Crear la branca <code>feature/license</code> a partir de <code>develop</code>.</li> <li>Realitzar els canvis pertinents.</li> <li>Publicar la branca <code>feature/license</code> al repositori remot.</li> </ul>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#branca-featureauthor","title":"Branca <code>feature/author</code>","text":"<p>Mar comen\u00e7ar\u00e0 a treballar en la seua funcionalitat <code>feature/author</code> en el seu repositori local.</p> <pre><code>mar@fp:~/git_estrategies $ cd ~/git_estrategies/mar\nmar@fp:~/git_estrategies/mar (main) $ git config user.name \"Mar\"\nmar@fp:~/git_estrategies/mar (main) $ git config user.email \"mar@fpmislata.com\"\nmar@fp:~/git_estrategies/mar (main) $ git checkout develop\nbranch 'develop' set up to track 'origin/develop'.\nSwitched to a new branch 'develop'\nmar@fp:~/git_estrategies/mar (develop) $ git checkout -b feature/author\nSwitched to a new branch 'feature/author'\nmar@fp:~/git_estrategies/mar (feature/author) $ echo \"\" &gt;&gt; README.md\nmar@fp:~/git_estrategies/mar (feature/author) $ echo \"## Autors\" &gt;&gt; README.md\nmar@fp:~/git_estrategies/mar (feature/author) $ git commit -a -m \"README.md: Secci\u00f3 d'autors\"\n[feature/author 24be503] README.md: Secci\u00f3 d'autors\n 1 file changed, 2 insertions(+)\nmar@fp:~/git_estrategies/mar (feature/author) $ echo \"- Anna (anna@fpmislata.com)\" &gt;&gt; README.md\nmar@fp:~/git_estrategies/mar (feature/author) $ git commit -a -m \"Autors: Anna\"\n[feature/author 8683319] Autors: Anna\n 1 file changed, 1 insertion(+)\nmar@fp:~/git_estrategies/mar (feature/author) $ echo \"- Pau (pau@fpmislata.com)\" &gt;&gt; README.md\nmar@fp:~/git_estrategies/mar (feature/author) $ git commit -a -m \"Autors: Pau\"\n[feature/author 1d5ba44] Autors: Pau\n 1 file changed, 1 insertion(+)\nmar@fp:~/git_estrategies/mar (feature/author) $ echo \"- Mar (mar@fpmislata.com)\" &gt;&gt; README.md\nmar@fp:~/git_estrategies/mar (feature/author) $ git commit -a -m \"Autors: Mar\"\n[feature/author a216550] Autors: Mar\n 1 file changed, 1 insertion(+)\nmar@fp:~/git_estrategies/mar (feature/author) $ git push -u origin feature/author\nbranch 'feature/author' set up to track 'origin/feature/author'.\nTo ~/git_estrategies/remot\n * [new branch]      feature/author -&gt; feature/author\nmar@fp:~/git_estrategies/mar (feature/author) $ git lga\n* a216550 - (0 seconds ago) Autors: Mar - Mar (HEAD -&gt; feature/author, origin/feature/author)\n* 1d5ba44 - (0 seconds ago) Autors: Pau - Mar\n* 8683319 - (0 seconds ago) Autors: Anna - Mar\n* 24be503 - (0 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n* ec0e2bd - (1 second ago) Commit inicial - Joan Puigcerver (origin/main, origin/develop, origin/HEAD, main, develop)\n</code></pre> <p>Els passos seguits per Mar s\u00f3n:</p> <ul> <li>Crear la branca <code>feature/author</code> a partir de <code>develop</code>.</li> <li>Realitzar els canvis pertinents.</li> <li>Publicar la branca <code>feature/author</code> al repositori remot.</li> </ul>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#integracio-de-les-funcionalitats","title":"Integraci\u00f3 de les funcionalitats","text":"<p>En aquest punt, les tres funcionalitats han sigut desenvolupades de manera independent, i encara no han segut integrades a la branca de desenvolupament <code>develop</code>.</p> <pre><code>jpuigcerver@fp:~/git_estrategies $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* a216550 - (0 seconds ago) Autors: Mar - Mar (feature/author)\n* 1d5ba44 - (0 seconds ago) Autors: Pau - Mar\n* 8683319 - (0 seconds ago) Autors: Anna - Mar\n* 24be503 - (0 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n| * c213387 - (0 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (feature/license)\n| * b11b498 - (0 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * ea2559a - (1 second ago) README.md: Branques prop\u00f2sit \u00fanic - Anna (feature/readme)\n| * 502dadb - (1 second ago) README.md: Descripci\u00f3 - Anna\n|/  \n* ec0e2bd - (1 second ago) Commit inicial - Joan Puigcerver (HEAD -&gt; main, develop)\n</code></pre> <p>Preparaci\u00f3 del repositori</p> <p>Pots crear un repositor amb l'estat anterior executant el seg\u00fcent script:</p> Bash script amb el desenvolupament de les funcionalitats<pre><code>#!/bin/bash\n\n# Elimina els repositoris si existeixen\nif [ -d ~/git_estrategies ]; then\n    rm -rf ~/git_estrategies\nfi\n\n# Inicialitzaci\u00f3 del repositori remot\nmkdir -p ~/git_estrategies/remot\ncd ~/git_estrategies/remot\ngit init\ngit branch -m main\necho \"# Estrat\u00e8gies de ramificaci\u00f3\" &gt; README.md\ngit add README.md\ngit commit -m \"Commit inicial\"\ngit config --bool core.bare true # (1)!\n\n# Inicialitzaci\u00f3 del repositori de desenvolupament\ngit branch develop\n\n# Clonaci\u00f3 del repositori\ncd ~/git_estrategies\ngit clone remot anna\ngit clone remot pau\ngit clone remot mar\ngit clone remot carles\n\n# Desenvolupament de la branca feature/readme\ncd ~/git_estrategies/anna\ngit config user.name \"Anna\"\ngit config user.email \"anna@fpmislata.com\"\ngit checkout develop\ngit checkout -b feature/readme\necho \"Les estrat\u00e8gies de ramificaci\u00f3 proporcionen un\" &gt;&gt; README.md\necho \"marc de treball organitzat que facilita la col\u00b7laboraci\u00f3\" &gt;&gt; README.md\necho \"entre diferents desenvolupadors en un mateix projecte\" &gt;&gt; README.md\ngit commit -a -m \"README.md: Descripci\u00f3\"\necho \"\" &gt;&gt; README.md\necho \"La caracter\u00edstica principal \u00e9s la utilitzaci\u00f3\" &gt;&gt; README.md\necho \"de branques amb un \u00fanic prop\u00f2sit.\" &gt;&gt; README.md\ngit commit -a -m \"README.md: Branques prop\u00f2sit \u00fanic\"\ngit push -u origin feature/readme\n\n# Desenvolupament de la branca feature/license\ncd ~/git_estrategies/pau\ngit config user.name \"Pau\"\ngit config user.email \"pau@fpmislata.com\"\ngit checkout develop\ngit checkout -b feature/license\necho \"\" &gt; LICENSE\necho \"## Llic\u00e8ncia\" &gt;&gt; LICENSE\necho \"CC BY-NC-SA 4.0 DEED - Reconeixement-NoComercial-CompartirIgual 4.0 Internacional\" &gt;&gt; LICENSE\ngit add LICENSE\ngit commit -m \"LICENSE: Afegida llic\u00e8ncia\"\necho \"\" &gt;&gt; LICENSE\necho \"M\u00e9s informaci\u00f3: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ca\" &gt;&gt; LICENSE\ngit commit -a -m \"LICENSE: Enlla\u00e7 a la llic\u00e8ncia\"\ngit push -u origin feature/license\n\n# Desenvolupament de la branca feature/author\ncd ~/git_estrategies/mar\ngit config user.name \"Mar\"\ngit config user.email \"mar@fpmislata.com\"\ngit checkout develop\ngit checkout -b feature/author\necho \"\" &gt;&gt; README.md\necho \"## Autors\" &gt;&gt; README.md\ngit commit -a -m \"README.md: Secci\u00f3 d'autors\"\necho \"- Anna (anna@fpmislata.com)\" &gt;&gt; README.md\ngit commit -a -m \"Autors: Anna\"\necho \"- Pau (pau@fpmislata.com)\" &gt;&gt; README.md\ngit commit -a -m \"Autors: Pau\"\necho \"- Mar (mar@fpmislata.com)\" &gt;&gt; README.md\ngit commit -a -m \"Autors: Mar\"\ngit push -u origin feature/author\n\ncd ~/git_estrategies\n</code></pre> <p>Anem a veure com integrar les funcionalitats amb la t\u00e8cnica <code>merge</code> + <code>merge --squash</code> seguint el proc\u00e9s indicat a Integraci\u00f3 de les funcionalitats.</p>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#integracio-de-featurereadme","title":"Integraci\u00f3 de <code>feature/readme</code>","text":"<p>Anna ja ha acabat la seua funcionalitat <code>feature/readme</code> i vol integrar-la a la branca <code>develop</code>.</p> <p>Els passos que ha de seguir s\u00f3n:</p> <ol> <li> <p>Sincronitzar l'estat del repositori local amb el remot amb <code>git fetch</code>.</p> <pre><code>anna@fp:~/git_estrategies $ cd ~/git_estrategies/anna\nanna@fp:~/git_estrategies/anna (feature/readme) $ git fetch\nFrom ~/git_estrategies/remot\n * [new branch]      feature/author  -&gt; origin/feature/author\n * [new branch]      feature/license -&gt; origin/feature/license\nanna@fp:~/git_estrategies/anna (feature/readme) $ git lga\n* a216550 - (1 second ago) Autors: Mar - Mar (origin/feature/author)\n* 1d5ba44 - (1 second ago) Autors: Pau - Mar\n* 8683319 - (1 second ago) Autors: Anna - Mar\n* 24be503 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n| * c213387 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * ea2559a - (2 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna (HEAD -&gt; feature/readme, origin/feature/readme)\n| * 502dadb - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n|/  \n* ec0e2bd - (2 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/develop, origin/HEAD, main, develop)\n</code></pre> </li> <li> <p>Actualitzar la branca <code>develop</code> amb els canvis del remot.</p> <p>En aquest cas, ja est\u00e0 actualitzada.</p> <pre><code>anna@fp:~/git_estrategies/anna (feature/readme) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nSwitched to branch 'develop'\nanna@fp:~/git_estrategies/anna (develop) $ git pull --ff-only\nAlready up to date.\n</code></pre> </li> <li> <p>Actualitzar la branca <code>feature/readme</code> amb els canvis <code>develop</code>.</p> <p>En aquest cas, ja est\u00e0 actualitzada.</p> <pre><code>anna@fp:~/git_estrategies/anna (develop) $ git checkout feature/readme\nYour branch is up to date with 'origin/feature/readme'.\nSwitched to branch 'feature/readme'\nanna@fp:~/git_estrategies/anna (feature/readme) $ git merge --no-ff --no-edit develop #(1)!\nAlready up to date.\n</code></pre> <ol> <li>L'opci\u00f3 <code>--no-edit</code> evita obrir l'editor de text i deixa el missatge de commit per defecte.</li> </ol> </li> <li> <p>Fusionar la branca <code>feature/readme</code> amb <code>develop</code>.</p> <pre><code>anna@fp:~/git_estrategies/anna (feature/readme) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nSwitched to branch 'develop'\nanna@fp:~/git_estrategies/anna (develop) $ git merge --squash feature/readme\nUpdating ec0e2bd..ea2559a\nFast-forward\nSquash commit -- not updating HEAD\n README.md | 6 ++++++\n 1 file changed, 6 insertions(+)\nanna@fp:~/git_estrategies/anna (develop) $ git status\nOn branch develop\nYour branch is up to date with 'origin/develop'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\nanna@fp:~/git_estrategies/anna (develop) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 05c1f5b..9e7f142 100644\n--- a/README.md\n+++ b/README.md\n@@ -1 +1,7 @@\n # Estrat\u00e8gies de ramificaci\u00f3\n+Les estrat\u00e8gies de ramificaci\u00f3 proporcionen un\n+marc de treball organitzat que facilita la col\u00b7laboraci\u00f3\n+entre diferents desenvolupadors en un mateix projecte\n+\n+La caracter\u00edstica principal \u00e9s la utilitzaci\u00f3\n+de branques amb un \u00fanic prop\u00f2sit.\nanna@fp:~/git_estrategies/anna (develop) $ git commit -m \"Merge branch 'feature/readme'\"\n[develop 2bc4029] Merge branch 'feature/readme'\n 1 file changed, 6 insertions(+)\nanna@fp:~/git_estrategies/anna (develop) $ git lga\n* 2bc4029 - (0 seconds ago) Merge branch 'feature/readme' - Anna (HEAD -&gt; develop)\n| * a216550 - (1 second ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (1 second ago) Autors: Pau - Mar\n| * 8683319 - (1 second ago) Autors: Anna - Mar\n| * 24be503 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n| * c213387 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * ea2559a - (2 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna (origin/feature/readme, feature/readme)\n| * 502dadb - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n|/  \n* ec0e2bd - (2 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/develop, origin/HEAD, main)\n</code></pre> </li> <li> <p>Publicar els canvis de la branca <code>develop</code> al repositori remot.</p> <pre><code>anna@fp:~/git_estrategies/anna (develop) $ git push\nTo ~/git_estrategies/remot\n   ec0e2bd..2bc4029  develop -&gt; develop\nanna@fp:~/git_estrategies/anna (develop) $ git lga\n* 2bc4029 - (0 seconds ago) Merge branch 'feature/readme' - Anna (HEAD -&gt; develop, origin/develop)\n| * a216550 - (1 second ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (1 second ago) Autors: Pau - Mar\n| * 8683319 - (1 second ago) Autors: Anna - Mar\n| * 24be503 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n| * c213387 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * ea2559a - (2 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna (origin/feature/readme, feature/readme)\n| * 502dadb - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n|/  \n* ec0e2bd - (2 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Eliminar la branca <code>feature/readme</code> del repositori local i del remot.</p> <pre><code>anna@fp:~/git_estrategies/anna (develop) $ git branch -D feature/readme\nDeleted branch feature/readme (was ea2559a).\nanna@fp:~/git_estrategies/anna (develop) $ git push origin --delete feature/readme\nTo ~/git_estrategies/remot\n - [deleted]         feature/readme\nanna@fp:~/git_estrategies/anna (develop) $ git lga\n* 2bc4029 - (0 seconds ago) Merge branch 'feature/readme' - Anna (HEAD -&gt; develop, origin/develop)\n| * a216550 - (1 second ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (1 second ago) Autors: Pau - Mar\n| * 8683319 - (1 second ago) Autors: Anna - Mar\n| * 24be503 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n| * c213387 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n* ec0e2bd - (2 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> </ol> <p>En aquest punt, la funcionalitat desenvolupada per Anna ha sigut integrada a la branca de desenvolupament <code>develop</code> i pot continuar treballant en altres funcionalitats.</p>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#integracio-de-featurelicense","title":"Integraci\u00f3 de <code>feature/license</code>","text":"<p>Pau ja ha acabat la seua funcionalitat <code>feature/license</code> i vol integrar-la a la branca <code>develop</code>.</p> <p>Els passos que ha de seguir s\u00f3n:</p> <ol> <li> <p>Sincronitzar l'estat del repositori local amb el remot amb <code>git fetch</code>.</p> <pre><code>pau@fp:~/git_estrategies $ cd ~/git_estrategies/pau\npau@fp:~/git_estrategies/pau (feature/license) $ git fetch\nFrom ~/git_estrategies/remot\n   ec0e2bd..2bc4029  develop        -&gt; origin/develop\n * [new branch]      feature/author -&gt; origin/feature/author\npau@fp:~/git_estrategies/pau (feature/license) $ git lga\n* 2bc4029 - (0 seconds ago) Merge branch 'feature/readme' - Anna (origin/develop)\n| * c213387 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (HEAD -&gt; feature/license, origin/feature/license)\n| * b11b498 - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * a216550 - (1 second ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (1 second ago) Autors: Pau - Mar\n| * 8683319 - (1 second ago) Autors: Anna - Mar\n| * 24be503 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (2 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main, develop)\n</code></pre> </li> <li> <p>Actualitzar la branca <code>develop</code> amb els canvis del remot.</p> <pre><code>pau@fp:~/git_estrategies/pau (feature/license) $ git checkout develop\nYour branch is behind 'origin/develop' by 1 commit, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\nSwitched to branch 'develop'\npau@fp:~/git_estrategies/pau (develop) $ git pull --ff-only\nUpdating ec0e2bd..2bc4029\nFast-forward\n README.md | 6 ++++++\n 1 file changed, 6 insertions(+)\npau@fp:~/git_estrategies/pau (develop) $ git lga\n* 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna (HEAD -&gt; develop, origin/develop)\n| * c213387 - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license, feature/license)\n| * b11b498 - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * a216550 - (2 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Actualitzar la branca <code>feature/license</code> amb els canvis <code>develop</code>.</p> <pre><code>pau@fp:~/git_estrategies/pau (develop) $ git checkout feature/license\nYour branch is up to date with 'origin/feature/license'.\nSwitched to branch 'feature/license'\npau@fp:~/git_estrategies/pau (feature/license) $ git merge --no-ff --no-edit develop # (1)!\nMerge made by the 'ort' strategy.\n README.md | 6 ++++++\n 1 file changed, 6 insertions(+)\npau@fp:~/git_estrategies/pau (feature/license) $ git lga\n*   5b6d510 - (0 seconds ago) Merge branch 'develop' into feature/license - Pau (HEAD -&gt; feature/license)\n|\\  \n| * 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna (origin/develop, develop)\n* | c213387 - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n* | b11b498 - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * a216550 - (2 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> <ol> <li>L'opci\u00f3 <code>--no-edit</code> evita obrir l'editor de text i deixa el missatge de commit per defecte.</li> </ol> </li> <li> <p>Fusionar la branca <code>feature/license</code> amb <code>develop</code>.</p> <pre><code>pau@fp:~/git_estrategies/pau (feature/license) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nSwitched to branch 'develop'\npau@fp:~/git_estrategies/pau (develop) $ git merge --squash feature/license\nUpdating 2bc4029..5b6d510\nFast-forward\nSquash commit -- not updating HEAD\n LICENSE | 5 +++++\n 1 file changed, 5 insertions(+)\n create mode 100644 LICENSE\npau@fp:~/git_estrategies/pau (develop) $ git status\nOn branch develop\nYour branch is up to date with 'origin/develop'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    new file:   LICENSE\n\npau@fp:~/git_estrategies/pau (develop) $ git diff --staged\ndiff --git a/LICENSE b/LICENSE\nnew file mode 100644\nindex 0000000..809d714\n--- /dev/null\n+++ b/LICENSE\n@@ -0,0 +1,5 @@\n+\n+## Llic\u00e8ncia\n+CC BY-NC-SA 4.0 DEED - Reconeixement-NoComercial-CompartirIgual 4.0 Internacional\n+\n+M\u00e9s informaci\u00f3: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ca\npau@fp:~/git_estrategies/pau (develop) $ git commit -m \"Merge branch 'feature/license'\"\n[develop b7bf0a5] Merge branch 'feature/license'\n 1 file changed, 5 insertions(+)\n create mode 100644 LICENSE\npau@fp:~/git_estrategies/pau (develop) $ git lga\n* b7bf0a5 - (0 seconds ago) Merge branch 'feature/license' - Pau (HEAD -&gt; develop)\n| *   5b6d510 - (0 seconds ago) Merge branch 'develop' into feature/license - Pau (feature/license)\n| |\\  \n| |/  \n|/|   \n* | 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna (origin/develop)\n| * c213387 - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * a216550 - (2 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Publicar els canvis de la branca <code>develop</code> al repositori remot.</p> <pre><code>pau@fp:~/git_estrategies/pau (develop) $ git push\nTo ~/git_estrategies/remot\n   2bc4029..b7bf0a5  develop -&gt; develop\npau@fp:~/git_estrategies/pau (develop) $ git lga\n* b7bf0a5 - (0 seconds ago) Merge branch 'feature/license' - Pau (HEAD -&gt; develop, origin/develop)\n| *   5b6d510 - (0 seconds ago) Merge branch 'develop' into feature/license - Pau (feature/license)\n| |\\  \n| |/  \n|/|   \n* | 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna\n| * c213387 - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau (origin/feature/license)\n| * b11b498 - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n| * a216550 - (2 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Eliminar la branca <code>feature/license</code> del repositori local i del remot.</p> <pre><code>pau@fp:~/git_estrategies/pau (develop) $ git branch -D feature/license\nDeleted branch feature/license (was 5b6d510).\npau@fp:~/git_estrategies/pau (develop) $ git push origin --delete feature/license\nTo ~/git_estrategies/remot\n - [deleted]         feature/license\npau@fp:~/git_estrategies/pau (develop) $ git lga\n* b7bf0a5 - (0 seconds ago) Merge branch 'feature/license' - Pau (HEAD -&gt; develop, origin/develop)\n* 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna\n| * a216550 - (2 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> </ol>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#integracio-de-featureauthor","title":"Integraci\u00f3 de <code>feature/author</code>","text":"<p>Mar ja ha acabat la seua funcionalitat <code>feature/author</code> i vol integrar-la a la branca <code>develop</code>.</p> <p>Els passos que ha de seguir s\u00f3n:</p> <ol> <li> <p>Sincronitzar l'estat del repositori local amb el remot amb <code>git fetch</code>.</p> <pre><code>mar@fp:~/git_estrategies $ cd ~/git_estrategies/mar\nmar@fp:~/git_estrategies/mar (feature/author) $ git fetch\nFrom ~/git_estrategies/remot\n   ec0e2bd..b7bf0a5  develop    -&gt; origin/develop\nmar@fp:~/git_estrategies/mar (feature/author) $ git lga\n* b7bf0a5 - (0 seconds ago) Merge branch 'feature/license' - Pau (origin/develop)\n* 2bc4029 - (1 second ago) Merge branch 'feature/readme' - Anna\n| * a216550 - (2 seconds ago) Autors: Mar - Mar (HEAD -&gt; feature/author, origin/feature/author)\n| * 1d5ba44 - (2 seconds ago) Autors: Pau - Mar\n| * 8683319 - (2 seconds ago) Autors: Anna - Mar\n| * 24be503 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (3 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main, develop)\n</code></pre> </li> <li> <p>Actualitzar la branca <code>develop</code> amb els canvis del remot.</p> <pre><code>mar@fp:~/git_estrategies/mar (feature/author) $ git checkout develop\nYour branch is behind 'origin/develop' by 2 commits, and can be fast-forwarded.\n  (use \"git pull\" to update your local branch)\nSwitched to branch 'develop'\nmar@fp:~/git_estrategies/mar (develop) $ git pull --ff-only\nUpdating ec0e2bd..b7bf0a5\nFast-forward\n LICENSE   | 5 +++++\n README.md | 6 ++++++\n 2 files changed, 11 insertions(+)\n create mode 100644 LICENSE\nmar@fp:~/git_estrategies/mar (develop) $ git lga\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau (HEAD -&gt; develop, origin/develop)\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n| * a216550 - (3 seconds ago) Autors: Mar - Mar (origin/feature/author, feature/author)\n| * 1d5ba44 - (3 seconds ago) Autors: Pau - Mar\n| * 8683319 - (3 seconds ago) Autors: Anna - Mar\n| * 24be503 - (3 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Actualitzar la branca <code>feature/author</code> amb els canvis <code>develop</code>.</p> <p>Info</p> <p>En aquest cas, han sorgit conflictes que hem hagut de solucionar manualment.</p> <pre><code>mar@fp:~/git_estrategies/mar (develop) $ git checkout feature/author\nYour branch is up to date with 'origin/feature/author'.\nSwitched to branch 'feature/author'\nmar@fp:~/git_estrategies/mar (feature/author) $ git merge --no-ff --no-edit develop # (1)!\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\nmar@fp:~/git_estrategies/mar (feature/author|MERGING) $ vim README.md # (2)!\nmar@fp:~/git_estrategies/mar (feature/author|MERGING) $ git add README.md\nmar@fp:~/git_estrategies/mar (feature/author|MERGING) $ git commit --no-edit # (1)!\n[feature/author 72afb5a] Merge branch 'develop' into feature/author\nmar@fp:~/git_estrategies/mar (feature/author) $ git lga\n*   72afb5a - (0 seconds ago) Merge branch 'develop' into feature/author - Mar (HEAD -&gt; feature/author)\n|\\  \n| * b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau (origin/develop, develop)\n| * 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* | a216550 - (3 seconds ago) Autors: Mar - Mar (origin/feature/author)\n* | 1d5ba44 - (3 seconds ago) Autors: Pau - Mar\n* | 8683319 - (3 seconds ago) Autors: Anna - Mar\n* | 24be503 - (3 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> <ol> <li>L'opci\u00f3 <code>--no-edit</code> evita obrir l'editor de text i deixa el missatge de commit per defecte.</li> <li>S'han esborrat les marques de conflicte manualment.</li> </ol> </li> <li> <p>Fusionar la branca <code>feature/author</code> amb <code>develop</code>.</p> <pre><code>mar@fp:~/git_estrategies/mar (feature/author) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nSwitched to branch 'develop'\nmar@fp:~/git_estrategies/mar (develop) $ git merge --squash feature/author\nUpdating b7bf0a5..72afb5a\nFast-forward\nSquash commit -- not updating HEAD\n README.md | 5 +++++\n 1 file changed, 5 insertions(+)\nmar@fp:~/git_estrategies/mar (develop) $ git status\nOn branch develop\nYour branch is up to date with 'origin/develop'.\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\nmar@fp:~/git_estrategies/mar (develop) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 9e7f142..416ca41 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,4 +1,9 @@\n # Estrat\u00e8gies de ramificaci\u00f3\n+\n+## Autors\n+- Anna (anna@fpmislata.com)\n+- Pau (pau@fpmislata.com)\n+- Mar (mar@fpmislata.com)\n Les estrat\u00e8gies de ramificaci\u00f3 proporcionen un\n marc de treball organitzat que facilita la col\u00b7laboraci\u00f3\n entre diferents desenvolupadors en un mateix projecte\nmar@fp:~/git_estrategies/mar (develop) $ git commit -m \"Merge branch 'feature/author'\"\n[develop f9152dc] Merge branch 'feature/author'\n 1 file changed, 5 insertions(+)\nmar@fp:~/git_estrategies/mar (develop) $ git lga\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (HEAD -&gt; develop)\n| *   72afb5a - (0 seconds ago) Merge branch 'develop' into feature/author - Mar (feature/author)\n| |\\  \n| |/  \n|/|   \n* | b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau (origin/develop)\n* | 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n| * a216550 - (3 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (3 seconds ago) Autors: Pau - Mar\n| * 8683319 - (3 seconds ago) Autors: Anna - Mar\n| * 24be503 - (3 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Publicar els canvis de la branca <code>develop</code> al repositori remot.</p> <pre><code>mar@fp:~/git_estrategies/mar (develop) $ git push\nTo ~/git_estrategies/remot\n   b7bf0a5..f9152dc  develop -&gt; develop\nmar@fp:~/git_estrategies/mar (develop) $ git lga\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (HEAD -&gt; develop, origin/develop)\n| *   72afb5a - (0 seconds ago) Merge branch 'develop' into feature/author - Mar (feature/author)\n| |\\  \n| |/  \n|/|   \n* | b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* | 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n| * a216550 - (3 seconds ago) Autors: Mar - Mar (origin/feature/author)\n| * 1d5ba44 - (3 seconds ago) Autors: Pau - Mar\n| * 8683319 - (3 seconds ago) Autors: Anna - Mar\n| * 24be503 - (3 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Eliminar la branca <code>feature/author</code> del repositori local i del remot.</p> <pre><code>mar@fp:~/git_estrategies/mar (develop) $ git branch -D feature/author\nDeleted branch feature/author (was 72afb5a).\nmar@fp:~/git_estrategies/mar (develop) $ git push origin --delete feature/author\nTo ~/git_estrategies/remot\n - [deleted]         feature/author\nmar@fp:~/git_estrategies/mar (develop) $ git lga\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (HEAD -&gt; develop, origin/develop)\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> </ol>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#llancament-de-la-versio-100","title":"Llan\u00e7ament de la versi\u00f3 1.0.0","text":"<p>Anna \u00e9s l'encarregada de preparar el llan\u00e7ament de la versi\u00f3 1.0.0.</p> <p>Els passos que ha de seguir s\u00f3n:</p> <ol> <li> <p>Actualitzar la branca <code>develop</code> amb els canvis del remot.</p> <pre><code>anna@fp:~/git_estrategies $ cd ~/git_estrategies/anna\nanna@fp:~/git_estrategies/anna (develop) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nAlready on 'develop'\nanna@fp:~/git_estrategies/anna (develop) $ git fetch --prune\nFrom ~/git_estrategies/remot\n - [deleted]         (none)     -&gt; origin/feature/author\n - [deleted]         (none)     -&gt; origin/feature/license\n   2bc4029..f9152dc  develop    -&gt; origin/develop\nanna@fp:~/git_estrategies/anna (develop) $ git pull --ff-only\nUpdating 2bc4029..f9152dc\nFast-forward\n LICENSE   | 5 +++++\n README.md | 5 +++++\n 2 files changed, 10 insertions(+)\n create mode 100644 LICENSE\nanna@fp:~/git_estrategies/anna (develop) $ git lga\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (HEAD -&gt; develop, origin/develop)\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Crear la branca de llan\u00e7ament <code>release/v1.0.0</code> a partir de la branca <code>develop</code>.</p> <pre><code>anna@fp:~/git_estrategies/anna (develop) $ git checkout -b release/v1.0.0\nSwitched to a new branch 'release/v1.0.0'\nanna@fp:~/git_estrategies/anna (release/v1.0.0) $ git lga\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (HEAD -&gt; release/v1.0.0, origin/develop, develop)\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Realitzar les tasques necess\u00e0ries per a preparar el llan\u00e7ament de la versi\u00f3 1.0.0.</p> <pre><code>anna@fp:~/git_estrategies/anna (release/v1.0.0) $ echo \"v1.0.0\" &gt; VERSION\nanna@fp:~/git_estrategies/anna (release/v1.0.0) $ git add VERSION\nanna@fp:~/git_estrategies/anna (release/v1.0.0) $ git commit -m \"Publicada versi\u00f3: v1.0.0\"\n[release/v1.0.0 2c075dd] Publicada versi\u00f3: v1.0.0\n 1 file changed, 1 insertion(+)\n create mode 100644 VERSION\nanna@fp:~/git_estrategies/anna (release/v1.0.0) $ git lga\n* 2c075dd - (0 seconds ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; release/v1.0.0)\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar (origin/develop, develop)\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Integrar aquesta branca a la branca de desenvolupament <code>develop</code> i publicar-la.</p> <pre><code>anna@fp:~/git_estrategies/anna (release/v1.0.0) $ git checkout develop\nYour branch is up to date with 'origin/develop'.\nSwitched to branch 'develop'\nanna@fp:~/git_estrategies/anna (develop) $ git merge --ff-only release/v1.0.0\nUpdating f9152dc..2c075dd\nFast-forward\n VERSION | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 VERSION\nanna@fp:~/git_estrategies/anna (develop) $ git push\nTo ~/git_estrategies/remot\n   f9152dc..2c075dd  develop -&gt; develop\nanna@fp:~/git_estrategies/anna (develop) $ git lga\n* 2c075dd - (0 seconds ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; develop, origin/develop, release/v1.0.0)\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver (origin/main, origin/HEAD, main)\n</code></pre> </li> <li> <p>Integrar aquesta branca a la branca principal <code>main</code> i publicar els canvis.</p> <pre><code>anna@fp:~/git_estrategies/anna (develop) $ git checkout main\nYour branch is up to date with 'origin/main'.\nSwitched to branch 'main'\nanna@fp:~/git_estrategies/anna (main) $ git merge --ff-only release/v1.0.0\nUpdating ec0e2bd..2c075dd\nFast-forward\n LICENSE   |  5 +++++\n README.md | 11 +++++++++++\n VERSION   |  1 +\n 3 files changed, 17 insertions(+)\n create mode 100644 LICENSE\n create mode 100644 VERSION\nanna@fp:~/git_estrategies/anna (main) $ git push\nTo ~/git_estrategies/remot\n   ec0e2bd..2c075dd  main -&gt; main\nanna@fp:~/git_estrategies/anna (main) $ git lga\n* 2c075dd - (0 seconds ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, origin/main, origin/develop, origin/HEAD, release/v1.0.0, develop)\n* f9152dc - (0 seconds ago) Merge branch 'feature/author' - Mar\n* b7bf0a5 - (1 second ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (2 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (4 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> </li> <li> <p>Crear i publicar una etiqueta amb la versi\u00f3 1.0.0.</p> <pre><code>anna@fp:~/git_estrategies/anna (main) $ git tag v1.0.0\nanna@fp:~/git_estrategies/anna (main) $ git push --tags\nTo ~/git_estrategies/remot\n * [new tag]         v1.0.0 -&gt; v1.0.0\nanna@fp:~/git_estrategies/anna (main) $ git lga\n* 2c075dd - (1 second ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, origin/main, origin/develop, origin/HEAD, release/v1.0.0, develop)\n* f9152dc - (1 second ago) Merge branch 'feature/author' - Mar\n* b7bf0a5 - (2 seconds ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (3 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (5 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> </li> <li> <p>Eliminar la branca de llan\u00e7ament.</p> <pre><code>anna@fp:~/git_estrategies/anna (main) $ git branch -D release/v1.0.0\nDeleted branch release/v1.0.0 (was 2c075dd).\nanna@fp:~/git_estrategies/anna (main) $ git push origin --delete release/v1.0.0\nerror: unable to delete 'release/v1.0.0': remote ref does not exist\nerror: failed to push some refs to '~/git_estrategies/remot'\nanna@fp:~/git_estrategies/anna (main) $ git lga\n* 2c075dd - (1 second ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, origin/main, origin/develop, origin/HEAD, develop)\n* f9152dc - (1 second ago) Merge branch 'feature/author' - Mar\n* b7bf0a5 - (2 seconds ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (3 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (5 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre> </li> </ol>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#estat-final","title":"Estat final","text":""},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#merge-merge-squash","title":"<code>merge</code> + <code>merge --squash</code>","text":"<pre><code>jpuigcerver@fp:~/git_estrategies $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* 2c075dd - (1 second ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, develop)\n* f9152dc - (1 second ago) Merge branch 'feature/author' - Mar\n* b7bf0a5 - (2 seconds ago) Merge branch 'feature/license' - Pau\n* 2bc4029 - (3 seconds ago) Merge branch 'feature/readme' - Anna\n* ec0e2bd - (5 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#merge-no-ff","title":"<code>merge --no-ff</code>","text":"<pre><code>jpuigcerver@fp:~/git_estrategies $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* 62a0575 - (1 second ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, develop)\n*   457a8ec - (1 second ago) Merge branch 'feature/author' into develop - Mar\n|\\  \n| * fee598f - (2 seconds ago) Autors: Mar - Mar\n| * 91051a8 - (2 seconds ago) Autors: Pau - Mar\n| * 9d2e45e - (2 seconds ago) Autors: Anna - Mar\n| * 2386be4 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n* |   ab97fda - (1 second ago) Merge branch 'feature/license' into develop - Pau\n|\\ \\  \n| * | d0ac96b - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau\n| * | d92ab12 - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n| |/  \n* |   b1643d0 - (2 seconds ago) Merge branch 'feature/readme' into develop - Anna\n|\\ \\  \n| |/  \n|/|   \n| * 4497a8a - (2 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna\n| * 550b032 - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n|/  \n* 8073f1b - (3 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#rebase","title":"<code>rebase</code>","text":"<pre><code>jpuigcerver@fp:~/git_estrategies $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* b65dd58 - (0 seconds ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, develop)\n* 52b7a9f - (1 second ago) Autors: Mar - Mar\n* 08b5ed9 - (1 second ago) Autors: Pau - Mar\n* 9dd2d3f - (1 second ago) Autors: Anna - Mar\n* 68ec029 - (1 second ago) README.md: Secci\u00f3 d'autors - Mar\n* 3437876 - (1 second ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau\n* 3b78f7c - (1 second ago) LICENSE: Afegida llic\u00e8ncia - Pau\n* ef69234 - (1 second ago) README.md: Branques prop\u00f2sit \u00fanic - Anna\n* 08d5044 - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n* 76e3984 - (2 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>"},{"location":"apunts/05_estrategies/02_exemple_ramificacio/#rebase-merge-no-ff","title":"<code>rebase</code> + <code>merge --no-ff</code>","text":"<pre><code>jpuigcerver@fp:~/git_estrategies $ cd ~/git_estrategies/remot\njpuigcerver@fp:~/git_estrategies/remot (main) $ git lga\n* 2e5055d - (1 second ago) Publicada versi\u00f3: v1.0.0 - Anna (HEAD -&gt; main, tag: v1.0.0, develop)\n*   819768e - (1 second ago) Merge branch 'feature/author' into develop - Mar\n|\\  \n| * 6a55891 - (2 seconds ago) Autors: Mar - Mar\n| * 6378ec5 - (2 seconds ago) Autors: Pau - Mar\n| * d3ba434 - (2 seconds ago) Autors: Anna - Mar\n| * bc83183 - (2 seconds ago) README.md: Secci\u00f3 d'autors - Mar\n|/  \n*   cd61062 - (2 seconds ago) Merge branch 'feature/license' into develop - Pau\n|\\  \n| * 1deca93 - (2 seconds ago) LICENSE: Enlla\u00e7 a la llic\u00e8ncia - Pau\n| * 8e49ffe - (2 seconds ago) LICENSE: Afegida llic\u00e8ncia - Pau\n|/  \n*   b88863d - (2 seconds ago) Merge branch 'feature/readme' into develop - Anna\n|\\  \n| * 89cd46e - (2 seconds ago) README.md: Branques prop\u00f2sit \u00fanic - Anna\n| * c449135 - (2 seconds ago) README.md: Descripci\u00f3 - Anna\n|/  \n* ae3c31e - (3 seconds ago) Commit inicial - Joan Puigcerver\n</code></pre>"},{"location":"apunts/05_estrategies/04_exercici/","title":"Exercici: Estrat\u00e8gies de ramificaci\u00f3","text":""},{"location":"apunts/05_estrategies/04_exercici/#objectius","title":"Objectius","text":"<p>Els objectius d'aquests exercici s\u00f3n:</p> <ul> <li>Con\u00e9ixer les diferents estrat\u00e8gies de ramificaci\u00f3.</li> <li>Con\u00e9ixer com aplicar les diferents estrat\u00e8gies de ramificaci\u00f3.</li> <li>Identificar els principals avantatges i desavantatges de cada estrat\u00e8gia de ramificaci\u00f3.</li> <li>Identificar i saber solucionar els problemes associats a cada estrat\u00e8gia de ramificaci\u00f3.</li> </ul>"},{"location":"apunts/05_estrategies/04_exercici/#enunciat","title":"Enunciat","text":"<p>Crea un repositori de Git per guardar les teues pel\u00b7l\u00edcules i s\u00e8ries preferides.</p> <p>Utilitza una estrat\u00e8gia de ramificaci\u00f3 per mantindre un ordre en el teu repositori, utilitzant les seg\u00fcents branques:</p> <ul> <li>Branca principal: <code>main</code>.</li> <li>Branca de desenvolupament: <code>develop</code>.</li> <li>Branques de funcionalitat: <code>feature/*</code>.</li> </ul> <p>Per integrar les branques de funcionalitat a la branca de desenvolupament, pots triar entre les seg\u00fcents opcions:</p> <ul> <li>Fusi\u00f3 merge -no-ff</li> <li>Canvi de base rebase + merge --ff-only</li> <li>Fusi\u00f3 rebase + merge --no-ff</li> <li>Estrat\u00e8gies de ramificaci\u00f3</li> </ul>"},{"location":"apunts/05_estrategies/04_exercici/#tasca","title":"Tasca","text":"<ol> <li>Crea un repositori de Git anomenat <code>git_estrategies_exerici</code>.</li> <li>Crea un fitxer <code>README.md</code> amb la descripci\u00f3 del teu repositori     que desitges.</li> <li>Crea un primer commit amb el fitxer <code>README.md</code>.</li> <li>Crea una branca <code>develop</code> a partir de la branca <code>main</code>.</li> <li> <p>Crea les seg\u00fcents branques de funcionalitat:</p> <ul> <li><code>feature/pelicules-genere1</code></li> <li><code>feature/pelicules-genere2</code></li> <li><code>feature/series-genere3</code></li> <li><code>feature/series-genere4</code></li> </ul> <p>Note</p> <p>Modifica <code>genereX</code> per un g\u00e8nere de pel\u00b7l\u00edcules o s\u00e8ries que t'agrade.</p> </li> <li> <p>En cada branca de funcionalitat:</p> <ul> <li><code>feature/pelicules-genere1</code>: Afegeix 2 pel\u00b7l\u00edcules del g\u00e8nere 1 a <code>pelicules.txt</code>.</li> <li><code>feature/pelicules-genere2</code>: Afegeix 2 pel\u00b7l\u00edcules del g\u00e8nere 2 a <code>pelicules.txt</code>.</li> <li><code>feature/series-genere3</code>: Afegeix 2 s\u00e8ries del g\u00e8nere 3 a <code>series.txt</code>.</li> <li><code>feature/series-genere4</code>: Afegeix 2 s\u00e8ries del g\u00e8nere 4 a <code>series.txt</code>.</li> </ul> </li> <li> <p>Integra les branques de funcionalitat a la branca <code>develop</code>     utilitzant una de les estrat\u00e8gies de fusi\u00f3.</p> </li> <li> <p>Publica els canvis a la branca principal <code>main</code>.</p> </li> </ol>"},{"location":"apunts/05_estrategies/04_exercici/#ampliacio","title":"Ampliaci\u00f3","text":"<p>Realitza l'exercici amb totes les estrat\u00e8gies d'integraci\u00f3 de branques de funcionalitat.</p>"},{"location":"apunts/06_projectes/01_gestio_projectes/","title":"Gesti\u00f3 de projectes a GitHub","text":"","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/01_gestio_projectes/#gestio-de-projectes-a-github","title":"Gesti\u00f3 de projectes a GitHub","text":"<p>Els serveis d'allotjament de repositoris en l\u00ednia, com  GitHub o  GitLab, ofereixen una s\u00e8rie d'eines i funcionalitats que permeten gestionar projectes de desenvolupament de programari col\u00b7laboratiu de manera f\u00e0cil i efica\u00e7.</p> <p>En aquests apunts ens centrarem en la part de gesti\u00f3 de projectes, com crear debats, comunicar incid\u00e8ncies i organitzar tasques.</p>","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/01_gestio_projectes/#debats","title":"Debats","text":"<p>Els debats o Discussions \u00e9s un espai de comunicaci\u00f3 on els membres d'un projecte o els membres d'una comunitat poden intercanviar idees, opinions, realitzar suggeriments o debatre sobre temes concrets.</p> <p>Debats en aquest repositori</p> <p>Aquest lloc web est\u00e0 allotjat a  GitHub i s'ha habilitat la funcionalitat de debats.</p> <p>Podeu accedir mitjan\u00e7ant la secci\u00f3 \"Discussions\" del men\u00fa superior o en aquest enlla\u00e7.</p> <p></p> <p>Figura 1. Exemple de debat en un repositori de GitHub</p> <p>Aquesta funcionalitat no est\u00e0 habilitada per defecte. Per activar-la, cal anar al men\u00fa de configuraci\u00f3 del repositori i habilitar la funcionalitat de debats.</p> <p></p> <p>Figura 2. Configuraci\u00f3 de les Discussions en un repositori de GitHub</p> <p>Els debats estan organitzats per categories, que poden ser editades. Les categories per defecte s\u00f3n les seg\u00fcents:</p> <ul> <li>Announcements: per a anuncis oficials.     Sols els propietaris del repositori poden crear debats en aquesta categoria.</li> <li>General: per a debats generals.</li> <li>Idees: per a suggeriments i propostes.</li> <li>Polls: per realitzar enquestes.</li> <li>Q\u00fcestions (Q&amp;A): per a preguntes i respostes.</li> <li>Show and Tell: per a compartir projectes i treballs relacionats amb el repositori.</li> </ul>","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/01_gestio_projectes/#incidencies","title":"Incid\u00e8ncies","text":"<p>Les incid\u00e8ncies o Issues s\u00f3n una eina de creaci\u00f3 i seguiment d'incid\u00e8ncies relacionades amb un projecte.</p> <p>En aquest espai, tamb\u00e9 es permet la comunicaci\u00f3 i la col\u00b7laboraci\u00f3 entre els membres del projecte per a aportar informaci\u00f3 sobre la incid\u00e8ncia, debatre sobre la seva resoluci\u00f3.</p> <p>Incid\u00e8ncies en aquest repositori</p> <p>La ferramenta MkDocs que s'utilitza per a generar aquest lloc web, tamb\u00e9 t\u00e9 el seu propi repositori a  GitHub.</p> <p>Podeu accedir a les incid\u00e8ncies d'aquesta ferramenta mitjan\u00e7ant la secci\u00f3 \"Issues\" del men\u00fa superior o en aquest enlla\u00e7.</p> <p>.</p> <p>Les incid\u00e8ncies contenen la seg\u00fcent informaci\u00f3:</p> <ul> <li>T\u00edtol: descripci\u00f3 breu de la incid\u00e8ncia.</li> <li> <p>Descripci\u00f3: Informaci\u00f3 detallada de la incid\u00e8ncia.</p> <p>En aquesta secci\u00f3 \u00e9s important proporcionar tota la informaci\u00f3 necess\u00e0ria per a entendre la incid\u00e8ncia i poder resoldre-la.</p> <p>A m\u00e9s, els propietaris del repositori poden configurar plantilles per a la creaci\u00f3 d'incid\u00e8ncies, que faciliten la recopilaci\u00f3 de la informaci\u00f3 necess\u00e0ria.</p> </li> <li> <p>Etiquetes: permeten categoritzar les incid\u00e8ncies per a facilitar-ne la gesti\u00f3.</p> </li> <li>Assignaci\u00f3: assignaci\u00f3 de la incid\u00e8ncia a un o m\u00e9s membres del projecte.</li> <li>Refer\u00e8ncies: en una incid\u00e8ncia es poden referenciar altres incid\u00e8ncies,     o es pot veure si aquesta incid\u00e8ncia ha segut referenciada en altres llocs.</li> <li>Pull Requests: si la incid\u00e8ncia est\u00e0 relacionada amb un Forks i Pull Requests.</li> </ul> <p>Una vegada finalitzada la resoluci\u00f3 de la incid\u00e8ncia, aquesta pot ser tancada per l'usuari que l'ha oberta o per un membre del projecte.</p>","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/01_gestio_projectes/#github-projects","title":"GitHub Projects","text":"<p>Els projectes de GitHub \u00e9s una eina de gesti\u00f3 de tasques que permet organitzar, classificar i prioritzar les tasques d'un projecte.</p> <p>Projectes en aquest repositori</p> <p>Podeu accedir al projectes d'aquest repositori mitjan\u00e7ant la secci\u00f3 \"Projects\" del men\u00fa superior o en aquest enlla\u00e7.</p> <p></p> <p>Figura 3. Exemple de projecte en un repositori de GitHub</p> <p>Els projectes estan organitzats en diferents pestanyes, que inclouen diferents vistes i organitzaci\u00f3 de les tasques:</p> <ul> <li>Backlog: un tauler Kanban amb les tasques pendents organitzades per columnes.</li> <li>Current iteration: tasques que s'han planificat per a la iteraci\u00f3 o Sprint actual.</li> <li>Roadmap: un diagrama de Gantt amb les tasques planificades al llarg del temps.</li> <li>Team planning: Mostra una vista m\u00e9s detallada de cada tasca, organitzades per estat, prioritat i assignaci\u00f3.</li> <li>My items: Semblant a la vista de \"Team planning\", per\u00f2 mostra nom\u00e9s les tasques assignades a l'usuari.</li> </ul> <p>Cada tasca es crea com un esborrany, que pot ser convertida a una incid\u00e8ncia en el repositori.</p> <p>Cada tasca cont\u00e9 la mateixa informaci\u00f3 que una incid\u00e8ncia, per\u00f2 a m\u00e9s, es pot especificar:</p> <ul> <li>La persona assignada.</li> <li>La prioritat.</li> <li>La mida.</li> <li>L'estimaci\u00f3 de temps.</li> <li>La data d'inici</li> <li>La data de finalitzaci\u00f3.</li> <li>La iteraci\u00f3 a la que pertany.</li> </ul> <p></p> <p>Figura 4. Exemple de tasca en un projecte de GitHub</p>","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/01_gestio_projectes/#llancaments","title":"Llan\u00e7aments","text":"<p>Els llan\u00e7aments o Releases \u00e9s una funcionalitat que permet publicar versions del projecte.</p> <p>@TODO: Afegir exemple de llan\u00e7ament</p>","tags":["issues","discussions","projects","releases"]},{"location":"apunts/06_projectes/02_forks/","title":"Forks i Pull Requests","text":"","tags":["fork","pull request"]},{"location":"apunts/06_projectes/02_forks/#forks-i-pull-requests","title":"Forks i Pull Requests","text":"<p>Dins de les eines de col\u00b7laboraci\u00f3 que ofereixen els serveis d'allotjament de repositoris en l\u00ednia com  GitHub o  GitLab, hi ha dues funcionalitats clau:</p> <ul> <li> <p> Forks: permeten copiar un repositori d'un altre usuari o organitzaci\u00f3 com a propi.</p> <p>En aquesta c\u00f2pia, l'usuari pot realitzar canvis, afegir funcionalitats o corregir errors sense afectar el repositori original.</p> <p>El fork queda enlla\u00e7at amb el repositori original, de manera que es pot mantindre sincronitzat si el repositori original es modifica.</p> </li> <li> <p> Pull Requests: permeten sol\u00b7licitar la incorporaci\u00f3 de canvis d'un repositori a un altre.</p> <p>Si un usuari ha realitzat canvis en un fork i vol que aquests canvis es incorporin al repositori original, pot enviar una sol\u00b7licitud de pull request. Aquesta sol\u00b7licitud ser\u00e0 revisada pels propietaris del repositori original, que podran acceptar-la o rebutjar-la.</p> </li> </ul> <p>Aquestes dues funcionalitats s\u00f3n essencials per a la col\u00b7laboraci\u00f3 en projectes de desenvolupament de programari de manera distribu\u00efda i col\u00b7laborativa, sobretot en projectes de  codi obert.</p>","tags":["fork","pull request"]},{"location":"apunts/06_projectes/02_forks/#forks","title":"Forks","text":"<p>Una bifurcaci\u00f3 o fork \u00e9s una c\u00f2pia d'un repositori que pertany a un usuari o organitzaci\u00f3 com a propi.</p> <p>En el teu fork pots realitzar qualsevol canvi com:</p> <ul> <li>Corregir errors.</li> <li>Afegir funcionalitats.</li> <li>Millorar la documentaci\u00f3.</li> <li>Adaptar el codi a les teves necessitats.</li> </ul> <p>Un fork sempre est\u00e0 enlla\u00e7at amb el repositori original, de manera que es si es realitzen canvis en el repositori original, pots decidir incorporar-lo al teu fork.</p> <p>Exemple de fork</p> <p>El repositori <code>pymdownx</code> \u00e9s una col\u00b7lecci\u00f3 d'extensions per a Python Markdown, que ve inclosa en aquest lloc web.</p> <p></p> <p>Figura 1. Repositori <code>pymdownx</code> original</p> <p>Per a poder realitzar canvis en aquesta col\u00b7lecci\u00f3 d'extensions, s'ha realitzat un fork del repositori original.</p> <p></p> <p>Figura 2. Repositori <code>pymdownx</code> bifurcat</p> <p>Per realitzar un fork d'un repositori, cal accedir a la p\u00e0gina del repositori i fer clic al bot\u00f3  Fork que apareix a la part superior dreta.</p> <p>Creaci\u00f3 d'un fork</p> <p>Vegem el men\u00fa de creaci\u00f3 d'un fork en el repositori <code>MkDocs</code>.</p> <p></p> <p>Figura 3. Creaci\u00f3 d'un fork en el repositori <code>MkDocs</code></p>","tags":["fork","pull request"]},{"location":"apunts/06_projectes/02_forks/#pull-requests","title":"Pull Requests","text":"<p>Una Sol\u00b7licitud de Incorporaci\u00f3 o Pull Request (PR) \u00e9s una sol\u00b7licitud per a incorporar canvis a un repositori.</p> <p>Els PR poden ser utilitzats per a:</p> <ul> <li>Incorporar canvis d'un fork a un repositori original.</li> <li>Incorporar canvis d'una branca a una altra branca.</li> </ul> <p>Aquesta funcionalitat es essencial per a la col\u00b7laboraci\u00f3 en projectes, especialment els de  codi obert. A m\u00e9s, aquesta funcionalitat pot ser implementada dins d'una estrat\u00e8gia de ramificaci\u00f3.</p> <p>A un PR es pot afegir informaci\u00f3 com:</p> <ul> <li>T\u00edtol i descripci\u00f3 dels canvis.</li> <li>Comentaris per als revisors.</li> <li>Refer\u00e8ncies a tasques o Incid\u00e8ncies.</li> </ul> <p>A m\u00e9s, es pot consultar:</p> <ul> <li>Els canvis realitzats.</li> <li>Els fitxers modificats.</li> <li>Les [[actions|comprovacions autom\u00e0tiques]]{:target=\"_blank\"} realitzades.</li> </ul> <p>Exemple de Pull Request</p> <p>En el repositori <code>pymdownx</code> s'ha creat i fusionat un PR per a afegir una nova extensi\u00f3.</p> <p></p> <p>Figura 4. Pull Request per a afegir una nova extensi\u00f3 a <code>pymdownx</code></p> <p>Per crear un PR, cal accedir al teu fork o branca i fer clic al bot\u00f3  Pull Request.</p> <p>En el proc\u00e9s de creaci\u00f3 d'un PR, es mostrar\u00e0 una pantalla on es compararan els canvis realitzats amb la branca de dest\u00ed i es podr\u00e0 afegir informaci\u00f3 addicional com el t\u00edtol i la descripci\u00f3.</p> <p>Creaci\u00f3 d'un Pull Request</p> <p>A la branca <code>feature/time-range</code> del meu fork podem crear un PR per a incorporar els canvis al repositori original.</p> <p></p> <p>Figura 5. Creaci\u00f3 d'un Pull Request</p> <p>En la pantalla de creaci\u00f3 d'un PR es poden veure els canvis realitzats en la branca <code>feature/time-range</code> respecte a la branca de dest\u00ed <code>verion3</code>.</p> <p></p> <p>Figura 6. Comparaci\u00f3 de canvis en un Pull Request</p>","tags":["fork","pull request"]},{"location":"apunts/06_projectes/02_forks/#flux-de-treball","title":"Flux de treball","text":"<p>Amb aquestes dues funcionalitats, es pot establir un flux de treball per a la col\u00b7laboraci\u00f3 en projectes de desenvolupament de programari.</p> <p></p> <p>Figura 7. Estructura de treball amb Forks i Pull Requests</p> <p>Aquest flux de treball pot ser el seg\u00fcent:</p> <ol> <li>Realitzar un fork del repositori original.</li> <li>Clonar el fork en el teu entorn de desenvolupament.</li> <li>Crear una branca per a realitzar els canvis.</li> <li>Realitzar els canvis en la branca.</li> <li>Publicar la branca en el fork.</li> <li>Crear un PR per a incorporar els canvis al repositori original.</li> <li>Revisar i debatre els canvis amb els revisors.</li> <li>Incorporar els canvis al repositori original.</li> <li>Actualitzar el fork amb els canvis del repositori original.</li> </ol>","tags":["fork","pull request"]},{"location":"apunts/07_educativa/01_educativa/","title":"GitHub com a plataforma educativa","text":"","tags":["GitHub Classroom","organitzacions"]},{"location":"apunts/07_educativa/01_educativa/#gestio-de-projectes","title":"Gesti\u00f3 de projectes","text":"","tags":["GitHub Classroom","organitzacions"]}]}