{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#objectius","title":"Objectius","text":"<ul> <li>Con\u00e8ixer els conceptes b\u00e0sics de control de versions mitjan\u00e7ant Git i el seu \u00fas en el context del desenvolupament de programari.</li> <li>Aprendre a utilitzar Git per a gestionar projectes de desenvolupament de programari.</li> <li>Con\u00e8ixer i utilitzar plataformes de desenvolupament col\u00b7laboratiu com GitHub.</li> <li>Con\u00e8ixer i utilitzar eines de gesti\u00f3 de projectes proporcionades per GitHub.</li> <li>Promoure la utilitzaci\u00f3 de Git i GitHub en l\u2019aula com a eina de treball col\u00b7laboratiu.</li> </ul>"},{"location":"#continguts","title":"Continguts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git<ul> <li>Instal\u00b7laci\u00f3.</li> <li>Configuraci\u00f3.</li> <li>Estructura d'un repositori.</li> <li>Flux de treball.</li> <li>Inicialitzaci\u00f3 d'un repositori.</li> <li>Realitzaci\u00f3 de canvis.</li> </ul> </li> <li>Bloc 2: Branques<ul> <li>Creaci\u00f3 de branques.</li> <li>Navegar entre branques.</li> <li>Sincronitzaci\u00f3 de branques.</li> <li>Fusi\u00f3 de branques (<code>merge</code>).</li> <li>Canvi de base (<code>rebase</code>).</li> <li>Resoluci\u00f3 de conflictes.</li> </ul> </li> <li>Bloc 3: Remots<ul> <li>Creaci\u00f3 d'un repositori remot a GitHub.</li> <li>Configurar un repositori remot.</li> <li>M\u00e8todes d'autenticaci\u00f3.</li> <li>Associaci\u00f3 entre branques locals i remotes.</li> <li>Publicaci\u00f3 i incorporaci\u00f3 de canvis.</li> <li>Clonaci\u00f3 d'un repositori remot.</li> </ul> </li> <li>Bloc 4: Estrat\u00e8gies de ramificaci\u00f3<ul> <li>GitFlow.</li> </ul> </li> <li>Bloc 5: Gesti\u00f3 de projectes<ul> <li>Organitzacions a GitHub.</li> <li>GitHub Projects.</li> <li>Forks i Pull Requests.</li> </ul> </li> </ul>"},{"location":"#dirigit-a","title":"Dirigit a","text":"<ul> <li>Professorat de la fam\u00edlia d'Inform\u00e0tica i Comunicacions.</li> </ul>"},{"location":"apunts/","title":"Apunts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git</li> <li>Bloc 2: Branques</li> <li>Bloc 3: Remots</li> <li>Bloc 4: Estrat\u00e8gies de ramificaci\u00f3</li> <li>Bloc 5: Gesti\u00f3 de projectes</li> </ul>"},{"location":"apunts/01_introduccio/","title":"Bloc 1: Introducci\u00f3 a Git","text":"","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#que-es-git","title":"Qu\u00e8 \u00e9s Git?","text":"<p>Git \u00e9s un sistema de control de versions lliure i distribu\u00eft dissenyat per gestionar xicotets i grans projectes amb rapidesa i efici\u00e8ncia. L'objectiu principal de Git \u00e9s controlar i gestionar els canvis realitzats en una enorme quantitat de fitxers d'una manera f\u00e0cil i eficient.</p> <p>Git va ser dissenyat en 2005 per Linux Torvalds, creador del kernel del sistema operatiu Linux, i des d'aleshores, s'ha convertit en una eina fonamental i imprescindible en la gesti\u00f3 de codi font en projectes col\u00b7laboratius.</p> <p>Git est\u00e0 basat en repositoris, que s'inicialitzen en un directori concret i contenen tota la informaci\u00f3 dels canvis realitzats en tot l'arbre de directoris i fitxers a partir d'aquest directori.</p> <p>Els principals objectius i caracter\u00edstiques de Git s\u00f3n:</p> <ul> <li>Control de versions: Git realitza un seguiment de les modificacions als arxius al llarg del temps,     la qual cosa permet als desenvolupadors vore i recuperar versions anteriors del seu codi.     Aquesta caracter\u00edstica \u00e9s essencial per a treballar en equips i per a solucionar problemes o errors.</li> <li>Distribu\u00eft: Cada c\u00f2pia d'un repositori Git cont\u00e9 tot l'historial de canvis i pot operar de manera independent.     Aix\u00f2 facilita el treball fora de l\u00ednia i la col\u00b7laboraci\u00f3 en equips distribu\u00efts.</li> <li>Branca i fusi\u00f3: Git facilita la creaci\u00f3 de branques (branching) per a desenvolupar caracter\u00edstiques     o solucionar problemes sense afectar la branca principal.     Despr\u00e9s, pots fusionar (merge) les branques de nou en la branca principal quan estiguen a punt.</li> <li>Gesti\u00f3 de conflictes: Git ofereix eines per a gestionar conflictes en cas que dues o m\u00e9s persones hagen realitzat     canvis en la mateixa part del codi.     Els desenvolupadors poden resoldre aquests conflictes manualment.</li> <li>Col\u00b7laboraci\u00f3: Git facilita la col\u00b7laboraci\u00f3 en projectes de codi obert o en equips,     ja que permet a m\u00faltiples persones treballar en el mateix projecte de manera eficient.     Plataformes com GitHub, GitLab i Bitbucket s'utilitzen comunment per a allotjar repositoris Git en l\u00ednia i col\u00b7laborar en projectes.</li> <li>Codi obert i gratu\u00eft: Git \u00e9s de codi obert i gratu\u00eft, la qual cosa significa que qualsevol pot utilitzar-lo sense cost i contribuir al desenvolupament de l'eina.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Git est\u00e0 disponible a https://git-scm.com/ per a Windows, macOS i Linux.</p> UbuntuWindows <pre><code>sudo apt update\nsudo apt install git\n</code></pre> <p>Descarrega i executa l'instal\u00b7lador de Git des de https://git-scm.com/</p> <p>Una vegada instal\u00b7lat, pots utilitzar la consola Git Bash. \u00c9s una terminal basada l'int\u00e8rpret Bash, que et permetr\u00e0 realitzar les comandes de Git en la consola.</p> <p>Per defecte, Git utilitza l'editor <code>ViM</code>, un editor de text per terminal molt potent, per\u00f2 dif\u00edcil i poc intu\u00eftiu per treballar.</p> <p>Si desitgeu canviar l'editor per defecte, podeu utilitzar la seg\u00fcent comanda des de la consola:</p> <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre> <p>Editors de text</p> WindowsLinuxMultiplataforma <ul> <li><code>notepad</code>. Ve instal\u00b7lat per defecte.</li> <li>Notepad++.</li> </ul> <ul> <li><code>gedit</code>. Ve instal\u00b7lat per defecte en Ubuntu.</li> <li><code>nano</code>. Editor de text b\u00e0sic per terminal.</li> <li><code>vim</code>. Editor de text avan\u00e7at per terminal.<ul> <li><code>:w</code> per guardar.</li> <li><code>:q</code> per eixir.</li> </ul> </li> </ul> <ul> <li>Visual Estudio Code</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#per-que-la-terminal","title":"Per qu\u00e8 la terminal?","text":"<p>En aquest material, utilitzarem la terminal per a interactuar amb Git, per\u00f2 aix\u00f2 no significa que siga l'\u00fanica manera de fer-ho. De fet, pr\u00e0cticament tots els entorns de desenvolupament moderns tenen integraci\u00f3 amb Git, la qual cosa permet realitzar les mateixes operacions que proporciona la terminal, per\u00f2 de manera m\u00e9s visual i intu\u00eftiva.</p> <p>No obstant aix\u00f2, \u00e9s important con\u00e9ixer com funcionen les comandes de Git en la terminal, per diferents raons:</p> <ul> <li>Portabilitat: La terminal \u00e9s un entorn com\u00fa en tots els sistemes operatius i en qualsevol entorn de desenvolupament.</li> <li>Flexibilitat: La terminal permet realitzar operacions m\u00e9s avan\u00e7ades i personalitzades que les interf\u00edcies gr\u00e0fiques.</li> <li>Comprensi\u00f3: Permet entendre com funcionen les comandes de Git i els processos que realitza en el sistema.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#inicialitzacio-dun-repositori-git-init","title":"Inicialitzaci\u00f3 d'un repositori (<code>git init</code>)","text":"<p>Per a comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori en un directori concret. <pre><code>git init [&lt;directory&gt;]\n</code></pre></p> <ul> <li><code>directory</code>: Directori on es vol inicialitzar el repositori. Si no s'especifica, s'utilitza el directori actual.</li> </ul> <p>Aquesta comanda crea un directori ocult anomenat <code>.git</code> que cont\u00e9 tota la informaci\u00f3 relativa al Repositori Local.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git init</code>: https://git-scm.com/docs/git-init</p> <pre><code>joapuiib@fp:~ $ mkdir git_introduccio\njoapuiib@fp:~ $ cd git_introduccio\njoapuiib@fp:~/git_introduccio $ ls -a # (1)!\n.  ..\njoapuiib@fp:~/git_introduccio $ git init\nhint: Using 'master' as the name for the initial branch. This default branch name\nhint: is subject to change. To configure the initial branch name to use in all\nhint: of your new repositoris, which will suppress this warning, call:\nhint:\nhint: git config --global init.dafaultBranch &lt;name&gt;\nhint:\nhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\nhint: 'development'. The just-created branch can be renamed via this command:\nhint:\nhint: git branch -m &lt;name&gt;\nInitialized empty Git repository in /home/joapuiib/git_introduccio/.git/\njoapuiib@fp:~/git_introduccio (master) $ git branch -m main\njoapuiib@fp:~/git_introduccio (main) $ ls -a # (2)!\n.  ..  .git/\njoapuiib@fp:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nNothing to commit (create/copy files and use \"git add\" to track)\n</code></pre> <ol> <li>L'opci\u00f3 <code>-a</code> mostra tots els fitxers, inclosos els ocults que comencen amb un punt.</li> <li>S'ha creat el directori ocult <code>.git</code> que cont\u00e9 tota la informaci\u00f3 del repositori.</li> </ol> <p>L'ordre <code>git status</code> ens mostra l'estat actual del nostre repositori. Podem observar que estem en la branca <code>main</code> i que de moment no s'ha realitzat cap canvi.</p> <p>Nota</p> <p>S'ha canviat el nom de la branca principal de <code>master</code> a <code>main</code> per a seguir les recomanacions de la comunitat de desenvolupament.</p> <p>Vegeu: Regarding Git and Branch Naming</p>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#estructura-dun-repositori-de-git","title":"Estructura d'un repositori de Git","text":"<p>En aquesta introducci\u00f3, ens centrarem en com funcionen els repositoris de Git d'una manera local, on encara no haurem connectat cap repositori remot.</p> <p>Abans que res, hem de con\u00e9ixer l'estructura d'un repositori de Git.</p> Figura 1: Components d'un repositori de Git. <p>En la figura anterior podem observar el que es coneix com Entorn de desenvolupament o Development Enviorment. Aquesta part est\u00e0 present localment en el teu dispositiu on realitzar\u00e0s els canvis i desenvolupament del teu projecte.</p> <p>D'una altra banda, est\u00e0 el Repositori Remot, que normalment s'allotja a un servidor accessible per tots els desenvolupadors.</p> <p>Dins de l'Entorn de desenvolupament trobem els seg\u00fcents components:</p> <ul> <li>Directori de treball o Working directory: Directori o carpeta del sistema on s'emmagatzema localment     els continguts del repositori.</li> <li>\u00c0rea de preparaci\u00f3 o Staging Area: \u00c0rea que s'utilitza per indicar quins canvis volen ser confirmats.</li> <li>Repositori local o Local repository: Repositori emmagatzemat localment on es queden registrats totes les versions     i canvis realitzats en els fitxers del repositori, aix\u00ed com la informaci\u00f3 de les branques i les etiquetes.</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#flux-de-treball","title":"Flux de treball","text":"<p>Quan treballes amb un projecte de Git, els canvis es realitzen sobre el Directori de treball. Aquests canvis poden ser:</p> <ul> <li>Crear un nou fitxer. El nou fitxer comen\u00e7a en l'estat Untracked, \u00e9s a dir, no est\u00e0 sotm\u00e8s a seguiment per Git.</li> <li>Modificar un fitxer amb seguiment. El fitxer modificat es trobar\u00e0 en l'estat Modified.</li> <li>Eliminar un fitxer amb seguiment. El fitxer eliminat es trobar\u00e0 en l'estat Deleted.</li> </ul> <p>Si executem l'ordre <code>git status</code>, ens mostrar\u00e0 l'estat actual dels fitxers amb els tres estats anteriors de color roig.</p> <p>Aquests canvis no formen part del repositori. Abans, cal afegir-los a l'\u00c0rea de preparaci\u00f3 amb la comanda <code>git add</code>, que canviar\u00e0 l'estat dels fitxers Staged (mostrat en color verd amb <code>git status</code>).</p> <p>Per \u00faltim, tots els canvis de l'\u00c0rea de preparaci\u00f3 es poden confirmar i fer efectius en el Repositori local amb la comanda <code>git commit</code>.</p> Figura 2: Flux de treball en un repositori de Git. <p>Info</p> <p>La comanda <code>git restore</code> es presenta a l'apartat Descartar canvis.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de:</p> <ul> <li><code>git status</code>: https://git-scm.com/docs/git-status</li> <li><code>git add</code>: https://git-scm.com/docs/git-add</li> <li><code>git commit</code>: https://git-scm.com/docs/git-commit</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#afegir-fitxers-a-larea-de-preparacio-git-add","title":"Afegir fitxers a l'\u00c0rea de Preparaci\u00f3 (<code>git add</code>)","text":"<p>Afegim el primer fitxer <code>README.md</code> al nostre repositori.</p> <p>Info</p> <p>\u00c9s recomanable crear un fitxer <code>README.md</code> en tots els projectes per a descriure el seu prop\u00f2sit, com s'utilitza i qualsevol altra informaci\u00f3 rellevant.</p> <pre><code>joapuiib@fp:~/git_introduccio (main) $ echo \"# 01 - Introducci\u00f3 a Git\" &gt; README.md\njoapuiib@fp:~/git_introduccio (main) $ echo \"Estem aprenent a utilitzar Git!\" &gt;&gt; README.md\njoapuiib@fp:~/git_introduccio (main) $ cat README.md\n# 01 - Introducci\u00f3 a Git\nEstem aprenent a utilitzar Git!\njoapuiib@fp:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nNothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>S'ha creat el fitxer <code>README.md</code> i s'ha afegit el seu contingut. Aquest fitxer resideix en el Directori de treball.</p> <p>La comanda <code>git status</code> ens mostra que no s'est\u00e0 realitzant cap seguiment del fitxer <code>README.md</code>, que es troba en l'estat Untracked.</p> Figura 3: Fitxer sense seguiment (untracked). <p>Per afegir els canvis al nostre repositori, el seg\u00fcent pas \u00e9s afegir els canvis a l'\u00c0rea de Preparaci\u00f3 amb l'ordre <code>git add</code>. Aquesta comanda permet especificar quins canvis es desitja afegir.</p> <p>Info</p> <pre><code>git add &lt;path&gt;\n</code></pre> <ul> <li><code>path</code>: Ruta del fitxer o directori que es vol afegir a l'\u00c0rea de Preparaci\u00f3.</li> </ul> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git add README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\n</code></pre> <p>Vegem com el fitxer <code>README.md</code> ha passat a l'estat Staged i est\u00e0 preparat per a ser confirmat.</p> Figura 4: Fitxer a l'\u00e0rea de preparaci\u00f3.","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#confirmar-canvis-git-commit","title":"Confirmar canvis (<code>git commit</code>)","text":"<p>Una vegada afegits tots els canvis a l'\u00c0rea de Preparaci\u00f3, ja podem confirmar-los mitjan\u00e7ant l'ordre <code>git commit</code>.</p> <pre><code>git commit [-a] [-m \"&lt;message&gt;\"]\n</code></pre> <ul> <li><code>-a</code>: Opcional. Afegeix tots els fitxers modificats i eliminats a l'\u00c0rea de Preparaci\u00f3 (sense necessitat de <code>git add</code>).</li> <li><code>-m \"&lt;message&gt;\"</code>: Opcional. Missatge que descriu el canvi realitzat en el <code>commit</code>.</li> </ul> <p>Warning</p> <p>Si no s'especifica el missatge amb <code>-m</code>, s'obrir\u00e0 l'editor per defecte(1) per a introduir el missatge del <code>commit</code>.</p> <ol> <li><code>ViM</code> per defecte. Pot ser configurat:      <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre></li> </ol> Figura 5: Estat del repositori de Git abans de fer un `commit`. <p>Aquesta ordre crea un nou <code>commit</code>, que \u00e9s una instant\u00e0nia de l'estat actual dels fitxers del repositori i que cont\u00e9 tota la informaci\u00f3 relativa als canvis realitzats.</p> <p>Cadascun dels <code>commit</code> cont\u00e9 la seg\u00fcent informaci\u00f3:</p> <ul> <li>Autor: Persona que ha realitzat el <code>commit</code>.</li> <li>Correu electr\u00f2nic: Correu electr\u00f2nic de l'autor.</li> <li>Data: Data i hora en qu\u00e8 s'ha realitzat el <code>commit</code>.</li> <li>Missatge: Descripci\u00f3 dels canvis realitzats en el <code>commit</code>.</li> <li>Identificador o <code>hash</code>: Codi \u00fanic generat autom\u00e0ticament que identifica el <code>commit</code>.</li> <li>Canvis: Llista de fitxers modificats, afegits o eliminats en el <code>commit</code> i els canvis realitzats en ells respecte de la versi\u00f3 anterior.</li> </ul> <p>Per tant, abans de realitzar un <code>commit</code>, \u00e9s necessari configurar el nom i el correu electr\u00f2nic de l'autor.</p> <pre><code>git config --global user.name &lt;name&gt;\ngit config --global user.email &lt;email&gt;\n</code></pre> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git config --global user.name \"Joan Puigcerver Ib\u00e1\u00f1ez\"\njoapuiib@FP:~/git_introduccio (main) $ git config --global user.email \"j.puigcerveribanez@edu.gva.es\"\n</code></pre> <p>Amb aquesta informaci\u00f3 configurada, ja podem realitzar el nostre primer <code>commit</code>.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\njoapuiib@FP:~/git_introduccio (main) $ git commit -m \"Added README.md\"\n[main (root-commit) 8e70293] Added README.md\n 1 file changed, 2 insertions(+)\n create mode 100644 README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nnothing to commit, working tree clean\n</code></pre> <p>Vegem que l'estat del nostre repositori ha canviat i ja no hi ha canvis pendents de confirmar. A m\u00e9s, s'ha creat el primer <code>commit</code> amb el missatge <code>Added README.md</code> i identificador <code>8e70293</code>.</p> Figura 6: Estat del repositori de Git despr\u00e9s de fer un `commit`. <p>Podem consultar la informaci\u00f3 del nou <code>commit</code> amb l'ordre <code>git show</code>.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git show 8e70293\ncommit 8e702933d5dbec9ee71100a1599ae4491085e1aa (HEAD -&gt; main)\nAuthor: Joan Puigcerver Ib\u00e1\u00f1ez &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Fri Oct 13 16:06:59 2023 +0200\n\n    Added README.md\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..6d747b3\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1,2 @@\n+# 01 - Introducci\u00f3 a Git\n+Estem aprenent a utilitzar Git!\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#diferencies-entre-versions-git-diff","title":"Difer\u00e8ncies entre versions (<code>git diff</code>)","text":"<p>Una ferramenta molt \u00fatil de Git \u00e9s <code>git diff</code>, que permet comparar les difer\u00e8ncies entre els canvis realitzats en el Directori de treball o l'\u00c0rea de Preparaci\u00f3 respecte del Repositori local.</p> <p>La sintaxi amb les opcions b\u00e0siques es: <pre><code>git diff [--staged] [&lt;path&gt;]\n</code></pre></p> <ul> <li><code>--staged</code>: Opcional. Mostra les difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local.     Si no s'indica, es compararan les difer\u00e8ncies entre el Directori de treball i el Repositori local.</li> <li><code>&lt;path&gt;</code>: Opcional. Fitxer o directori sobre el qual es vol comparar les difer\u00e8ncies.     Si no s'indica, es compararan totes les difer\u00e8ncies.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git diff</code>: https://git-scm.com/docs/git-diff</p> Figura 7: Resum de `git diff`. <p>Difer\u00e8ncies entre el Directori de treball i el Repositori local</p> <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> del Directori de treball i el Repositori local.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ echo \"Aquesta \u00e9s una l\u00ednia nova\" &gt;&gt; README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njoapuiib@FP:~/git_introduccio (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> <p>Difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local</p> <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> de l'\u00c0rea de Preparaci\u00f3 i el Repositori local.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git add README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   README.md\n\njoapuiib@FP:~/git_introduccio (main) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> <p>Interpretaci\u00f3 de <code>git diff</code></p> <p>El format de les l\u00ednies de <code>git diff</code> \u00e9s el seg\u00fcent:</p> <ul> <li><code>diff --git a/README.md b/README.md</code>: Mostra els fitxers comparats.<ul> <li><code>a/README.md</code>: Fitxer original.</li> <li><code>b/README.md</code>: Fitxer modificat.</li> </ul> </li> <li><code>index 6d747b3..f3b3b3e 100644</code>: Mostra el hash dels fitxers comparats i els permisos.</li> <li><code>--- a/README.md</code>: Mostra la ruta del fitxer original.</li> <li><code>+++ b/README.md</code>: Mostra la ruta del fitxer modificat.</li> <li><code>@@ -1,2 +1,3 @@</code>: Mostra la posici\u00f3 de les l\u00ednies modificades.<ul> <li><code>-1,2</code>: Els canvis comen\u00e7en a la l\u00ednia 1 i afecten 2 l\u00ednies en el fitxer original.</li> <li><code>+1,3</code>: Els canvis comen\u00e7en a la l\u00ednia 1 i afecten 3 l\u00ednies en el fitxer modificat.</li> </ul> </li> </ul> <p>Despr\u00e9s, es mostren les l\u00ednies modificades:</p> <ul> <li><code>-</code>: L\u00ednia eliminada.</li> <li><code>+</code>: L\u00ednia afegida.</li> </ul> <p>En l'exemple anterior, s'ha afegit la l\u00ednia <code>Aquesta \u00e9s una l\u00ednia nova</code> al fitxer <code>README.md</code>.</p>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#descartar-canvis-git-restore","title":"Descartar canvis (<code>git restore</code>)","text":"<p>Una altra ferramenta \u00fatil de Git \u00e9s <code>git restore</code>, que permet descartar els canvis realitzats en els fitxers del Directori de treball o l'\u00c0rea de Preparaci\u00f3.</p> <p>La sintaxi amb les opcions b\u00e0siques \u00e9s: <pre><code>git restore [--staged] &lt;path&gt;\n</code></pre></p> <ul> <li><code>--staged</code>: Opcional. Descarta els canvis realitzats en l'\u00c0rea de Preparaci\u00f3.     Si no s'indica, es descartaran els canvis realitzats en el Directori de treball.</li> <li><code>&lt;path&gt;</code>: Opcional. Fitxer o directori sobre el qual es vol descartar els canvis.</li> </ul> <p>Podeu consultar la Figura 2 per a veure un resum del comportament de <code>git restore</code>.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git restore</code>: https://git-scm.com/docs/git-restore</p> <p>Perill</p> <p>La comanda <code>git restore</code> descarta els canvis realitzats en els fitxers sense possibilitat de recuperar-los.</p> <p>Descartar canvis en l'\u00c0rea de Preparaci\u00f3</p> <p>Continuant amb l'exemple anterior, descartem els canvis realitzats en el fitxer <code>README.md</code> de l'\u00c0rea de Preparaci\u00f3.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   README.md\n\njoapuiib@FP:~/git_introduccio (main) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\njoapuiib@FP:~/git_introduccio (main) $ git restore --staged README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n</code></pre> <p>Descartar canvis en el Directori de treball</p> <p>Descartem els canvis realitzats en el fitxer <code>README.md</code> del Directori de treball.</p> <p>Danger</p> <p>Aquesta comanda descartar\u00e0 els canvis realitzats en el fitxer <code>README.md</code> sense possibilitat de recuperar-los.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njoapuiib@FP:~/git_introduccio (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\njoapuiib@FP:~/git_introduccio (main) $ git restore README.md\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nnothing to commit, working tree clean\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#historic-de-canvis-git-log","title":"Hist\u00f2ric de canvis (<code>git log</code>)","text":"<p>Git registra tots els canvis confirmats (<code>commit</code>) en el Repositori local. L'hist\u00f2ric de canvis es pot consultar amb l'ordre <code>git log</code>.</p> <pre><code>git log [options]\n</code></pre> <p>Documentaci\u00f3</p> <p>Consulta totes les opcions a la documentaci\u00f3 oficial de <code>git log</code>: https://git-scm.com/docs/git-log</p> <p>Hist\u00f2ric de canvis</p> <p>Modifiquem novament el fitxer <code>README.md</code> i realitzem un nou <code>commit</code>.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ echo \"Aquesta \u00e9s una altra l\u00ednia\" &gt;&gt; README.md\njoapuiib@FP:~/git_introduccio (main) $ git commit -a -m \"Added another line to README.md\"# (1)!\n[main c9fc6c8] Added another line to README.md\n 1 file changed, 1 insertions(+)\n</code></pre> <ol> <li>Amb <code>-a</code> afegim tots els canvis realitzats al fitxer <code>README.md</code> a l'\u00c0rea de Preparaci\u00f3 sense necessitat de <code>git add</code>.</li> </ol> <p>Consultem l'hist\u00f2ric de canvis amb <code>git log</code>.</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git log\ncommit c9fc6c856c2d52744b85a6f8d92feac496e60bd6 (HEAD -&gt; main)\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Mon Oct 16 11:43:20 2023 +0200\n\n    Added another line to README.md\n\ncommit 8e702933d5dbec9ee71100a1599ae4491085e1aa\nAuthor: Joan Puigcerver &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Fri Oct 13 16:06:59 2023 +0200\n\n    Added Readme.md\n</code></pre> <p>S'observa tota la informaci\u00f3 dels <code>commit</code> realitzats, com l'autor, la data, el missatge i l'identificador.</p> <p>L'ordre <code>git log</code> admet moltes opcions per a personalitzar com es mostren els <code>commit</code> i la seua informaci\u00f3.</p> <p>Una possible combicaci\u00f3 d'opcions per visualitzar l'hist\u00f2ric de canvis de manera m\u00e9s compacta i intu\u00eftiva \u00e9s:</p> <pre><code>git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n</code></pre> <p>Hist\u00f2ric de canvis compacte</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n* c9fc6c8 - (2 minutes ago) Added another line to README.md - Joan Puigcerver (HEAD -&gt; main)\n* 8e70293 - (3 days ago) Added Readme.md - Joan Puigcerver\n</code></pre> <p>No obstant aix\u00f2, no \u00e9s pr\u00e0ctic recordar aquesta comanda. Per aix\u00f2, podem configurar un alias per a simplificar la seua crida.</p> <pre><code>git config --global alias.lg \"log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\"\ngit config --global alias.lga \"lg --all\"\n</code></pre> <p>Hist\u00f2ric de canvis compacte amb \u00e0lias</p> <p>Despr\u00e9s de configurar l'\u00e0lias <code>git lg</code> per a l'ordre anterior, podem cridar-lo de la seg\u00fcent manera:</p> <pre><code>joapuiib@FP:~/git_introduccio (main) $ git lg\n* c9fc6c8 - (2 minutes ago) Added another line to README.md - Joan Puigcerver (HEAD -&gt; main)\n* 8e70293 - (3 days ago) Added README.md - Joan Puigcerver\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#configuracio-git-config","title":"Configuraci\u00f3 (<code>git config</code>)","text":"<p>Git permet configurar diferents par\u00e0metres per a personalitzar el seu comportament mitjan\u00e7ant l'ordre <code>git config</code>.</p> <pre><code>git config [--global] &lt;key&gt; &lt;value&gt;\n</code></pre> <ul> <li><code>--global</code>: Opcional. Configura el par\u00e0metre de manera global per a tots els repositoris.     Si no s'indica, la configuraci\u00f3 es realitzar\u00e0 \u00fanicament per al repositori actual.</li> </ul> <p>Fixa't</p> <p>Fixeu-vos que ja hem utilitzat aquesta comanda per configurar els seg\u00fcents aspectes:</p> <ul> <li>El nom (<code>user.name</code>) i el correu electr\u00f2nic (<code>user.email</code>) de l'autor dels <code>commit</code></li> <li>L'editor per defecte (<code>core.editor</code>).</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#fitxer-de-configuracio-gitconfig","title":"Fitxer de configuraci\u00f3 (<code>.gitconfig</code>)","text":"<p>La configuraci\u00f3 <code>--global</code> s'emmagatzema en el fitxer <code>.gitconfig</code>, situat del directori de l'usuari.</p> LinuxWindows <pre><code>/home/&lt;username&gt;/.gitconfig\n</code></pre> <pre><code>C:\\Users\\&lt;username&gt;\\.gitconfig\n</code></pre> <p>Exemple configuraci\u00f3</p> <pre><code>[core]\n    editor = vim # Editor per defecte\n\n[init]\n    defaultBranch = main # Nom de la branca principal per defecte\n\n[user]\n    name = Joan Puigcerver Ib\u00e1\u00f1ez\n    email = j.puigcerveribanez@edu.gva.es\n\n[alias]\n    lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'\n    lga = lg --all\n</code></pre>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#ignorar-fitxers-gitignore","title":"Ignorar fitxers (<code>.gitignore</code>)","text":"<p>En un projecte, hi ha fitxers que no volem incloure en el repositori, com arxius temporals, binaris o fitxers de configuraci\u00f3. Git permet ignorar aquests fitxers mitjan\u00e7ant el fitxer <code>.gitignore</code>, que cont\u00e9 una llista de patrons de fitxers els quals Git no tindr\u00e0 en compte.</p> <p>Aquest fitxer pot estar situat en qualsevol directori del repositori i Git ignorar\u00e0 per a tots els fitxers i subdirectoris d'aquest que complisquen algun dels patrons especificats.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>.gitignore</code>: https://git-scm.com/docs/gitignore</p> <p>Llista de patrons:</p> <ul> <li>https://git-scm.com/docs/gitignore#_pattern_format</li> <li>https://www.w3schools.com/git/git_ignore.asp?remote=github</li> </ul> <p>Exemple de <code>.gitignore</code></p> <pre><code># ignore ALL .log files\n*.log\n\n# ignore ALL files in ANY directory named temp\ntemp/\n</code></pre> <pre><code>joapuiib@FP:~/git_introduccio (main) $ touch temp/file.txt\njoapuiib@FP:~/git_introduccio (main) $ git status\nOn branch main\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        temp/file.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\njoapuiib@FP:~/git_introduccio (main) $ echo \"temp/\" &gt; .gitignore\njoapuiib@FP:~/git_introduccio (main) $ git status # (1)!\nOn branch main\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        .gitignore\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <ol> <li>El fitxer <code>temp/file.txt</code> no apareix en l'estat del repositori despr\u00e9s de crear el fitxer <code>.gitignore</code>.</li> </ol>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/01_introduccio/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://git-scm.com/book/en/v2</li> <li>https://github.com/UnseenWizzard/git_training</li> <li>https://www.theserverside.com/feature/Why-GitHub-renamed-its-master-branch-to-main</li> <li>https://stackoverflow.com/questions/35430584/how-is-the-git-hash-calculated</li> <li>https://en.wikipedia.org/wiki/Diff</li> </ul>","tags":["git add","git commit","git config","git diff","git init","git log","git status","git restore","gitconfig","gitignore"]},{"location":"apunts/02_branques/","title":"Bloc 2: Branques","text":"","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#introduccio","title":"Introducci\u00f3","text":"<p>Les branques s\u00f3n una de les caracter\u00edstiques m\u00e9s importants de Git, que permet el desenvolupament col\u00b7laboratiu i en paral\u00b7lel d'un projecte.</p> <p>Moltes de les estrat\u00e8gies de Git per desenvolupar projectes es basen a realitzar els canvis en branques independents que, una vegada acabades, s'integren en la branca principal. La branca principal d'un projecte originalment s'anomenava <code>master</code>, per\u00f2 \u00faltimament \u00e9s preferible utilitzar el nom <code>main</code> per evitar la nomenclatura master/slave (amo/esclau), que t\u00e9 connotacions racistes.</p> <p>Info</p> <p>S'ha canviat el nom de la branca principal de <code>master</code> a <code>main</code> per a seguir les recomanacions de la comunitat de desenvolupament.</p> <p>Vegeu: Regarding Git and Branch Naming</p> <p>Preparaci\u00f3 repositori d'exemple</p> <p>En aquest material treballarem sobre un nou repositori local.</p> <p>Inicialitzaci\u00f3: <pre><code>git init ~/git_branques\ncd ~/git_branques\necho \"# Bloc: Branques\" &gt; README.md\ngit add README.md\ngit commit -m \"T\u00edtol\"\n</code></pre></p> <pre><code>joapuiib@fp:~ $ git init ~/git_branques\nInitialized empty Git repository in /home/joapuiib/git_branques/.git/\njoapuiib@fp:~ $ cd ~/git_branques\njoapuiib@fp:~/git_branques (main) $ branch -m main # (1)!\njoapuiib@fp:~/git_branques (main) $ echo \"# Bloc: Branques\" &gt; README.md\njoapuiib@fp:~/git_branques (main) $ git add README.md\njoapuiib@fp:~/git_branques (main) $ git commit -m \"T\u00edtol\"\n[master (root-commit) 0b1b3b4] T\u00edtol\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njoapuiib@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <ol> <li>Canviem el nom de la branca principal a <code>main</code>.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#branques","title":"Branques","text":"<p>Una branca \u00e9s una l\u00ednia de desenvolupament independent. En Git, una branca \u00e9s un simple punter a un commit, que avan\u00e7a a mesura que es fan nous commits sobre aquesta.</p> Figura 1: Estructura de branques inicial. <p>Exemple</p> <p>L'estructura de branques inicial del repositori que utilitzarem en aquest material \u00e9s la seg\u00fcent \u00e9s el que es mostra a la Figura 1.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>Vegem que tenim un \u00fanic <code>commit</code> amb l'identificador <code>0b1b3b4</code>. A m\u00e9s, existeix una \u00fanica branca anomenada <code>main</code> que apunta a aquest <code>commit</code>.</p> <p>Tamb\u00e9 observem que el <code>HEAD</code> apunta a la branca <code>main</code>, indicant que \u00e9s la branca activa i que el Directori de Treball es troba en aquest estat.</p> <p>Es veur\u00e0 amb m\u00e9s detall a l'apartat Canviar de branca.</p> <p>La ordre <code>git branch</code> ens permet veure i manipular les branques d'un repositori.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git branch</code>: https://git-scm.com/docs/git-branch</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#mostrar-les-branques","title":"Mostrar les branques","text":"<p>Per mostrar les branques d'un repositori, utilitzem l'ordre: <pre><code>git branch [--list] [-a | --all] [-v | --verbose]\n</code></pre> L'ordre <code>git branch</code> mostra les branques si:</p> <ul> <li>No s'utilitza cap opci\u00f3.</li> <li>S'utilitza l'opci\u00f3 <code>--list</code>.</li> </ul> <p>M\u00e9s opcions:</p> <ul> <li><code>[-a | --all]</code>: Opcional. Mostra totes les branques,     incloent les remotes (es veur\u00e0 en el Bloc 3: Remots).</li> <li><code>[-v | --verbose]</code>: Opcional. Mostra m\u00e9s informaci\u00f3 de cada branca.</li> </ul> <p>Exemple</p> <p>Mostrem les branques del nostre repositori.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git branch\n* main\n</code></pre> <p>Vegem que tenim una \u00fanica branca anomenada <code>main</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#crear-una-branca","title":"Crear una branca","text":"<p>Per crear una nova branca, utilitzem l'ordre: <pre><code>git branch [-f | --force] &lt;nom&gt;\n</code></pre></p> <ul> <li><code>[-f | --force]</code>: Opcional. For\u00e7a la creaci\u00f3 de la branca.</li> <li><code>&lt;nom&gt;</code>: Nom de la nova branca.</li> </ul> <p>Aquesta ordre indicar\u00e0 amb un <code>*</code> la branca activa (on es troba el <code>HEAD</code>).</p> <p>Advert\u00e8ncia</p> <p>Si ja existeix una branca amb el mateix nom i no s'utilitza l'opci\u00f3 <code>-f</code> o <code>--force</code>, l'ordre mostrar\u00e0 un error i no es crear\u00e0 la branca.</p> <p>Exemple</p> <p>Creem la branca <code>docs</code>. <pre><code>joapuiib@fp:~/git_branques (main) $ git branch docs\njoapuiib@fp:~/git_branques (main) $ git branch\n* main\n  docs\njoapuiib@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main, docs)\n</code></pre></p> <p>Vegem que s'ha creat la branca <code>docs</code> que apunta al commit <code>0b1b3b4</code>. Vegem que la branca activa continua sent <code>main</code>.</p> <p> Figura 2: Estructura de branques despr\u00e9s de crear la branca <code>docs</code>. </p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#canviar-de-branca","title":"Canviar de branca","text":"<p>Existeixen dues ordres per canviar de branca, cadascuna amb la seva pr\u00f2pia sintaxi i opcions: <pre><code>git checkout &lt;nom&gt;\ngit switch &lt;nom&gt;\n</code></pre></p> <p>Originalment, s'utilitzava l'ordre <code>git checkout</code> per canviar de branca, per\u00f2 com que aquesta ordre t\u00e9 moltes altres funcions, s'ha introdu\u00eft l'ordre <code>git switch</code> a partir de la versi\u00f3 2.23 de Git per evitar confusions.</p> <p>Documentaci\u00f3</p> <ul> <li>Documentaci\u00f3 de la ordre <code>git checkout</code>: https://git-scm.com/docs/git-checkout</li> <li>Documentaci\u00f3 de la ordre <code>git switch</code>: https://git-scm.com/docs/git-switch</li> </ul> <p>Info</p> <p>M\u00e9s informaci\u00f3: Stack Overflow: What's the difference between 'git switch' and 'git checkout' &lt;branch&gt;?</p> <p>En qualsevol cas, canviar de branca significa moure el punter <code>HEAD</code> a la branca desitjada. El canvi de branca tamb\u00e9 implica modificar el contingut del Directori de Treball a l'estat del <code>commit</code> al qual apunta la branca.</p> <p>La Figura 1 mostra l'estat del repositori quan el <code>HEAD</code> apunta a la branca <code>main</code>. La Figura 3 mostra l'estat del repositori despr\u00e9s de canviar a la branca <code>docs</code>.</p> Figura 3: Estructura de branques despr\u00e9s de canviar a la branca <code>docs</code>. <p>Example</p> <p>Podeu observar com l'estat del repositori \u00e9s el mateix, ja que les dues branques apunten al mateix <code>commit</code>, per\u00f2 el <code>HEAD</code> apunta a la branca <code>docs</code>.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git branch\n* main\n  docs\njoapuiib@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main, docs)\njoapuiib@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\njoapuiib@fp:~/git_branques (main) $ git switch docs\nSwitched to branch 'docs'\njoapuiib@fp:~/git_branques (docs) $ git branch\n  main\n* docs\njoapuiib@fp:~/git_branques (docs) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; docs, main)\njoapuiib@fp:~/git_branques (docs) $ cat README.md\n# Bloc: Branques\n</code></pre>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#canvis-en-una-branca","title":"Canvis en una branca","text":"<p>Per fer canvis en una branca cal: - Situar-se en la branca on es vol fer el canvi (<code>git checkout</code> o <code>git switch</code>). - Realitzar els canvis desitjats. - Confirmar els canvis amb <code>git commit</code>.</p> <p>Quan es realitza un <code>commit</code> en una branca, el punter de la branca actual (<code>HEAD</code>) s'avan\u00e7a al nou <code>commit</code>.</p> <p>Exemple</p> <p>Afegim un subt\u00edtol al nostre fitxer <code>README.md</code> a la branca <code>docs</code>.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout docs\njoapuiib@fp:~/git_branques (docs) $ echo &gt;&gt; README.md\njoapuiib@fp:~/git_branques (docs) $ echo \"## Documentaci\u00f3\" &gt;&gt; README.md\njoapuiib@fp:~/git_branques (docs) $ git diff\ndiff --git a/README.md b/README.md\nindex 4efb7a9..3e27f51 100644\n--- a/README.md\n+++ b/README.md\n@@ -1 +1,3 @@\n # Bloc: Branques\n+\n+## Documentaci\u00f3\njoapuiib@fp:~/git_branques (docs) $ git add README.md\njoapuiib@fp:~/git_branques (docs) $ git commit -m \"Subt\u00edtol documentaci\u00f3\"\n[docs 1b2c5d6] Subt\u00edtol documentaci\u00f3\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (docs) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (HEAD -&gt; docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (main)\n</code></pre> <p>Vegem que la branca <code>docs</code> ha avan\u00e7at al nou <code>commit</code> <code>1b2c5d6</code>, mentre que la branca <code>main</code> continua apuntant al <code>commit</code> <code>0b1b3b4</code>.</p> <p> Figura 4: Estructura de branques despr\u00e9s de fer un commit a la branca <code>docs</code>. </p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#reanomenar-una-branca","title":"Reanomenar una branca","text":"<p>Per reanomenar una branca, utilitzem l'ordre: <pre><code>git branch [-m | --move] &lt;nou_nom&gt;\n</code></pre></p> <ul> <li><code>[-m | --move]</code>: Opcional. Reanomena la branca actual (on es troba el <code>HEAD</code>).</li> <li><code>&lt;nou_nom&gt;</code>: Nou nom de la branca.</li> </ul> <p>Exemple</p> <p>En la Introducci\u00f3 s'ha utilitzat aquesta opci\u00f3 per canviar el nom de la branca principal de <code>master</code> a <code>main</code>.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#eliminar-una-branca","title":"Eliminar una branca","text":"<p>Per eliminar una branca, utilitzem l'ordre: <pre><code>git branch [-d | --delete] [-D] [-f | --force] &lt;nom&gt;\n</code></pre></p> <ul> <li><code>[-d | --delete]</code>: Opcional. Elimina la branca.</li> <li><code>[-f | --force]</code>: Opcional. For\u00e7a l'eliminaci\u00f3 de la branca.</li> <li><code>[-D]</code>: Opcional. Abreviatura de <code>--delete --force</code>.</li> </ul> <p>Advert\u00e8ncia</p> <p>Quan un <code>commit</code> perd totes les refer\u00e8ncies per a ser accedit, es diu que \u00e9s un <code>commit</code> orfre i ser\u00e0 eliminat pel recol\u00b7lector de brossa (garbage collector) de Git.</p> <p>L'eliminaci\u00f3 d'una branca pot provocar la p\u00e8rdua de commits. En aquest cas, Git mostrar\u00e0 un error i no es podr\u00e0 eliminar la branca a no ser que s'utilitze l'opci\u00f3 <code>-D</code> o <code>--delete --force</code>.</p> <p>Example</p> <p>Eliminem la branca <code>docs</code>.</p> <pre><code>joapuiib@fp:~/git_branques (docs) $ git checkout main\njoapuiib@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\njoapuiib@fp:~/git_branques (main) $ git branch -d docs\nerror: the branch 'docs' is not fully merged\nhint: If you are sure you want to delete it, run 'git branch -D docs'\nhint: Disable this message with \"git config advice.forceDeleteBranch false\"\njoapuiib@fp:~/git_branques (main) $ git branch -D docs\nDeleted branch docs (was 1b2c5d6).\njoapuiib@fp:~/git_branques (main) $ git lg\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>La branca <code>docs</code> ha estat eliminada i, per tant, el <code>commit</code> <code>1b2c5d6</code> s'ha convertit en un <code>commit</code> orfe i ser\u00e0 eliminat pel recol\u00b7lector de brossa de Git.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#fusio-de-branques-git-merge","title":"Fusi\u00f3 de branques (<code>git merge</code>)","text":"<p>La fusi\u00f3 de branques o merge \u00e9s el proc\u00e9s de combinar els canvis d'una branca a una altra.</p> <p>Aquest proc\u00e9s es realitza amb l'ordre: <pre><code>git merge &lt;branca&gt;\n</code></pre></p> <ul> <li><code>&lt;branca&gt;</code>: Branca que es vol fusionar amb la branca actual.</li> </ul> <p>Important</p> <p>La fusi\u00f3 de branques sempre incorpora els canvis de la branca especificada a la branca actual (on es troba el <code>HEAD</code>).</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git merge</code>: https://git-scm.com/docs/git-merge</p> <p>Segons l'estrucura de les branques, la fusi\u00f3 pot ser directa (fast-forward) o mitjan\u00e7ant commit de fusi\u00f3 (merge commit).</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#fusio-directa","title":"Fusi\u00f3 directa","text":"<p>La fusi\u00f3 directa (fast-forward) \u00e9s un tipus de fusi\u00f3 que es produeix quan la branca actual (<code>HEAD</code>) no t\u00e9 cap nou <code>commit</code> des de que es va crear la branca que es vol fusionar.</p> <p>En aquest cas, la fusi\u00f3 es realitza avan\u00e7ant el punter de la branca actual (<code>HEAD</code>) fins on es troba la branca que es vol fusionar.</p> <p>Important</p> <p>La fusi\u00f3 directa \u00e9s la forma m\u00e9s senzilla i neta de fusionar branques, ja que no es crea cap <code>commit</code> addicional per fusionar les branques i mant\u00e9 una hist\u00f2ria lineal i f\u00e0cil de seguir.</p> <p>Example</p> <p>Partint de la situaci\u00f3 de la Figura 4, on la branca <code>docs</code> t\u00e9 un <code>commit</code> m\u00e9s que la branca <code>main</code>, la fusi\u00f3 de la branca <code>docs</code> a la branca <code>main</code> ser\u00e0 una fusi\u00f3 directa.</p> <p> Figura 5: Hist\u00f2ria abans de la fusi\u00f3 directa. </p> <pre><code>joapuiib@fp:~/git_branques (docs) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\njoapuiib@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver (HEAD -&gt; main)\n</code></pre> <p>En aquest cas, la fusi\u00f3 es portar\u00e0 a terme avan\u00e7ant el punter de la branca <code>main</code> fins al punt on es troba la branca <code>docs</code>.</p> <p> Figura 6: Hist\u00f2ria despr\u00e9s de la fusi\u00f3 directa. </p> <pre><code>joapuiib@fp:~/git_branques (main) $ git merge docs\nUpdating 0b1b3b4..1b2c5d6\nFast-forward\n README.md | 1 +\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (main) $ cat README.md # (1)!\n# Bloc: Branques\n\n## Documentaci\u00f3\njoapuiib@fp:~/git_branques (main) $ git lg\n* 1b2c5d6 - (3 seconds ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (HEAD -&gt; main, docs)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Vegem que el fitxer <code>README.md</code> ha incorporat els canvis de la branca <code>docs</code>.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#fusio-de-branques-divergents","title":"Fusi\u00f3 de branques divergents","text":"<p>No sempre \u00e9s possible realitzar fusi\u00f3 mitjan\u00e7ant una fusi\u00f3 directa (fast-forward). Pot donar-se el cas que les dues branques hagen divergit, \u00e9s a dir, que cada branca haja realitzat canvis que no estan presents en l'altra branca.</p> Preparaci\u00f3 branques divergents <ol> <li>Realitzem canvis en la branca <code>docs</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout docs\nSwitched to branch 'docs'\njoapuiib@fp:~/git_branques (docs) $ echo \"https://git-scm.com/\" &gt;&gt; README.md\njoapuiib@fp:~/git_branques (docs) $ git diff\ndiff --git a/README.md b/README.md\nindex 4efb7a9..3e27f51 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,3 +1,4 @@\n # Bloc: Branques\n\n ## Documentaci\u00f3\n+- https://git-scm.com/\njoapuiib@fp:~/git_branques (docs) $ git commit -a -m \"Documentaci\u00f3 oficial\"\n[docs 3d4e5f6] Documentaci\u00f3 oficial\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (docs) $ git lg\n* 3d4e5f6 - (3 seconds ago) Documentaci\u00f3 oficial - Joan Puigcerver (HEAD -&gt; docs)\n* 1b2c5d6 - (3 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (main)\n* 0b1b3b4 - (3 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Realitzem canvis en la branca <code>main</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (docs) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ vim README.md # (1)!\njoapuiib@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 3e27f51..4efb7a9 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # Bloc: Branques\n+__Autor:__ Joan Puigcerver\n\n ## Documentaci\u00f3\njoapuiib@fp:~/git_branques (main) $ git commit -a -m \"Autor\"\n[main 2a3b4c5] Autor\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (main) $ git lg -a\n* 2a3b4c5 - (5 seconds ago) Autor - Joan Puigcerver (HEAD -&gt; main)\n| * 3d4e5f6 - (3 minutes ago) Documentaci\u00f3 oficial - Joan Puigcerver (docs)\n|/\n* 1b2c5d6 - (10 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver (docs)\n* 0b1b3b4 - (13 minutes ago) T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Modifiquem el fitxer <code>README.md</code>. Pots utilitzar l'editor de text que preferisques.</li> </ol> Figura 7: Hist\u00f2ria abans de la fusi\u00f3 en branques divergents. <p>En aquest cas, la fusi\u00f3 es realitza mitjan\u00e7ant un commit de fusi\u00f3 (merge commit). Aquest <code>commit</code> de fusi\u00f3 t\u00e9 dos pares (<code>parents</code>), un per cada branca que es fusiona i incorpora els canvis de les dues branques.</p> Figura 8: Hist\u00f2ria despr\u00e9s de la fusi\u00f3 en branques divergents. <p>En el moment de realitzar la fusi\u00f3 (<code>git merge</code>), Git crear\u00e0 un nou <code>commit</code> de fusi\u00f3 que incorporar\u00e0 els canvis de les dues branques. Aquest <code>commit</code> necessita d'un missatge, per tant, es pot utilitzar l'opci\u00f3 <code>-m</code> per afegir un missatge al <code>commit</code>. Si no se n'especifica cap, s'obrir\u00e0 l'editor de text configurat per defecte per a afegir el missatge (Vegeu Confirmar canvis).</p> <p>Advert\u00e8ncia</p> <p>Aquest tipus de fusi\u00f3 no \u00e9s tan neta com la fusi\u00f3 directa (fast-forward), ja que la hist\u00f2ria del projecte es torna m\u00e9s complexa i no lineal.</p> <p>Fusi\u00f3 de branques divergents</p> <p>Realitzem la fusi\u00f3 de les dues branques.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git merge docs -m \"Merge branch 'docs' into main\" # (1)!\nAuto-merging README.md\nMerge made by the 'ort' strategy.\n README.md | 1 +\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (main) $ git lg\n*   b6aa5c3 - (3 seconds ago) Merge branch 'docs' into main - Joan Puigcerver (HEAD -&gt; main)\n|\\\n| * 3d4e5f6 - (3 minutes ago) Documentaci\u00f3 oficial - Joan Puigcerver (docs)\n* | 2a3b4c5 - (5 seconds ago) Autor - Joan Puigcerver\n|/\n* 1b2c5d6 - (10 minutes ago) Subt\u00edtol documentaci\u00f3 - Joan Puigcerver\n* 0b1b3b4 - (13 minutes ago) T\u00edtol - Joan Puigcerver\njoapuiib@fp:~/git_branques (main) $ cat README.md\n# Bloc: Branques\n__Autor:__ Joan Puigcerver\n\n## Documentaci\u00f3\n- https://git-scm.com/\n</code></pre> <ol> <li>La opci\u00f3 <code>-m</code> permet afegir un missatge al <code>commit</code> de fusi\u00f3.</li> </ol> <p>En aquest punt ens trobem en la situaci\u00f3 mostrada en la Figura 8. Vegem que el fitxer <code>README.md</code> ha incorporat els canvis de les dues branques.</p>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#resolucio-de-conflictes","title":"Resoluci\u00f3 de conflictes","text":"<p>En el proc\u00e9s de fusi\u00f3 de branques, pot donar-se el cas que les dues branques hagen modificat la mateixa part d'un fitxer. En aquest cas, Git no pot resoldre el conflictes de forma autom\u00e0tica i caldr\u00e0 resoldre'ls manualment.</p> <p>En el moment que executem <code>git merge</code>, Git detectar\u00e0 el conflictes els marcar\u00e0 en el fitxer amb la seg\u00fcent notaci\u00f3: <pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nContingut de la branca actual\n=======\nContingut de la branca a fusionar\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; branca_a_fusionar\n</code></pre></p> <p>A m\u00e9s, el repositori passar\u00e0 a l'estat de fusi\u00f3 (<code>MERGING</code>), indicant que hi ha una fusi\u00f3 en curs.</p> <p>Per resoldre el conflicte, caldr\u00e0:</p> <ol> <li>Editar el fitxer i resoldre manualment el conflicte.</li> <li>Esborrar les marques de conflicte.</li> </ol> <p>Una vegada resolt el conflicte, caldr\u00e0 confirmar els canvis amb <code>git add</code> i <code>git commit</code>.</p> <p>Info</p> <p>En cas que es desitge cancel\u00b7lar el proc\u00e9s de fusi\u00f3, es pot utilitzar l'ordre <code>git merge --abort</code>.</p> Preparaci\u00f3 branques divergents amb conflicte <ol> <li>Creem la branca <code>conflictes</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (main) $ git branch conflictes\njoapuiib@fp:~/git_branques (main) $ git checkout conflictes\nSwitched to branch 'conflictes'\njoapuiib@fp:~/git_branques (conflictes) $ vim README.md\njoapuiib@fp:~/git_branques (conflictes) $ git diff\ndiff --git a/README.md b/README.md\nindex f94383b..c9b0a17 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,7 @@\n # Bloc: Branques\n __Autor__: Joan Puigcerver\n\n+Estem aprenent a resoldre conflictes.\n+\n ## Documentaci\u00f3\n - https://git-scm.com/\njoapuiib@fp:~/git_branques (conflictes) $ git commit -a -m \"Text conflictes\"\n[conflictes 4e5f6d7] Text conflictes\n 1 file changed, 2 insertions(+)\njoapuiib@fp:~/git_branques (conflictes) $ git lg\n* 4e5f6d7 - (3 seconds ago) Text conflictes - Joan Puigcerver (HEAD -&gt; conflictes)\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ vim README.md\njoapuiib@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex f94383b..a03cd9d 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,5 +1,7 @@\n # Bloc: Branques\n __Autor__: Joan Puigcerver\n\n+Estem aprenent a fusionar branques.\n+\n ## Documentaci\u00f3\n - https://git-scm.com/\njoapuiib@fp:~/git_branques (main) $ git commit -a -m \"Text fusi\u00f3\"\n[main 072e36a] Text fusi\u00f3\n 1 file changed, 2 insertions(+)\njoapuiib@fp:~/git_branques (main) $ git lg -a\n* 072e36a - (3 seconds ago) Text fusi\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n| * 4e5f6d7 - (3 minutes ago) Text conflictes - Joan Puigcerver (conflictes)\n|/\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver\n...\n</code></pre> <p>Exemple de fusi\u00f3 amb resoluci\u00f3 de conflictes</p> <p>Realitzem la fusi\u00f3 de la branca <code>conflictes</code> a la branca <code>main</code>.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git merge conflictes\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\njoapuiib@fp:~/git_branques (main|MERGING) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nEstem aprenent a fusionar branques.\n=======\nEstem aprenent a resoldre conflictes.\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; conflictes\n\n## Documentaci\u00f3\n- https://git-scm.com/\njoapuiib@fp:~/git_branques (main|MERGING) $ vim README.md # (1)!\njoapuiib@fp:~/git_branques (main|MERGING) $ cat README.md\njoapuiib@fedora:~/git_branques (main|MERGING) $ cat README.md \n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\n\n## Documentaci\u00f3\n- https://git-scm.com/\njoapuiib@fp:~/git_branques (main|MERGING) $ git add README.md\njoapuiib@fp:~/git_branques (main|MERGING) $ git commit -m \"Resoluci\u00f3 conflicte\"\n[main 8a9b0c1] Resoluci\u00f3 conflicte\njoapuiib@fp:~/git_branques (main) $ git lg\n* 8a9b0c1 - (3 seconds ago) Resoluci\u00f3 conflicte - Joan Puigcerver (HEAD -&gt; main)\n|\\\n| * 4e5f6d7 - (3 minutes ago) Text conflictes - Joan Puigcerver (conflictes)\n* | 072e36a - (3 minutes ago) Text fusi\u00f3 - Joan Puigcerver\n|/\n* b6aa5c3 - (3 minutes ago) Merge branch 'docs' into main - Joan Puigcerver\n...\n</code></pre> <ol> <li>Hem combinat els dos textos i hem eliminat les marques de conflicte.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#canvi-de-base-rebase","title":"Canvi de base (<code>rebase</code>)","text":"<p>El canvi de base (<code>rebase</code>) \u00e9s una altra manera de fusionar canvis de branques divergents, que consiteix en aplicar els canvis dels <code>commit</code> d'una branca sobre una altra branca, en ordre cronol\u00f2gic.</p> <p>Aquesta t\u00e8cnica permet eliminar les branques diveregents i mantenir una hist\u00f2ria lineal.</p> <p>Aquest proc\u00e9s es realitza amb l'ordre: <pre><code>git rebase &lt;branca&gt;\n</code></pre></p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 de la ordre <code>git rebase</code>: https://git-scm.com/docs/git-rebase</p> <p>Important</p> <p>L'ordre <code>git rebase</code> canviar\u00e0 la base de la branca actual (<code>HEAD</code>).</p> Preparaci\u00f3 branques divergents <ol> <li>Creem la branca <code>llicencia</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout -b llicencia # (1)!\nSwitched to a new branch 'llicencia'\njoapuiib@fp:~/git_branques (llicencia) $ echo &gt;&gt; README.md\njoapuiib@fp:~/git_branques (llicencia) $ echo \"## Llic\u00e8ncia\" &gt;&gt; README.md\njoapuiib@fp:~/git_branques (llicencia) $ echo \"CC BY-NC-SA 4.0\" &gt;&gt; README.md\njoapuiib@fp:~/git_branques (llicencia) $ git diff\ndiff --git a/README.md b/README.md\nindex 2ca252f..6aa790e 100644\n--- a/README.md\n+++ b/README.md\n@@ -5,3 +5,6 @@ Estem aprenent a fusionar branques i resoldre conflictes.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+\n+## Llic\u00e8ncia\n+CC BY-NC-SA 4.0\njoapuiib@fp:~/git_branques (llicencia) $ git commit -a -m \"Llic\u00e8ncia\"\n[llicencia e474d76] Llic\u00e8ncia\n 1 file changed, 3 insertions(+)\njoapuiib@fp:~/git_branques (llicencia) $ git lg\n* e474d76 - (14 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; llicencia)\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (llicencia) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ vim README.md\njoapuiib@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 2ca252f..3a3fe02 100644\n--- a/README.md\n+++ b/README.md\n@@ -2,6 +2,7 @@\n __Autor__: Joan Puigcerver\n\n Estem aprenent a fusionar branques i resoldre conflictes.\n+Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\njoapuiib@fp:~/git_branques (main) $ git commit -a -m \"Text rebase\"\n[main 1b2c3d4] Text rebase\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (main) $ git lg -a\n* 1b2c3d4 - (3 seconds ago) Text rebase - Joan Puigcerver (HEAD -&gt; main)\n| * e474d76 - (3 minutes ago) Llic\u00e8ncia - Joan Puigcerver (llicencia)\n|/\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver\n...\n</code></pre> <ol> <li>L'opci\u00f3 <code>git checkout -b</code> permet crear una nova branca i situar-se en ella directament.</li> </ol> Figura 9: Hist\u00f2ria abans del canvi de base. Figura 10: Hist\u00f2ria despr\u00e9s del canvi de base. <p>Canvi de base</p> <p>Canviem la base de la branca <code>llicencia</code> a la branca <code>main</code>.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout llicencia\nSwitched to branch 'llicencia'\njoapuiib@fp:~/git_branques (llicencia) $ git rebase main\nSuccessfully rebased and updated refs/heads/llicencia.\njoapuiib@fp:~/git_branques (llicencia) $ git lg\n* 8bad4a1 - (3 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; llicencia)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver (main)\n* 8a9b0c1 - (3 minutes ago) Resoluci\u00f3 conflicte - Joan Puigcerver\n...\njoapuiib@fp:~/git_branques (llicencia) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\n</code></pre> <p>Vegem que la branca <code>llicencia</code> ha canviat la seva base a la branca <code>main</code> i ha incorporat els seus canvis.</p> <p>Notice</p> <p>L'identificador (hash) del <code>commit</code> Llic\u00e8ncia ha canviat despr\u00e9s del <code>rebase</code>.</p> <p>Aix\u00f2 \u00e9s degut a que s'ha creat un nou <code>commit</code> amb els canvis de l'anterior.</p> <p>En aquest punt, si volem incorporar els canvis de la branca <code>llicencia</code> a la branca <code>main</code>, podem fer-ho mitjan\u00e7ant una fusi\u00f3 directa (fast-forward).</p> <pre><code>joapuiib@fp:~/git_branques (llicencia) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ git merge llicencia\nUpdating 1b2c3d4..8bad4a1\nFast-forward\n README.md | 3 +++\n 1 file changed, 3 insertions(+)\njoapuiib@fp:~/git_branques (main) $ git lg\n* 8bad4a1 - (3 seconds ago) Llic\u00e8ncia - Joan Puigcerver (HEAD -&gt; main, llicencia)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver\n...\n</code></pre>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#resolucio-de-conflictes_1","title":"Resoluci\u00f3 de conflictes","text":"<p>El canvi de base (<code>rebase</code>) tamb\u00e9 pot provocar conflictes si les dues branques han modificat la mateixa part d'un fitxer.</p> <p>Git ens indicar\u00e0 que hi ha conflictes i caldr\u00e0 resoldre'ls manualment, d'una manera similar a la resoluci\u00f3 de conflictes en la fusi\u00f3 de branques.</p> <p>En aquest cas, caldr\u00e0 resoldre els conflictes per a cada <code>commit</code> en el que s'est\u00e0 canviant la base.</p> <p>Despr\u00e9s de resoldre els conflictes d'un <code>commit</code>, caldr\u00e0 continuar amb el proc\u00e9s de <code>rebase</code> amb l'ordre <code>git rebase --continue</code> fins que s'haja aplicat el canvi de base a tots els <code>commit</code> de la branca.</p> Preparaci\u00f3 branques divergents amb conflictes <ol> <li>Creem la branca <code>docs/git_training</code> i realitzem canvis en la descripci\u00f3 del fitxer <code>README.md</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout -b docs_git_training\nSwitched to a new branch 'docs_git_training'\njoapuiib@fp:~/git_branques (docs_git_training) $ vim README.md\njoapuiib@fp:~/git_branques (docs_git_training) $ git diff\ndiff --git a/README.md b/README.md\nindex 54f292f..271a617 100644\n--- a/README.md\n+++ b/README.md\n@@ -6,6 +6,7 @@ Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+- https://github.com/UnseenWizzard/git_training \n\n ## Llic\u00e8ncia\n CC BY-NC-SA 4.0\njoapuiib@fp:~/git_branques (docs_git_training) $ git commit -a -m \"Documentaci\u00f3 git_training\"\n[docs_git_training a136424] Documentaci\u00f3 git_training\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (docs_git_training) $ git lg\n* a136424 - (3 seconds ago) Documentaci\u00f3 git_training - Joan Puigcerver (HEAD -&gt; docs_git_training)\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Realitzem canvis en la descripci\u00f3 en la branca <code>main</code>.</li> </ol> <pre><code>joapuiib@fp:~/git_branques (docs_git_training) $ git checkout main\nSwitched to branch 'main'\njoapuiib@fp:~/git_branques (main) $ vim README.md\njoapuiib@fp:~/git_branques (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 54f292f..6f65136 100644\n--- a/README.md\n+++ b/README.md\n@@ -6,6 +6,7 @@ Tamb\u00e9 a canviar la base d'una branca.\n\n ## Documentaci\u00f3\n - https://git-scm.com/\n+- https://www.w3schools.com/git/\n\n ## Llic\u00e8ncia\n CC BY-NC-SA 4.0\njoapuiib@fp:~/git_branques (main) $ git commit -a -m \"Documentaci\u00f3 w3schools\"\n[main 0230b1b] Documentaci\u00f3 w3schools\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_branques (main) $ git lg -a\n* 0230b1b - (3 seconds ago) Documentaci\u00f3 w3schools - Joan Puigcerver (HEAD -&gt; main)\n| * a136424 - (3 minutes ago) Documentaci\u00f3 git_training - Joan Puigcerver (docs_git_training)\n|/\n* 1b2c3d4 - (3 minutes ago) Text rebase - Joan Puigcerver\n...\n</code></pre> <p>Canvi de base amb conflictes</p> <p>Canviem la base de la branca <code>docs_git_training</code> a la branca <code>main</code>.</p> <pre><code>joapuiib@fp:~/git_branques (main) $ git checkout docs_git_training\nSwitched to branch 'docs_git_training'\njoapuiib@fp:~/git_branques (docs_git_training) $ git rebase main\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nerror: could not apply a136424... git_training\nhint: Resolve all conflicts manually, mark them as resolved with\nhint: \"git add/rm &lt;conflicted_files&gt;\", then run \"git rebase --continue\".\nhint: You can instead skip this commit: run \"git rebase --skip\".\nhint: To abort and get back to the state before \"git rebase\", run \"git rebase --abort\".\nhint: Disable this message with \"git config advice.mergeConflict false\"\nCould not apply a136424... Documentaci\u00f3 git_training\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git status\ninteractive rebase in progress; onto 0230b1b\nLast command done (1 command done):\n   pick a136424 git_training\nNo commands remaining.\nYou are currently rebasing branch 'docs_git_training' on '0230b1b'.\n  (fix conflicts and then run \"git rebase --continue\")\n  (use \"git rebase --skip\" to skip this patch)\n  (use \"git rebase --abort\" to check out the original branch)\n\nUnmerged paths:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n  (use \"git add &lt;file&gt;...\" to mark resolution)\n    both modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n- https://www.w3schools.com/git/\n=======\n- https://github.com/UnseenWizzard/git_training \n&gt;&gt;&gt;&gt;&gt;&gt;&gt; a136424 (git_training)\n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\n</code></pre> <p>Vegem que hi ha conflictes en el fitxer <code>README.md</code>. Hem de resoldre'ls manualment.</p> <pre><code>joapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ vim README.md # (1)!\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ cat README.md\n# Bloc: Branques\n__Autor__: Joan Puigcerver\n\nEstem aprenent a fusionar branques i resoldre conflictes.\nTamb\u00e9 a canviar la base d'una branca.\n\n## Documentaci\u00f3\n- https://git-scm.com/\n- https://www.w3schools.com/git/\n- https://github.com/UnseenWizzard/git_training \n\n## Llic\u00e8ncia\nCC BY-NC-SA 4.0\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git add README.md # (2)!\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git status\ninteractive rebase in progress; onto 0230b1b\nLast command done (1 command done):\n   pick a136424 git_training\nNo commands remaining.\nYou are currently rebasing branch 'docs_git_training' on '0230b1b'.\n  (all conflicts fixed: run \"git rebase --continue\")\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n    modified:   README.md\n\njoapuiib@fp:~/git_branques (docs_git_training|REBASE 1/1) $ git rebase --continue --no-edit # (3)!\nSuccessfully rebased and updated refs/heads/docs_git_training.\njoapuiib@fp:~/git_branques (docs_git_training) $ git lg\n* 8bad4a1 - (3 seconds ago) Documentaci\u00f3 git_training - Joan Puigcerver (HEAD -&gt; docs_git_training)\n* 0230b1b - (3 minutes ago) Documentaci\u00f3 w3schools - Joan Puigcerver (main)\n...\n</code></pre> <ol> <li>Hem eliminat les marques de conflicte i hem combinat els dos textos.</li> <li>Hem marcat el fitxer <code>README.md</code> com a resolt.</li> <li>L'opci\u00f3 <code>--no-edit</code> permet continuar el proc\u00e9s de <code>rebase</code>, utilitzant el missatge del <code>commit</code> original.</li> </ol>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/02_branques/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://git-scm.com/book/en/v2</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>","tags":["conflictes","fast-forward","git branch","git checkout","git merge","git rebase","git switch","HEAD"]},{"location":"apunts/03_remots/","title":"Bloc 3: Remots","text":"","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#introduccio","title":"Introducci\u00f3","text":"<p>En el blocs anteriors, ens hem centrat en con\u00e9ixer la seua estructura i realitzar accions b\u00e0siques per realitzar canvis sobre aquest.</p> <p>No obstant aix\u00f2, totes les accions que hem realitzat fins ara han sigut sobre un repositori local, \u00e9s a dir, un repositori que es troba en el nostre dispositiu i aquests canvis no han segut publicats en cap lloc.</p> <p>En aquest bloc, ens centrarem en la creaci\u00f3 de repositoris remots; repositoris que es troben allotjats en un servidor, que permeten l'acc\u00e9s a altres usuaris i la col\u00b7laboraci\u00f3 en el desenvolupament de projectes.</p> <p>Preparaci\u00f3 repositori local</p> <p>En aquest material treballarem sobre un nou repositori local.</p> <p>Inicialitzaci\u00f3: <pre><code>git init ~/git_remots\ncd ~/git_remots\necho \"# Bloc: Remots\" &gt; README.md\ngit add README.md\ngit commit -m \"README.md: T\u00edtol\"\necho \"Repositori del __Bloc: Remots__ del curs __\\\"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\\\"__\" &gt;&gt; README.md\ngit commit -a -m \"README.md: Descripci\u00f3\"\n</code></pre></p> <p>Example</p> <pre><code>joapuiib@fp:~ $ git init ~/git_remots\nInitialized empty Git repository in /home/joapuiib/git_remots/.git/\njoapuiib@fp:~ $ cd ~/git_remots\njoapuiib@fp:~/git_remots (main) $ branch -m main # (1)!\njoapuiib@fp:~/git_remots (main) $ echo \"# Bloc: Remots\" &gt; README.md\njoapuiib@fp:~/git_remots (main) $ git add README.md\njoapuiib@fp:~/git_remots (main) $ git commit -m \"README.md: T\u00edtol\"\n[master (root-commit) 0b1b3b4] README.md: T\u00edtol\n 1 file changed, 1 insertion(+)\n create mode 100644 README.md\njoapuiib@fp:~/git_remots (main) $ echo \"Repositori del __Bloc: Remots__ del curs __\\\"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\\\"__\" &gt;&gt; README.md\njoapuiib@fp:~/git_remots (main) $ git commit -a -m \"README.md: Descripci\u00f3\"\n[master 1b3b4b0] README.md: Descripci\u00f3\n 1 file changed, 1 insertion(+)\njoapuiib@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* 0b1b3b4 - (3 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <ol> <li>Canviem el nom de la branca principal a <code>main</code>.</li> </ol>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#repositori-remot","title":"Repositori remot","text":"<p>Un Repositori Remot \u00e9s una c\u00f2pia d'un repositori de Git que es troba allotjat en un servidor o en un altre lloc fora del teu propi sistema local. Aquesta c\u00f2pia cont\u00e9 una r\u00e8plica completa de la hist\u00f2ria del repositori, incloses totes les revisions i les branques. Els repositoris remots permeten la col\u00b7laboraci\u00f3 i el seguiment del desenvolupament del codi entre m\u00faltiples persones, o tu mateix en diferents dispositius.</p> Figura 1: Repositori remot vinculat a m\u00faltiples repositoris locals <p>Entre les finalitats dels repositoris remots podem trobar:</p> <ul> <li>Col\u00b7laboraci\u00f3: Permeten que diversos desenvolupadors treballen junts en un mateix projecte.     Cada desenvolupador pot treballar en la seua c\u00f2pia local del repositori remot i,     una vegada fetes les seues modificacions, pot pujar els canvis al repositori remot perqu\u00e8 altres membres     de l'equip puguen veure i incorporar aquestes modificacions.</li> <li>C\u00f2pia de seguretat: Un repositori remot pot servir com a c\u00f2pia de seguretat del teu projecte.     Si el teu sistema local es danya o es perd, encara tindr\u00e0s acc\u00e9s a la teua hist\u00f2ria completa     i als fitxers del projecte mitjan\u00e7ant el repositori remot.</li> <li>Distribuci\u00f3: Els repositoris remots permeten distribuir el teu codi a altres llocs.     Aix\u00f2 pot ser \u00fatil per compartir el teu codi amb altres persones     o per desplegar el teu projecte en un servidor en l\u00ednia.</li> </ul> <p>Gr\u00e0cies a aquestes caracter\u00edstiques, Git s'ha convertit en una eina clau en qualsevol desenvolupament, per\u00f2 sobretot en els projectes de codi obert (open source), ja que permet la col\u00b7laboraci\u00f3 de desenvolupadors de tot el m\u00f3n en un mateix projecte de manera senzilla i distribu\u00efda.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#allotjament-de-repositoris-remots","title":"Allotjament de repositoris remots","text":"<p>Els repositoris remots es poden allotjar en qualsevol m\u00e0quina o servidor dedicat. No obstant aix\u00f2, hi ha serveis d'allotjament de repositoris remots en l\u00ednia que faciliten la creaci\u00f3 i la gesti\u00f3 de repositoris remots.</p> <p>Alguns dels serveis d'allotjament repositoris remots en l\u00ednia m\u00e9s coneguts s\u00f3n:</p> <ul> <li> <p> GitHub: Servei d'allotjament de repositoris creat en 2008 i adquirit per Microsoft en 2018.     \u00c9s el servei d'allotjament de repositoris de Git m\u00e9s utilitzat.</p> <p>Ofereix una opci\u00f3 gratu\u00efta, que permet crear projectes p\u00fablics i privats, per\u00f2 amb algunes restriccions. Tamb\u00e9 ofereix plans de pagament per projectes empresarials.</p> </li> <li> <p> GitLab: Servei d'allotjament de repositoris. GitLab \u00e9s una plataforma de codi obert.</p> </li> <li> BitBucket: Servei d'allotjament de repositoris propietat de l'empresa Atlassian,     s'integra estretament amb altres eines d'aquesta empresa, com Jira.</li> </ul> <p>Info</p> <p>M\u00e9s informaci\u00f3: https://prismic.io/blog/gitlab-vs-github#similarities-between-github-and-gitlab</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#creacio-dun-repositori-remot-a-github","title":"Creaci\u00f3 d'un repositori remot a GitHub","text":"<p>En aquesta secci\u00f3, crearem un repositori remot a GitHub.</p> <ol> <li>Crea un compte a  GitHub si no en tens un.</li> <li>Inicia la sessi\u00f3 amb el teu compte.</li> <li>Fes clic a l'opci\u00f3 \"New\" per crear un nou repositori.</li> <li>Omple el formulari amb la informaci\u00f3 del teu repositori:<ul> <li>Nom del repositori. Ha de ser un nom \u00fanic en el teu compte de GitHub.</li> <li>Descripci\u00f3 del repositori. Opcional.</li> <li>Visibilitat del repositori. Pots triar entre p\u00fablic o privat.<ul> <li>P\u00fablic: Qualsevol persona pot veure el teu repositori. Sols les persones autoritzades poden fer canvis.</li> <li>Privat: Nom\u00e9s tu i les persones que tu autoritzes poden veure el teu repositori. Sols les persones autoritzades poden fer canvis.</li> </ul> </li> <li>README: Indica si vols afegir un README al teu repositori.</li> <li>.gitignore: Indica si vols afegir un fitxer <code>.gitignore</code> per ignorar fitxers en el teu repositori.</li> <li>Llic\u00e8ncia: Indica si vols afegir una llic\u00e8ncia al teu repositori.</li> </ul> </li> </ol> <p>Exemple</p> <p>En aquest material, crearem un repositori amb les seg\u00fcents caracter\u00edstiques:</p> <ul> <li>Nom: <code>git_remots</code></li> <li>Descripci\u00f3: Repositori del Bloc: Remots del curs \"Introducci\u00f3 a Git i la seua aplicaci\u00f3 a l\u2019aula\"</li> <li>Visibilitat: P\u00fablic</li> <li>README: No</li> <li>.gitignore: No</li> <li>Llic\u00e8ncia: No</li> </ul> <p> Figura 2: Formulari de creaci\u00f3 d'un nou repositori a GitHub </p> <p>Una vegada omplert el formulari, fes clic a \"Create repository\" per crear el teu repositori.</p> <p>El teu repositori s'hauria de crear buit i hauries de veure una p\u00e0gina com la seg\u00fcent:</p> <p> Figura 3: Repositori buit creat a GitHub </p> <p>La Figura 3 mostra els passos per enlla\u00e7ar el teu repositori local amb el repositori remot creat a GitHub. En els seg\u00fcents apartats, explicarem aquestes ordres amb m\u00e9s detall.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#metodes-dautenticacio-a-github","title":"M\u00e8todes d'autenticaci\u00f3 a GitHub","text":"<p>Per poder enlla\u00e7ar el teu repositori local amb el repositori remot i fer canvis en aquest, necessites autenticar-te amb el servidor de GitHub.</p> <p>GitHub ofereix diferents m\u00e8todes d'autenticaci\u00f3, utilitzant dos protocols diferents:</p> <p>Consell</p> <p>Per seguretat i reutilitzaci\u00f3, es recomana utilitzar el m\u00e8tode SSH per autenticar-se amb el servidor de GitHub.</p> <p>Consulta l'apartat Configuraci\u00f3 de la clau SSH si vols anar directament a aquest m\u00e8tode.</p> <ul> <li> <p>Protocol HTTPS: Utilitza el protocol HTTPS per autenticar-se amb el servidor de GitHub.</p> <p>Per utilitzar aquest m\u00e8tode, has de configurar les teues credencials d'acc\u00e9s a GitHub en el teu sistema local.</p> <p>Aquesta autenticaci\u00f3 es pot realitzar mitjan\u00e7ant:</p> <ul> <li>Nom d'usuari i contrasenya: Des del 2021-08-13, aquest m\u00e8tode est\u00e0     deshabilitat a GitHub.</li> <li>Token d'acc\u00e9s personal (Personal Access Token o PAT):     GitHub permet crear un token d'acc\u00e9s personal     per autenticar-se amb el servidor de GitHub.</li> <li>Extensions de l'IDE: Algunes extensions de l'IDE que utilitzes poden     gestionar l'autenticaci\u00f3 amb GitHub directament.</li> </ul> </li> <li> <p>Protocol SSH: Utilitza el protocol SSH per autenticar-se amb el servidor de GitHub.</p> <p>Per utilitzar aquest m\u00e8tode, has de configurar una clau SSH en el teu sistema local i afegir-la al teu compte de GitHub.</p> </li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#token-dacces-personal-pat","title":"Token d'acc\u00e9s personal (PAT)","text":"<p>Un Token d'Acc\u00e9s Personal (Personal Access Token o PAT) \u00e9s una clau d'acc\u00e9s que permet autenticar-se amb el servidor de GitHub mitjan\u00e7ant el protocol HTTPS.</p> <p>Documentaci\u00f3</p> <ul> <li>GitHub: Managing your personal access tokens</li> <li>Stackoverflow: Message \"Support for password authentication was removed.\"</li> </ul> <p>Per crear un token d'acc\u00e9s personal, segueix els seg\u00fcents passos:</p> <ul> <li>Inicia la sessi\u00f3 a  GitHub</li> <li>Fes clic a la teua foto de perfil i selecciona Settings.</li> <li>A la barra lateral esquerra, fes clic a Developer settings.</li> <li>A la barra lateral esquerra, fes clic a Personal access tokens.</li> <li>Fes clic a Generate new token.</li> </ul> <p>Existeixen dos tipus de tokens d'acc\u00e9s personal: - Access token (classic): Permet especificar els permisos que vols donar al token,     que s\u00f3n globals per a tot el teu compte. - Fine-grained token: Permet especificar els permisos que vols donar al token,     que s\u00f3n espec\u00edfics per a un repositori o organitzaci\u00f3.</p> <p>Una vegada creat el token, podr\u00e0s utilitzar-lo per autenticar-te amb el servidor de GitHub.</p> <p>Important</p> <p>Guarda el teu token d'acc\u00e9s personal en un lloc segur.</p> <p>No podr\u00e0s veure'l de nou despr\u00e9s de tancar la p\u00e0gina.</p> <p>Pots utilitzar el teu token d'acc\u00e9s personal per autenticar-te amb el servidor de GitHub de dues maneres:</p> <ul> <li>Mitjan\u00e7ant la URL (Recomanat): Pots afegir el teu token d'acc\u00e9s personal a la URL del repositori     per autenticar-te amb el servidor de GitHub.     <pre><code>git clone https://&lt;token&gt;@github.com/&lt;usuari&gt;/&lt;repositori&gt;\n</code></pre></li> <li> <p>Mitjan\u00e7ant la contrasenya: Pots utilitzar el teu token d'acc\u00e9s personal com a contrasenya     per autenticar-te amb el servidor de GitHub.</p> <pre><code>joapuiib@fp:~ $ git clone https://github.com/&lt;usuari&gt;/&lt;repositori&gt;\nCloning into '&lt;repositori&gt;'...\nUsername for 'https://github.com': &lt;usuari&gt;\nPassword for 'https://&lt;username&gt;@github.com': &lt;token&gt;\n</code></pre> <p>Note</p> <p>Per seguretat, no es mostrar\u00e0 res en el camp de la contrasenya.</p> </li> </ul> <p>Consell</p> <p>Es recomana utilitzar el m\u00e8tode mitjan\u00e7ant la URL per autenticar-te amb el servidor de GitHub, ja que es queda configurat en la URL i no caldr\u00e0 introduir-lo cada vegada que faces una acci\u00f3.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#configuracio-de-la-clau-ssh","title":"Configuraci\u00f3 de la clau SSH","text":"<p>Per autenticar-te amb el servidor de GitHub mitjan\u00e7ant el protocol SSH, has de configurar una clau SSH en el teu sistema local i afegir-la al teu compte de GitHub.</p> <p>Documentaci\u00f3</p> <ul> <li>https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh</li> </ul> <p>Per generar una clau SSH, segueix els seg\u00fcents passos.</p> TerminalInterf\u00edcie gr\u00e0fica <ul> <li> <p>Crea una clau SSH al teu sistema local mitjan\u00e7ant la comanda <code>ssh-keygen</code>.</p> <pre><code>joapuiib@fp:~ $ ssh-keygen -t rsa -b 4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/joapuiib/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /home/joapuiib/.ssh/id_rsa\n</code></pre> <ul> <li><code>-t rsa</code>: Indica el tipus de clau RSA.</li> <li><code>-b 4096</code>: Indica la longitud de la clau en bits.</li> <li>Pots indicar la ruta on guardar la clau. Per defecte, es guarda en <code>/home/&lt;usuari&gt;/.ssh/id_rsa</code>.</li> <li>Pots indicar una contrasenya per protegir la clau. Si no vols protegir-la, deixa el camp buit.</li> </ul> </li> <li> <p>C\u00f2pia el contingut de la clau p\u00fablica (<code>id_rsa.pub</code>) al portaretalls.</p> <pre><code>joapuiib@fp:~ $ cat ~/.ssh/id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7GqFnEFQZK4+l3zvXF07hN/cMk5ZtJmMkHWAJyTYQ+pDwMXp9eQs\n+VASLlz9z+0Q3vnnXN4vBO/+2u29fKJ4YlrecDYtCDpEhMXCkaCv9/ggkru09j2rELFuAqER55lgEtRKTfLKAVFa3Ws\n2VV7zlTSAH2y8nVddzlJRE9Y1BAfH0+1hjpCe+vgGObBLyIGGsXwlmm3mwI7NKHuKCIVskIEX3F0jw668dBex+6VUtG\n...\n</code></pre> </li> </ul> <ul> <li>Obri el programa Git GUI.</li> <li> <p>Obri el di\u00e0leg a Help &gt; Show SSH Key.</p> <p> Figura 4: Men\u00fa di\u00e0leg SSH de Git GUI </p> </li> <li> <p>Fes clic a Generate Key.</p> <ul> <li>Indica una contrasenya (passphrase) per protegir la clau (opcional)     o deixa el camp buit per no protegir-la.</li> </ul> </li> <li> <p>Fes clic a Copy to Clipboard per copiar la clau p\u00fablica al portaretalls.</p> <p> Figura 5: Clau SSH generada amb Git GUI </p> </li> </ul> <p>Despr\u00e9s, configura la clau SSH al teu compte de GitHub seguint els seg\u00fcents passos:</p> <ul> <li>Inicia la sessi\u00f3 a  GitHub</li> <li>Fes clic a la teua foto de perfil i selecciona Settings.</li> <li>A la barra lateral esquerra, fes clic a SSH and GPG keys.</li> <li>Fes clic a New SSH key.</li> <li>Indica un t\u00edtol per a la clau SSH.</li> <li>Enganxa el contingut de la clau p\u00fablica al camp Key.</li> </ul> <p>Important</p> <p>Aquesta configuraci\u00f3 s'ha de repetir per cada dispositiu on vulgues autenticar-te amb el servidor de GitHub mitjan\u00e7ant el protocol SSH.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#configurar-un-repositori-remot-git-remote","title":"Configurar un repositori remot (<code>git remote</code>)","text":"<p>El primer pas \u00e9s enlla\u00e7ar el teu Repositori Local amb el Repositori Remot que acabem de crear. Per fer-ho, utilitzarem la comanda <code>git remote</code>.</p> <p>La comanda <code>git remote</code> permet gestionar els repositoris remots associats al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote [add|rename|remove|show] [&lt;options&gt;]\n</code></pre></p> <p>Aquesta comanda permet realitzar les seg\u00fcents accions:</p> <ul> <li>Sense opcions: Mostra els repositoris remots associats al teu repositori local.</li> <li><code>add</code>: Afegeix un nou repositori remot.</li> <li><code>rename</code>: Canvia el nom d'un repositori remot.</li> <li><code>remove</code>: Elimina un repositori remot.</li> <li><code>show</code>: Mostra informaci\u00f3 detallada d'un repositori remot.</li> </ul> <p>Cadascuna d'aquestes opcions t\u00e9 les seues pr\u00f2pies opcions i arguments.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git remote</code>: https://git-scm.com/docs/git-remote</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#afegir-un-repositori-remot","title":"Afegir un repositori remot","text":"<p>Per afegir un repositori remot, utilitzarem la comanda <code>git remote add</code>.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote add &lt;nom&gt; &lt;url&gt;\n</code></pre></p> <ul> <li><code>&lt;nom&gt;</code>: Nom o \u00e0lies del repositori remot en el teu repositori local.     Normalment, s'utilitza el nom <code>origin</code> per referir-se al repositori remot principal.</li> <li><code>&lt;url&gt;</code>: URL del repositori remot.</li> </ul> Figura 6: Repositori Local vinculat amb un Repositori Remot <p>Warning</p> <p>Si intentes publicar amb <code>git push</code> els canvis en un repositori remot sense haver enlla\u00e7at el teu repositori local, Git et mostrar\u00e0 un missatge d'error: <pre><code>joapuiib@fp:~/git_remots (main) $ git remote # (1)!\njoapuiib@fp:~/git_remots (main) $ git push\nfatal: No configured push destination.\nEither specify the URL from the command-line or configure a remote repository using\n\n    git remote add &lt;name&gt; &lt;url&gt;\n\nand then push using the remote name\n\n    git push &lt;name&gt;\n</code></pre></p> <ol> <li>Aquesta ordre no mostra res perqu\u00e8 encara no hi ha configurat cap remot.</li> </ol> <p>Example</p> <p>Enlla\u00e7arem el nostre repositori local amb el repositori remot creat anteriorment a GitHub.</p> <p>La URL del repositori remot \u00e9s <code>git@github.com:joapuiib/git_remots.git</code>(1).</p> <pre><code>joapuiib@fp:~/git_remots (main) $ git remote\njoapuiib@fp:~/git_remots (main) $ git remote add origin git@github.com:joapuiib/git_remots.git\njoapuiib@fp:~/git_remots (main) $ git remote\norigin\njoapuiib@fp:~/git_remots (main) $ git remote show origin\n* remote origin\n  Fetch URL: git@github.com:joapuiib/git_remots.git\n  Push  URL: git@github.com:joapuiib/git_remots.git\n  HEAD branch: (unknown)\n</code></pre> <ol> <li>Utilitzem la URL SSH ja que he decidit utilitzar aquest m\u00e8tode d'autenticaci\u00f3.</li> </ol>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#renombrar-un-repositori-remot","title":"Renombrar un repositori remot","text":"<p>L'ordre <code>git remote rename</code> permet canviar el nom d'un repositori remot associat al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote rename &lt;antic&gt; &lt;nou&gt;\n</code></pre></p> <ul> <li><code>&lt;antic&gt;</code>: Nom actual del repositori remot.</li> <li><code>&lt;nou&gt;</code>: Nou nom del repositori remot.</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#eliminar-un-repositori-remot","title":"Eliminar un repositori remot","text":"<p>L'ordre <code>git remote remove</code> permet eliminar un repositori remot associat al teu repositori local.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git remote remove &lt;nom&gt;\n</code></pre></p> <ul> <li><code>&lt;nom&gt;</code>: Nom del repositori remot a eliminar.</li> </ul>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#associacio-entre-branques-locals-i-remotes-git-push-set-upstream","title":"Associaci\u00f3 entre branques locals i remotes (<code>git push --set-upstream</code>)","text":"<p>De moment, les branques que hem creat resideixen en el repositori local, \u00e9s a dir, en el nostre dispositiu.</p> <p>Podem associar les branques locals a branques remotes, del repositori remot, perqu\u00e8 els canvis que fem localment es puguen veure reflectits en el repositori remot.</p> <p>Per fer-ho, utilitzarem la comanda <code>git push</code> amb l'opci\u00f3 <code>-u</code> o <code>--set-upstream</code>.</p> <pre><code>git push [-u|--set-upstream] &lt;remot&gt; &lt;branca&gt;\n</code></pre> <ul> <li><code>-u|--set-upstream</code>: Configura la branca local perqu\u00e8 s'associe amb la branca remota.</li> <li><code>&lt;remot&gt;</code>: \u00c0lies del repositori remot (configurat amb <code>git remote add</code>).</li> <li><code>&lt;branca&gt;</code>: Nom de la branca remota.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git push</code>: https://git-scm.com/docs/git-push</p> <p>Important</p> <p>Aquesta comanda funciona sobre la branca on estem situats (<code>HEAD</code>).</p> Figura 7: Associaci\u00f3 d'una branca local a una branca remota <p>Consell</p> <p>Pots configurar git perqu\u00e8 configure autom\u00e0ticament la branca local perqu\u00e8 s'associe amb la branca remota amb el mateix nom amb l'opci\u00f3 <code>push.autoSetupRemote</code>.</p> <pre><code>git config --global push.autoSetupRemote true\n</code></pre> <p>Associaci\u00f3 branca local i remota</p> <p>Vegem que inicialment la branca <code>main</code> no est\u00e0 associada a cap branca remota.</p> <p>Si intentem fer un <code>git push</code>, ens mostrar\u00e0 un missatge d'error com que hem d'anar associar una branca remota.</p> <pre><code>joapuiib@fp:~/git_remots (main) $ git lga\n* b7adb78 - (2 seconds ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* a41ab9e - (2 seconds ago) README.md: T\u00edtol - Joan Puigcerver\njoapuiib@fp:~/git_remots (main) $ git push\nfatal: The current branch main has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin main\n\nTo have this happen automatically for branches without a tracking\nupstream, see 'push.autoSetupRemote' in 'git help config'.\n</code></pre> <p>Associem les branques <code>main</code> local i remota amb l'ordre <code>git push --set-upstream</code>.</p> <p>Localment, s'ha creat la refer\u00e8ncia <code>origin/main</code> que apunta a la branca remota <code>main</code>.</p> <pre><code>joapuiib@fp:~/git_remots (main) $ git push --set-upstream origin main\nEnumerating objects: 6, done.\nCounting objects: 100% (6/6), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (6/6), 503 bytes | 503.00 KiB/s, done.\nTotal 6 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)\nremote: Resolving deltas: 100% (1/1), done.\nTo github.com:joapuiib/git_remots.git\n * [new branch]      main -&gt; main\nbranch 'main' set up to track 'origin/main'.\njoapuiib@fp:~/git_remots (main) $ git lga\n* b7adb78 - (2 seconds ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (2 seconds ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Vegem que els canvis s'han publicat correctament al repositori remot:</p> <p> Figura 8: Canvis publicats a GitHub </p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#clonacio-dun-repositori-remot-git-clone","title":"Clonaci\u00f3 d'un repositori remot (<code>git clone</code>)","text":"<p>L'ordre <code>git clone</code> permet copiar un repositori remot a un repositori local en el teu sistema, des del qual podr\u00e0s realitzar canvis.</p> <p>Aquesta ordre c\u00f2pia els continguts del Directori de Treball i tota la informaci\u00f3 del Repositori Local, incloent la hist\u00f2ria de canvis. A m\u00e9s, configura autom\u00e0ticament el repositori remot com a <code>origin</code>.</p> <p>La sintaxi \u00e9s la seg\u00fcent: <pre><code>git clone &lt;url&gt; [&lt;directori&gt;]\n</code></pre></p> <ul> <li><code>&lt;url&gt;</code>: URL del repositori remot. Pot ser una URL HTTPS o SSH.</li> <li><code>&lt;directori&gt;</code>: Opcional. Nom del directori on es copiar\u00e0 el repositori. Per defecte, es crea un directori amb     el nom del repositori remot.</li> </ul> Figura 9: Clonaci\u00f3 d'un repositori remot <p>Pau clona el repositori remot</p> <p>En aquest exemple, el desenvolupador Pau clonar\u00e0 el repositori remot <code>git_remots</code> sobre el directori <code>~/git_remots_pau</code> del seu sistema.</p> <p>S'ha modificat el prompt per indicar les comandes que executaria Pau.</p> <pre><code>pau@fp:~ $ git clone git@github.com:joapuiib/git_remots.git ~/git_remots_pau\nCloning into '/home/pau/git_remots_pau'...\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 6 (delta 1), reused 6 (delta 1), pack-reused 0 (from 0)\nReceiving objects: 100% (6/6), done.\nResolving deltas: 100% (1/1), done.\npau@fp:~ $ cd ~/git_remots_pau\npau@fp:~/git_remots_pau (main) $ ls\nREADME.md\npau@fp:~/git_remots_pau (main) $ git lg\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>S'observa que s'ha clonat correctament el repositori remot <code>git_remots</code> al directori <code>~/git_remots_pau</code>, que cont\u00e9 els fitxers i la hist\u00f2ria de canvis del repositori remot.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#sincronitzacio-entre-repositoris-git-fetch","title":"Sincronitzacio entre repositoris (<code>git fetch</code>)","text":"<p>Preparaci\u00f3: Pau realitza canvis</p> <p>Pau crea el fitxer <code>pau.txt</code> amb el contingut <code>Canvi realitzat per Pau</code>.</p> <pre><code>pau@fp:~/git_remots_pau (main) $ echo \"Canvi realitzat per Pau\" &gt; pau.txt\npau@fp:~/git_remots_pau (main) $ git status\n    On branch main\nYour branch is up to date with 'origin/main'.\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n    pau.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\npau@fp:~/git_remots_pau (main) $ git add pau.txt\npau@fp:~/git_remots_pau (main) $ git commit -m \"pau.txt: Canvi realitzat per Pau\"\n[main 1b3b4b0] pau.txt: Canvi realitzat per Pau\n 1 file changed, 1 insertion(+)\n create mode 100644 pau.txt\npau@fp:~/git_remots_pau (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Despr\u00e9s, Pau puja els canvis al repositori remot.</p> <pre><code>pau@fp:~/git_remots_pau (main) $ git push\nEnumerating objects: 4, done.\nCounting objects: 100% (4/4), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 303 bytes | 303.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:joapuiib/git_remots.git\n   b7adb78..1b3b4b0  main -&gt; main\npau@fp:~/git_remots_pau (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (HEAD -&gt; main, origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>En aquest moment, Paul ha realitzat un canvi en el repositori remot, que no est\u00e0 reflectit en el nostre repositori local.</p> <pre><code>joapuiib@fp:~/git_remots (main) $ git lg\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main, origin/main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>Per sincronitzar l'estat dels repositoris, utilitzarem l'ordre <code>git fetch</code>.</p> Figura 10: Sincronitzaci\u00f3 entre repositoris <p>Aquesta ordre actualitza la informaci\u00f3 de les branques remotes <code>origin/&lt;branca&gt;</code> al nostre repositori local, per\u00f2 no aplicar\u00e0 els canvis a les nostres branques locals.</p> <pre><code>git fetch [&lt;options&gt;] [&lt;remot&gt;]\n</code></pre> <ul> <li><code>&lt;options&gt;</code>: Opcions de la comanda.</li> <li><code>&lt;remot&gt;</code>: \u00c0lies del repositori remot. Per defecte, s'utilitza <code>origin</code>.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git fetch</code>: https://git-scm.com/docs/git-fetch</p> <p>Info</p> <p>Aquesta ordre \u00e9s \u00fatil per obtindre la informaci\u00f3 dels canvis realitzats en el repositori remot i decidir si volem incorporar-los al nostre repositori local.</p> <p>git fetch</p> <p>Sincronitzem el repositori local amb el repositori remot, que cont\u00e9 els canvis realitzats per Pau.</p> <pre><code>joapuiib@fp:~/git_remots (main) $ git fetch\nremote: Enumerating objects: 4, done.\nremote: Counting objects: 100% (4/4), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (3/3), done.\nFrom github.com:joapuiib/git_remots\n   b7adb78..1b3b4b0  main     -&gt; origin/main\njoapuiib@fp:~/git_remots (main) $ git lg\n* 1b3b4b0 - (2 minutes ago) pau.txt: Canvi realitzat per Pau - Pau (origin/main)\n* b7adb78 - (10 minutes ago) README.md: Descripci\u00f3 - Joan Puigcerver (HEAD -&gt; main)\n* a41ab9e - (10 minutes ago) README.md: T\u00edtol - Joan Puigcerver\n</code></pre> <p>S'observa que la branca <code>origin/main</code> s'ha actualitzat amb el canvi realitzat per Pau, per\u00f2 la branca <code>main</code> continua en el commit anterior.</p>","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#incorporacio-de-canvis-git-pull","title":"Incorporaci\u00f3 de canvis (<code>git pull</code>)","text":"","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#recursos-addicionals","title":"Recursos addicionals","text":"","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]},{"location":"apunts/03_remots/#bibliografia","title":"Bibliografia","text":"","tags":["git clone","git fetch","git pull","git push","git remote","github","ssh","personal access token","origin","remot","--set-upstream"]}]}