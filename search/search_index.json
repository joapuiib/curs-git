{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#objectius","title":"Objectius","text":"<ul> <li>Con\u00e8ixer els conceptes b\u00e0sics de control de versions mitjan\u00e7ant Git i el seu \u00fas en el context del desenvolupament de programari.</li> <li>Aprendre a utilitzar Git per a gestionar projectes de desenvolupament de programari.</li> <li>Con\u00e8ixer i utilitzar plataformes de desenvolupament col\u00b7laboratiu com GitHub.</li> <li>Con\u00e8ixer i utilitzar eines de gesti\u00f3 de projectes proporcionades per GitHub.</li> <li>Promoure la utilitzaci\u00f3 de Git i GitHub en l\u2019aula com a eina de treball col\u00b7laboratiu.</li> </ul>"},{"location":"#continguts","title":"Continguts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git<ul> <li>Instal\u00b7laci\u00f3</li> <li>Configuraci\u00f3</li> <li>Estructura d'un repositori</li> <li>Flux de treball</li> <li>Inicialitzaci\u00f3 d'un repositori</li> <li>Realitzaci\u00f3 de canvis</li> </ul> </li> <li>Bloc 2: Remots<ul> <li>Creaci\u00f3 d'un repositori remot a GitHub.</li> <li>Configurar un repositori remot.</li> <li>M\u00e8todes d'autenticaci\u00f3.</li> <li>Clonaci\u00f3 d'un repositori remote.</li> <li>Associaci\u00f3 entre branques locals i remotes.</li> <li>Publicaci\u00f3 i incorporaci\u00f3 de canvis.</li> </ul> </li> <li>Bloc 3: Branques<ul> <li>Creaci\u00f3 de branques.</li> <li>Navegar entre branques.</li> <li>Sincronitzaci\u00f3 de branques</li> <li>Fusi\u00f3 de branques (<code>merge</code>)</li> <li>Canvi de base (<code>rebase</code>)</li> <li>Incorporaci\u00f3 des del remot: <code>merge</code> i <code>rebase</code>.</li> </ul> </li> <li>Bloc 4: Estrat\u00e8gies de ramificaci\u00f3<ul> <li>GitFlow</li> </ul> </li> <li>Bloc 5: Gesti\u00f3 de projectes<ul> <li>Organitzacions a GitHub</li> <li>GitHub Projects</li> <li>Forks i Pull Requests</li> </ul> </li> </ul>"},{"location":"#dirigit-a","title":"Dirigit a","text":"<ul> <li>Professorat de la fam\u00edlia d'Inform\u00e0tica i Comunicacions.</li> </ul>"},{"location":"apunts/","title":"Apunts","text":"<ul> <li>Bloc 1: Introducci\u00f3 a Git</li> <li>Bloc 2: Remots</li> <li>Bloc 3: Branques</li> <li>Bloc 4: Estrat\u00e8gies de ramificaci\u00f3</li> <li>Bloc 5: Gesti\u00f3 de projectes</li> </ul>"},{"location":"apunts/01_introduccio/","title":"Bloc 1: Introducci\u00f3 a Git","text":""},{"location":"apunts/01_introduccio/#que-es-git","title":"Qu\u00e8 \u00e9s Git?","text":"<p>Git \u00e9s un sistema de control de versions lliure i distribu\u00eft dissenyat per gestionar xicotets i grans projectes amb rapidesa i efici\u00e8ncia. L'objectiu principal de Git \u00e9s controlar i gestionar els canvis realitzats en una enorme quantitat de fitxers d'una manera f\u00e0cil i eficient.</p> <p>Git va ser dissenyat en 2005 per Linux Torvalds, creador del kernel del sistema operatiu Linux, i des d'aleshores, s'ha convertit en una eina fonamental i inprescindible en la gesti\u00f3 de codi font en projectes col\u00b7laboratius.</p> <p>Git est\u00e0 basat en repositoris, que s'inicialitzen en un directori concret i contenen tota la informaci\u00f3 dels canvis realitzats en tot l'arbre de directoris i fitxers a partir d'aquest directori.</p> <p>Els principals objectius i caracter\u00edstiques de Git s\u00f3n:</p> <ul> <li>Control de versions: Git realitza un seguiment de les modificacions als arxius al llarg del temps,     la qual cosa permet als desenvolupadors vore i recuperar versions anteriors del seu codi.     Aquesta caracter\u00edstica \u00e9s essencial per a treballar en equips i per a solucionar problemes o errors.</li> <li>Distribu\u00eft: Cada c\u00f2pia d'un repositori Git cont\u00e9 tot l'historial de canvis i pot operar de manera independent.     Aix\u00f2 facilita el treball fora de l\u00ednia i la col\u00b7laboraci\u00f3 en equips distribu\u00efts.</li> <li>Branca i fusi\u00f3: Git facilita la creaci\u00f3 de branques (branching) per a desenvolupar caracter\u00edstiques     o solucionar problemes sense afectar la branca principal.     Despr\u00e9s, pots fusionar (merge) les branques de nou en la branca principal quan estiguen a punt.</li> <li>Gesti\u00f3 de conflictes: Git ofereix eines per a gestionar conflictes en cas que dues o m\u00e9s persones hagen realitzat     canvis en la mateixa part del codi.     Els desenvolupadors poden resoldre aquests conflictes manualment.</li> <li>Col\u00b7laboraci\u00f3: Git facilita la col\u00b7laboraci\u00f3 en projectes de codi obert o en equips,     ja que permet a m\u00faltiples persones treballar en el mateix projecte de manera eficient.     Plataformes com GitHub, GitLab i Bitbucket s'utilitzen com\u00fament per a allotjar repositoris Git en l\u00ednia i col\u00b7laborar en projectes.</li> <li>Codi obert i gratu\u00eft: Git \u00e9s de codi obert i gratu\u00eft, la qual cosa significa que qualsevol pot utilitzar-lo sense cost i contribuir al desenvolupament de l'eina.</li> </ul>"},{"location":"apunts/01_introduccio/#installacio","title":"Instal\u00b7laci\u00f3","text":"<p>Git est\u00e0 disponible a https://git-scm.com/ per a Windows, macOS i Linux.</p> UbuntuWindows <pre><code>sudo apt update\nsudo apt install git\n</code></pre> <p>Descarrega i executa l'instal\u00b7lador de Git des de https://git-scm.com/</p> <p>Una vegada instal\u00b7lat, pots utilitzar la consola Git Bash. \u00c9s una terminal basada l'int\u00e8rpret Bash, que et permetr\u00e0 realitzar les comandes de Git en la consola.</p> <p>Per defecte, Git utilitza l'editor <code>ViM</code>, un editor de text per terminal molt potent, per\u00f2 dif\u00edcil i poc intu\u00eftiu per treballar.</p> <p>Si desitgeu canviar l'editor per defecte, podeu utilitzar la seg\u00fcent comanda des de la consola:</p> <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre> <p>Editors de text</p> WindowsLinuxMultiplataforma <ul> <li><code>notepad</code>. Ve instal\u00b7lat per defecte.</li> <li>Notepad++.</li> </ul> <ul> <li><code>gedit</code>. Ve instal\u00b7lat per defecte en Ubuntu.</li> <li><code>nano</code>. Editor de text b\u00e0sic per terminal.</li> <li><code>vim</code>. Editor de text avan\u00e7at per terminal.<ul> <li><code>:w</code> per guardar.</li> <li><code>:q</code> per eixir.</li> </ul> </li> </ul> <ul> <li>Visual Estudio Code</li> </ul>"},{"location":"apunts/01_introduccio/#per-que-la-terminal","title":"Per qu\u00e8 la terminal?","text":"<p>En aquest material, utilitzarem la terminal per a interactuar amb Git, per\u00f2 aix\u00f2 no significa que siga l'\u00fanica manera de fer-ho. De fet, pr\u00e0cticament tots els entorns de desenvolupament moderns tenen integraci\u00f3 amb Git, la qual cosa permet realitzar les mateixes operacions que proporciona la terminal, per\u00f2 de manera m\u00e9s visual i intu\u00eftiva.</p> <p>No obstant aix\u00f2, \u00e9s important con\u00e9ixer com funcionen les comandes de Git en la terminal, per diferents raons:</p> <ul> <li>Portabilitat: La terminal \u00e9s un entorn com\u00fa en tots els sistemes operatius i en qualsevol entorn de desenvolupament.</li> <li>Flexibilitat: La terminal permet realitzar operacions m\u00e9s avan\u00e7ades i personalitzades que les interf\u00edcies gr\u00e0fiques.</li> <li>Comprensi\u00f3: Permet entendre com funcionen les comandes de Git i els processos que realitza en el sistema.</li> </ul>"},{"location":"apunts/01_introduccio/#inicialitzacio-dun-repositori","title":"Inicialitzaci\u00f3 d'un repositori","text":"<p>Per a comen\u00e7ar a utilitzar Git en un projecte, primer cal inicialitzar un repositori en un directori concret. <pre><code>git init [&lt;directory&gt;]\n</code></pre></p> <ul> <li><code>directory</code>: Directori on es vol inicialitzar el repositori. Si no s'especifica, s'utilitza el directori actual.</li> </ul> <p>Aquesta comanda crea un directori ocult anomenat <code>.git</code> que cont\u00e9 tota la informaci\u00f3 relativa al Repositori Local.</p> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git init</code>: https://git-scm.com/docs/git-init</p> <pre><code>joapuiib@fp:~ $ mkdir 01_introduccio\njoapuiib@fp:~ $ cd 01_introduccio\njoapuiib@fp:~/01_introduccio $ ls -a # (1)!\n.  ..\njoapuiib@fp:~/01_introduccio $ git init\nhint: Using 'master' as the name for the initial branch. This default branch name\nhint: is subject to change. To configure the initial branch name to use in all\nhint: of your new repositoris, which will suppress this warning, call:\nhint:\nhint: git config --global init.dafaultBranch &lt;name&gt;\nhint:\nhint: Names commonly chosen instead of 'master' are 'main', 'trunk' and\nhint: 'development'. The just-created branch can be renamed via this command:\nhint:\nhint: git branch -m &lt;name&gt;\nInitialized empty Git repository in /home/joapuiib/01_introduccio/.git/\njoapuiib@fp:~/01_introduccio (master) $ git branch -m main\njoapuiib@fp:~/01_introduccio (main) $ ls -a # (2)!\n.  ..  .git/\njoapuiib@fp:~/01_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nNothing to commit (create/copy files and use \"git add\" to track)\n</code></pre> <ol> <li>L'opci\u00f3 <code>-a</code> mostra tots els fitxers, inclosos els ocults que comencen amb un punt.</li> <li>S'ha creat el directori ocult <code>.git</code> que cont\u00e9 tota la informaci\u00f3 del repositori.</li> </ol> <p>L'ordre <code>git status</code> ens mostra l'estat actual del nostre repositori. Podem observar que estem en la branca <code>main</code> i que de moment no s'ha realitzat cap canvi.</p> <p>Nota</p> <p>S'ha canviat el nom de la branca principal de <code>master</code> a <code>main</code> per a seguir les recomanacions de la comunitat de desenvolupament.</p> <p>Vegeu: Regarding Git and Branch Naming</p>"},{"location":"apunts/01_introduccio/#estructura-dun-repositori-de-git","title":"Estructura d'un repositori de Git","text":"<p>En aquesta introducci\u00f3, ens centrarem en com funcionen els repositoris de Git d'una manera local, on encara no haurem connectat cap repositori remot.</p> <p>Abans que res, hem de con\u00e9ixer l'estructura d'un repositori de Git.</p> Figura 1: Components d'un repositori de Git. <p>En la figura anterior podem observar el que es coneix com Entorn de desenvolupament o Development Enviorment. Aquesta part est\u00e0 present localment en el teu dispositiu on realitzar\u00e0s els canvis i desenvolupament del teu projecte.</p> <p>D'una altra banda, est\u00e0 el Repositori Remot, que normalment s'allotja a un servidor accessible per tots els desenvolupadors.</p> <p>Dins de l'Entorn de desenvolupament trobem els seg\u00fcents components:</p> <ul> <li>Directori de treball o Working directory: Directori o carpeta del sistema on s'emmagatzema localment     els continguts del repositori.</li> <li>\u00c0rea de preparaci\u00f3 o Staging Area: \u00c0rea que s'utilitza per indicar quins canvis volen ser confirmats.</li> <li>Repositori local o Local repository: Repositori emmagatzemat localment on es queden registrats totes les versions     i canvis realitzats en els fitxers del repositori, aix\u00ed com la informaci\u00f3 de les branques i les etiquetes.</li> </ul>"},{"location":"apunts/01_introduccio/#flux-de-treball","title":"Flux de treball","text":"<p>Quan treballes amb un projecte de Git, els canvis es realitzen sobre el Directori de treball. Aquests canvis poden ser:</p> <ul> <li>Crear un nou fitxer. El nou fitxer comen\u00e7a en l'estat Untracked, \u00e9s a dir, no est\u00e0 sotm\u00e8s a seguiment per Git.</li> <li>Modificar un fitxer amb seguiment. El fitxer modificat es trobar\u00e0 en l'estat Modified.</li> <li>Eliminar un fitxer amb seguiment. El fitxer eliminat es trobar\u00e0 en l'estat Deleted.</li> </ul> <p>Si executem l'ordre <code>git status</code>, ens mostrar\u00e0 l'estat actual dels fitxers amb els tres estats anteriors de color roig.</p> <p>Aquests canvis no formen part del repositori. Abans, cal afegir-los a l'\u00c0rea de preparaci\u00f3 amb la comanda <code>git add</code>, que canviar\u00e0 l'estat dels fitxers Staged (mostrat en color verd amb <code>git status</code>).</p> <p>Per \u00faltim, tots els canvis de l'\u00c0rea de preparaci\u00f3 es poden confirmar i fer efectius en el Repositori local amb la comanda <code>git commit</code>.</p> Figura 2: Flux de treball en un repositori de Git. <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de:</p> <ul> <li><code>git status</code>: https://git-scm.com/docs/git-status</li> <li><code>git add</code>: https://git-scm.com/docs/git-add</li> <li><code>git commit</code>: https://git-scm.com/docs/git-commit</li> </ul>"},{"location":"apunts/01_introduccio/#afegir-fitxers-a-larea-de-preparacio","title":"Afegir fitxers a l'\u00c0rea de Preparaci\u00f3","text":"<p>Afegim el primer fitxer <code>README.md</code> al nostre repositori.</p> <p>Info</p> <p>\u00c9s recomanable crear un fitxer <code>README.md</code> en tots els projectes per a descriure el seu prop\u00f2sit, com s'utilitza i qualsevol altra informaci\u00f3 rellevant.</p> <pre><code>joapuiib@fp:~/01_introduccio (main) $ echo \"# 01 - Introducci\u00f3 a Git\" &gt; README.md\njoapuiib@fp:~/01_introduccio (main) $ echo \"Estem aprenent a utilitzar Git!\" &gt;&gt; README.md\njoapuiib@fp:~/01_introduccio (main) $ cat README.md\n# 01 - Introducci\u00f3 a Git\nEstem aprenent a utilitzar Git!\njoapuiib@fp:~/01_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nUntracked files:\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)\n        README.md\n\nNothing added to commit but untracked files present (use \"git add\" to track)\n</code></pre> <p>S'ha creat el fitxer <code>README.md</code> i s'ha afegit el seu contingut. Aquest fitxer resideix en el Directori de treball.</p> <p>La comanda <code>git status</code> ens mostra que no s'est\u00e0 realitzant cap seguiment del fitxer <code>README.md</code>, que es troba en l'estat Untracked.</p> Figura 3: Fitxer sense seguiment (untracked). <p>Per afegir els canvis al nostre repositori, el seg\u00fcent pas \u00e9s afegir els canvis a l'\u00c0rea de Preparaci\u00f3 amb l'ordre <code>git add</code>. Aquesta comanda permet especificar quins canvis es desitja afegir.</p> <p>Info</p> <pre><code>git add &lt;path&gt;\n</code></pre> <ul> <li><code>path</code>: Ruta del fitxer o directori que es vol afegir a l'\u00c0rea de Preparaci\u00f3.</li> </ul> <pre><code>joapuiib@FP:~/01_introduccio (main) $ git add README.md\njoapuiib@FP:~/01_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\n</code></pre> <p>Vegem com el fitxer <code>README.md</code> ha passat a l'estat Staged i est\u00e0 preparat per a ser confirmat.</p> Figura 4: Fitxer a l'\u00e0rea de preparaci\u00f3."},{"location":"apunts/01_introduccio/#confirmar-canvis","title":"Confirmar canvis","text":"<p>Una vegada afegits tots els canvis a l'\u00c0rea de Preparaci\u00f3, ja podem confirmar-los mitjan\u00e7ant l'ordre <code>git commit</code>.</p> <pre><code>git commit [-a] [-m \"&lt;message&gt;\"]\n</code></pre> <ul> <li><code>-a</code>: Opcional. Afegix tots els fitxers modificats i eliminats a l'\u00c0rea de Preparaci\u00f3 (sense necessitat de <code>git add</code>).</li> <li><code>-m \"&lt;message&gt;\"</code>: Opcional. Missatge que descriu el canvi realitzat en el <code>commit</code>.</li> </ul> <p>Warning</p> <p>Si no s'especifica el missatge amb <code>-m</code>, s'obrir\u00e0 l'editor per defecte(1) per a introduir el missatge del <code>commit</code>.</p> <ol> <li><code>ViM</code> per defecte. Pot ser configurat:      <pre><code>git config --global core.editor &lt;editor&gt;\n</code></pre></li> </ol> Figura 5: Estat del repositori de Git abans de fer un `commit`. <p>Aquesta ordre crea un nou <code>commit</code>, que \u00e9s una instant\u00e0nia de l'estat actual dels fitxers del repositori i que cont\u00e9 tota la informaci\u00f3 relativa als canvis realitzats.</p> <p>Cadascun dels <code>commit</code> cont\u00e9 la seg\u00fcent informaci\u00f3:</p> <ul> <li>Autor: Persona que ha realitzat el <code>commit</code>.</li> <li>Correu electr\u00f2nic: Correu electr\u00f2nic de l'autor.</li> <li>Data: Data i hora en qu\u00e8 s'ha realitzat el <code>commit</code>.</li> <li>Missatge: Descripci\u00f3 dels canvis realitzats en el <code>commit</code>.</li> <li>Identificador o <code>hash</code>: Codi \u00fanic generat autom\u00e0ticament que identifica el <code>commit</code>.</li> <li>Canvis: Llista de fitxers modificats, afegits o eliminats en el <code>commit</code> i els canvis realitzats en ells.</li> </ul> <p>Per tant, abans de realitzar un <code>commit</code>, \u00e9s necessari configurar el nom i el correu electr\u00f2nic de l'autor.</p> <pre><code>git config --global user.name &lt;name&gt;\ngit config --global user.email &lt;email&gt;\n</code></pre> <pre><code>joapuiib@FP:~/01_introduccio (main) $ git config --global user.name \"Joan Puigcerver Ib\u00e1\u00f1ez\"\njoapuiib@FP:~/01_introduccio (main) $ git config --global user.email \"j.puigcerveribanez@edu.gva.es\"\n</code></pre> <p>Amb aquesta informaci\u00f3 configurada, ja podem realitzar el nostre primer <code>commit</code>.</p> <pre><code>joapuiib@FP:~/01_introduccio (main) $ git status\nOn branch main\n\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached &lt;file&gt;...\" to unstage)\n        new file:   README.md\njoapuiib@FP:~/01_introduccio (main) $ git commit -m \"Added README.md\"\n[main (root-commit) 8e70293] Added README.md\n 1 file changed, 2 insertions(+)\n create mode 100644 README.md\njoapuiib@FP:~/01_introduccio (main) $ git status\nOn branch main\n\nnothing to commit, working tree clean\n</code></pre> <p>Vegem que l'estat del nostre repositori ha canviat i ja no hi ha canvis pendents de confirmar. A m\u00e9s, s'ha creat el primer <code>commit</code> amb el missatge <code>Added README.md</code> i identificador <code>8e70293</code>.</p> Figura 6: Estat del repositori de Git despr\u00e9s de fer un `commit`. <p>Podem consultar la informaci\u00f3 del nou <code>commit</code> amb l'ordre <code>git show</code>.</p> <pre><code>joapuiib@FP:~/01_introduccio (main) $ git show 8e70293\ncommit 8e702933d5dbec9ee71100a1599ae4491085e1aa (HEAD -&gt; main)\nAuthor: Joan Puigcerver Ib\u00e1\u00f1ez &lt;j.puigcerveribanez@edu.gva.es&gt;\nDate:   Fri Oct 13 16:06:59 2023 +0200\n\n    Added README.md\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..6d747b3\n--- /dev/null\n+++ b/README.md\n@@ -0,0 +1,2 @@\n+# 01 - Introducci\u00f3 a Git\n+Estem aprenent a utilitzar Git!\n</code></pre>"},{"location":"apunts/01_introduccio/#diferencies-entre-versions","title":"Difer\u00e8ncies entre versions","text":"<p>Una ferramenta molt \u00fatil de Git \u00e9s <code>git diff</code>, que permet comparar les difer\u00e8ncies entre els canvis realitzats en el Directori de treball o l'\u00c0rea de Preparaci\u00f3 respecte del Repositori local.</p> <p>La sintaxi amb les opcions b\u00e0siques es: <pre><code>git diff [--staged] [&lt;path&gt;]\n</code></pre></p> <ul> <li><code>--staged</code>: Opcional. Mostra les difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local.     Si no s'indica, es compararan les difer\u00e8ncies entre el Directori de treball i el Repositori local.</li> <li><code>&lt;path&gt;</code>: Opcional. Fitxer o directori sobre el qual es vol comparar les difer\u00e8ncies.     Si no s'indica, es compararan totes les difer\u00e8ncies.</li> </ul> <p>Documentaci\u00f3</p> <p>Documentaci\u00f3 oficial de <code>git diff</code>: https://git-scm.com/docs/git-diff</p> Figura 7: Resum de `git diff`. <p>Difer\u00e8ncies entre el Directori de treball i el Repositori local</p> <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> del Directori de treball i el Repositori local.</p> <pre><code>joapuiib@FP:~/01_introduccio (main) $ echo \"Aquesta \u00e9s una l\u00ednia nova\" &gt;&gt; README.md\njoapuiib@FP:~/01_introduccio (main) $ git status\nOn branch main\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n        modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\njoapuiib@FP:~/01_introduccio (main) $ git diff\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> <p>Difer\u00e8ncies entre l'\u00c0rea de Preparaci\u00f3 i el Repositori local</p> <p>Observem les difer\u00e8ncies entre el fitxer <code>README.md</code> de l'\u00c0rea de Preparaci\u00f3 i el Repositori local.</p> <pre><code>joapuiib@FP:~/01_introduccio (main) $ git add README.md\njoapuiib@FP:~/01_introduccio (main) $ git status\nOn branch main\n\nChanges to be committed:\n  (use \"git restore --staged &lt;file&gt;...\" to unstage)\n        modified:   README.md\n\njoapuiib@FP:~/01_introduccio (main) $ git diff --staged\ndiff --git a/README.md b/README.md\nindex 6d747b3..f3b3b3e 100644\n--- a/README.md\n+++ b/README.md\n@@ -1,2 +1,3 @@\n # 01 - Introducci\u00f3 a Git\n Estem aprenent a utilitzar Git!\n+Aquesta \u00e9s una l\u00ednia nova\n</code></pre> <p>Interpretaci\u00f3 de <code>git diff</code></p> <p>El format de les l\u00ednies de <code>git diff</code> \u00e9s el seg\u00fcent:</p> <ul> <li><code>diff --git a/README.md b/README.md</code>: Mostra els fitxers comparats.<ul> <li><code>a/README.md</code>: Fitxer original.</li> <li><code>b/README.md</code>: Fitxer modificat.</li> </ul> </li> <li><code>index 6d747b3..f3b3b3e 100644</code>: Mostra el hash dels fitxers comparats i els permisos.</li> <li><code>--- a/README.md</code>: Mostra la ruta del fitxer original.</li> <li><code>+++ b/README.md</code>: Mostra la ruta del fitxer modificat.</li> <li><code>@@ -1,2 +1,3 @@</code>: Mostra la posici\u00f3 de les l\u00ednies modificades.<ul> <li><code>-1,2</code>: Els canvis comen\u00e7en a la l\u00ednia 1 i afecten 2 l\u00ednies en el fitxer original.</li> <li><code>+1,3</code>: Els canvis comen\u00e7en a la l\u00ednia 1 i afecten 3 l\u00ednies en el fitxer modificat.</li> </ul> </li> </ul> <p>Despr\u00e9s, es mostren les l\u00ednies modificades:</p> <ul> <li><code>-</code>: L\u00ednia eliminada.</li> <li><code>+</code>: L\u00ednia afegida.</li> </ul> <p>En l'exemple anterior, s'ha afegit la l\u00ednia <code>Aquesta \u00e9s una l\u00ednia nova</code> al fitxer <code>README.md</code>.</p>"},{"location":"apunts/01_introduccio/#descartar-canvis","title":"Descartar canvis","text":""},{"location":"apunts/01_introduccio/#historic-de-canvis","title":"Hist\u00f2ric de canvis","text":""},{"location":"apunts/01_introduccio/#configuracio","title":"Configuraci\u00f3","text":""},{"location":"apunts/01_introduccio/#ignorar-fitxers","title":"Ignorar fitxers","text":""},{"location":"apunts/01_introduccio/#recursos-addicionals","title":"Recursos addicionals","text":"<ul> <li>Curs de Git des de zero per MoureDev</li> <li>https://github.com/UnseenWizzard/git_training</li> </ul>"},{"location":"apunts/01_introduccio/#bibliografia","title":"Bibliografia","text":"<ul> <li>https://github.com/UnseenWizzard/git_training</li> <li>https://www.theserverside.com/feature/Why-GitHub-renamed-its-master-branch-to-main</li> <li>https://stackoverflow.com/questions/35430584/how-is-the-git-hash-calculated</li> <li>https://en.wikipedia.org/wiki/Diff</li> </ul>"}]}